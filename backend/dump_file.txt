--
-- PostgreSQL database dump
--

drop database androidperformance;
create database androidperformance;
\c androidperformance;


SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

CREATE DOMAIN eventstamp_t AS timestamp without time zone;

CREATE DOMAIN inetn_t AS inet ;
SET default_tablespace = '';
SET default_with_oids = false;

CREATE SEQUENCE measurement_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483648
    CACHE 1;

SELECT pg_catalog.setval('measurement_seq', 1, false);

CREATE SEQUENCE ping_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483648
    CACHE 1;

SELECT pg_catalog.setval('ping_seq', 1, false);

CREATE SEQUENCE network_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483648
    CACHE 1;

SELECT pg_catalog.setval('network_seq', 1, false);

CREATE SEQUENCE link_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483648
    CACHE 1;

SELECT pg_catalog.setval('link_seq', 1, false);

CREATE SEQUENCE throughput_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483648
    CACHE 1;

SELECT pg_catalog.setval('throughput_seq', 1, false);

CREATE SEQUENCE wifi_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483648
    CACHE 1;

SELECT pg_catalog.setval('wifi_seq', 1, false);

CREATE SEQUENCE wifi_neighbor_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483648
    CACHE 1;

SELECT pg_catalog.setval('wifi_neighbor_seq', 1, false);

CREATE SEQUENCE gps_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483648
    CACHE 1;

SELECT pg_catalog.setval('gps_seq', 1, false);

CREATE SEQUENCE battery_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483648
    CACHE 1;

SELECT pg_catalog.setval('battery_seq', 1, false);


CREATE SEQUENCE usage_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483648
    CACHE 1;

SELECT pg_catalog.setval('usage_seq', 1, false);

CREATE SEQUENCE application_use_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483648
    CACHE 1;

SELECT pg_catalog.setval('application_use_seq', 1, false);


CREATE TABLE gps(
	gpsid integer DEFAULT nextval('gps_seq'::regclass) ,
	latitude float ,
	longitude float ,
	altitude float 
);

CREATE TABLE wifi_hotspot(
	macaddress varchar(18) ,
	ssid varchar(30),
	frequency integer,
	capability varchar(20)	
);

CREATE TABLE wifi(
	wifiid integer DEFAULT nextval('wifi_seq'::regclass),
	ipaddress varchar(15),
	detailedinfo varchar(40),
	rssi integer,
	signalstrength integer,
	speed integer,
	units varchar(10),
	connection varchar(18)
);

CREATE TABLE wifi_neighbor(
	wifi_neighbor_id integer DEFAULT nextval('wifi_neighbor_seq'::regclass),
	macaddress varchar(18),
	ispreferred integer,
	signallevel integer,
	wifiid integer DEFAULT nextval('wifi_seq'::regclass)
	
);

CREATE TABLE battery(
	batteryid integer DEFAULT nextval('battery_seq'::regclass) ,
	technology varchar(20),
	ispresent integer,
	plugged integer,
	scale integer,
	health integer,
	voltage integer,
	level integer,
	temperature integer,
	status integer
	
);

CREATE TABLE link(
	linkid integer DEFAULT nextval('link_seq'::regclass) ,
	count int,
	message_size bigint,
	duration integer,
	speed float ,
	port integer ,
	ip_address varchar(20) 
);

CREATE TABLE throughput(
	throughputid integer DEFAULT nextval('throughput_seq'::regclass) ,
	uplinkid integer DEFAULT nextval('link_seq'::regclass) ,
	downlinkid integer DEFAULT nextval('link_seq'::regclass) 
);

CREATE TABLE device (
    deviceid varchar(20) ,
    phonetype varchar(20),
    phonenumber varchar(15) ,
    softwareversion varchar(10),
    phonemodel varchar(20),
    androidversion varchar(10),
    phonebrand varchar(20),
    devicedesign varchar(20),
    manufacturer varchar(20),
    productname varchar(20),
    radioversion varchar(20),
    boardname varchar(20)
);

CREATE TABLE network (
    networkid integer DEFAULT nextval('network_seq'::regclass) ,
    networkcountry varchar(2),
    networkname varchar(15),
    networktype varchar(10),
    connectiontype varchar(10),
    mobilenetworkinfo text,
    wifistate varchar(20),
    cellid varchar(20),
    celllac varchar(20),
    datastate varchar(30),
    dataactivity varchar(30),
    signalstrength varchar(3)
);

CREATE TABLE sim (
    serialnumber varchar(20) ,
    state varchar(20),
    operatorCode varchar(8),
    operatorName varchar(20),
    networkcountry varchar(5)
);

CREATE TABLE measurement (
    measurementid integer DEFAULT nextval('measurement_seq'::regclass) ,
    "time" timestamp without time zone ,
    deviceid varchar(20),
    networkid integer DEFAULT nextval('network_seq'::regclass),
    serialnumber varchar(20),
    throughputid integer DEFAULT nextval('throughput_seq'::regclass),
    gpsid integer DEFAULT nextval('gps_seq'::regclass),
    batteryid integer DEFAULT nextval('battery_seq'::regclass),
    usageid integer DEFAULT nextval('usage_seq'::regclass),
    wifiid integer DEFAULT nextval('wifi_seq'::regclass) NULL
);

CREATE TABLE usage (
	usageid integer DEFAULT nextval('usage_seq'::regclass) ,
	total_sent bigint ,
	total_recv bigint ,
	mobile_sent bigint ,
	mobile_recv bigint 
);

CREATE TABLE application (
	name varchar(20) ,
	package varchar(50) 
);

CREATE TABLE application_use (
	application_useid integer DEFAULT nextval('application_use_seq'::regclass) ,
	package varchar(50) ,
	total_sent bigint ,
	total_recv bigint ,
	usageid integer DEFAULT nextval('usage_seq'::regclass) 
);


CREATE TABLE ping (
    avg double precision ,
    stdev double precision ,
    min double precision ,
    max double precision ,
    scrip varchar(20) ,
    dstip varchar(20) ,
    "time" timestamp without time zone,
    measurementid integer DEFAULT nextval('measurement_seq'::regclass) ,
    pingid integer DEFAULT nextval('ping_seq'::regclass) 
);



ALTER TABLE ONLY device
    ADD CONSTRAINT device_pkey  PRIMARY KEY (deviceid);
ALTER TABLE ONLY sim
    ADD CONSTRAINT sim_pkey  PRIMARY KEY (serialnumber);
ALTER TABLE ONLY application
    ADD CONSTRAINT application_pkey PRIMARY KEY (package);
ALTER TABLE ONLY measurement
    ADD CONSTRAINT measurement_pkey PRIMARY KEY (measurementid);
ALTER TABLE ONLY ping
    ADD CONSTRAINT ping_pkey PRIMARY KEY (pingid);
ALTER TABLE ONLY network
    ADD CONSTRAINT network_pkey PRIMARY KEY (networkid);
ALTER TABLE ONLY throughput
    ADD CONSTRAINT throughput_pkey PRIMARY KEY (throughputid);
ALTER TABLE ONLY link
    ADD CONSTRAINT link_pkey PRIMARY KEY (linkid);
ALTER TABLE ONLY gps
    ADD CONSTRAINT gps_pkey PRIMARY KEY (gpsid);
ALTER TABLE ONLY battery
    ADD CONSTRAINT battery_pkey PRIMARY KEY (batteryid);
ALTER TABLE ONLY usage
    ADD CONSTRAINT usage_pkey PRIMARY KEY (usageid);
ALTER TABLE ONLY application_use
    ADD CONSTRAINT application_use_pkey PRIMARY KEY (application_useid);
ALTER TABLE ONLY wifi
    ADD CONSTRAINT wifi_pkey PRIMARY KEY (wifiid);
ALTER TABLE ONLY wifi_hotspot
    ADD CONSTRAINT wifi_hotspot_pkey PRIMARY KEY (macaddress);
ALTER TABLE ONLY wifi_neighbor
    ADD CONSTRAINT wifi_neighbor_pkey PRIMARY KEY (wifi_neighbor_id);      

ALTER TABLE ONLY ping
    ADD CONSTRAINT ping_measurementid_fkey FOREIGN KEY (measurementid) REFERENCES measurement(measurementid);
ALTER TABLE ONLY throughput
    ADD CONSTRAINT throughput_uplinkid_fkey FOREIGN KEY (uplinkid) REFERENCES link(linkid),
    ADD CONSTRAINT throughput_downlinkid_fkey FOREIGN KEY (downlinkid) REFERENCES link(linkid);
ALTER TABLE ONLY measurement
	ADD CONSTRAINT measurement_deviceid_fkey FOREIGN KEY (deviceid) REFERENCES device(deviceid),
    ADD CONSTRAINT measurement_networkid_fkey FOREIGN KEY (networkid) REFERENCES network(networkid),
    ADD CONSTRAINT measurement_serialnumber_fkey FOREIGN KEY (serialnumber) REFERENCES sim(serialnumber),
    ADD CONSTRAINT measurement_throughputid_fkey FOREIGN KEY (throughputid) REFERENCES throughput(throughputid),
    ADD CONSTRAINT measurement_gpsid_fkey FOREIGN KEY (gpsid) REFERENCES gps(gpsid),
    ADD CONSTRAINT measurement_batteryid_fkey FOREIGN KEY (batteryid) REFERENCES battery(batteryid),
    ADD CONSTRAINT measurement_usageid_fkey FOREIGN KEY (usageid) REFERENCES usage(usageid),
    ADD CONSTRAINT measurement_wifiid_fkey FOREIGN KEY (wifiid) REFERENCES wifi(wifiid);
ALTER TABLE ONLY application_use
    ADD CONSTRAINT application_use_usageid_fkey FOREIGN KEY (usageid) REFERENCES usage(usageid),
    ADD CONSTRAINT application_use_package_fkey FOREIGN KEY (package) REFERENCES application(package);
ALTER TABLE ONLY wifi_neighbor
    ADD CONSTRAINT wifi_neighbor_wifiid_fkey FOREIGN KEY (wifiid) REFERENCES wifi(wifiid),
    ADD CONSTRAINT wifi_neighbor_macaddress_fkey FOREIGN KEY (macaddress) REFERENCES wifi_hotspot(macaddress);
ALTER TABLE ONLY wifi
    ADD CONSTRAINT wifi_macaddress_fkey FOREIGN KEY (connection) REFERENCES wifi_hotspot(macaddress);

alter sequence measurement_seq owned by measurement.measurementid;
alter sequence network_seq owned by network.networkid;
alter sequence link_seq owned by link.linkid;
alter sequence throughput_seq owned by throughput.throughputid;
alter sequence gps_seq owned by gps.gpsid;
alter sequence battery_seq owned by battery.batteryid;
alter sequence usage_seq owned by usage.usageid;
alter sequence application_use_seq owned by application_use.application_useid;
alter sequence wifi_seq owned by wifi.wifiid;
alter sequence wifi_neighbor_seq owned by wifi_neighbor.wifi_neighbor_id;