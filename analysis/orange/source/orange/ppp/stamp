(dp0
S'TComputeDomainContingency_ImputeWithClassifier'
p1
(i__main__
ClassDefinition
p2
(dp3
S'extended'
p4
I1
sS'imported'
p5
I0
sS'name'
p6
g1
sS'parent'
p7
S'TComputeDomainContingency'
p8
sS'abstract'
p9
I00
sS'components'
p10
(lp11
sS'properties'
p12
(lp13
(S'TLearner'
p14
S'learnerForDiscrete'
p15
S'learner_for_discrete'
p16
S'constructs a classifier for imputation of discrete values'
p17
I0
I0
I00
Ntp18
a(S'TLearner'
p19
S'learnerForContinuous'
p20
S'learner_for_continuous'
p21
S'constructs a classifier for imputation of continuous values'
p22
I0
I0
I00
Ntp23
a(S'bool'
p24
S'classIsOuter'
p25
S'class_is_outer'
p26
S'tells whether the class is the outer variable in contingencies'
p27
I0
I0
I01
Ntp28
asS'constants'
p29
(dp30
sbsS'TRuleDataStoppingCriteria_NoPositives'
p31
(i__main__
ClassDefinition
p32
(dp33
g4
I1
sg5
I0
sg6
g31
sg7
S'TRuleDataStoppingCriteria'
p34
sg9
I00
sg10
(lp35
sg12
(lp36
sg29
(dp37
sbsS'TLearner_Python'
p38
(i__main__
ClassDefinition
p39
(dp40
g4
I1
sg5
I0
sg6
g38
sg7
S'TLearner'
p41
sg9
I00
sg10
(lp42
sg12
(lp43
(S'int'
p44
S'needs'
p45
g45
S'the kind of data that learner needs'
p46
I01
I0
I01
Ntp47
asg29
(dp48
sbsS'TConditionalProbabilityEstimator_FromDistribution'
p49
(i__main__
ClassDefinition
p50
(dp51
g4
I1
sg5
I0
sg6
g49
sg7
S'TConditionalProbabilityEstimator'
p52
sg9
I00
sg10
(lp53
sg12
(lp54
(S'TContingency'
p55
S'probabilities'
p56
g56
S'Contingency that stores conditional probabilities'
p57
I0
I0
I00
Ntp58
a(S'bool'
p59
S'supportsDiscrete'
p60
S'supports_discrete'
p61
S'can estimate probabilities of discrete attributes'
p62
I01
I0
I01
Ntp63
a(S'bool'
p64
S'supportsContinuous'
p65
S'supports_continuous'
p66
S'can estimate probabilities of continuous attributes'
p67
I01
I0
I01
Ntp68
asg29
(dp69
sbsS'TFeatureInducer'
p70
(i__main__
ClassDefinition
p71
(dp72
g4
I1
sg5
I0
sg6
g70
sg7
S'TOrange'
p73
sg9
I01
sg10
(lp74
sg12
(lp75
sg29
(dp76
sbsS'TIMByRowsConstructor'
p77
(i__main__
ClassDefinition
p78
(dp79
g4
I1
sg5
I0
sg6
g77
sg7
S'TOrange'
p80
sg9
I01
sg10
(lp81
sg12
(lp82
sg29
(dp83
sbsS'TExamplesDistanceConstructor_Lp'
p84
(i__main__
ClassDefinition
p85
(dp86
g4
I1
sg5
I0
sg6
g84
sg7
S'TExamplesDistanceConstructor_Normalized'
p87
sg9
I00
sg10
(lp88
sg12
(lp89
(S'float'
p90
S'p'
p91
g91
g91
I0
I0
I01
Ntp92
a(S'bool'
p93
S'normalize'
p94
g94
S'tells whether to normalize distances between attributes'
p95
I0
I0
I01
Ntp96
a(S'bool'
p97
S'ignoreUnknowns'
p98
S'ignore_unknowns'
p99
S'if true (default: false) unknown values are ignored in computation'
p100
I0
I0
I01
Ntp101
a(S'bool'
p102
S'ignoreClass'
p103
S'ignore_class'
p104
S'if true (default), class value is ignored when computing distances'
p105
I0
I0
I01
Ntp106
asg29
(dp107
sbsS'TFilteredGenerator'
p108
(i__main__
ClassDefinition
p109
(dp110
g4
I1
sg5
I0
sg6
g108
sg7
S'TAdapterGenerator'
p111
sg9
I00
sg10
(lp112
sg12
(lp113
(S'TFilter'
p114
S'filter'
p115
g115
S'decides which examples are skipped'
p116
I0
I0
I00
Ntp117
a(S'TDomain'
p118
S'domain'
p119
g119
S'domain'
p120
I0
I0
I00
Ntp121
a(S'int'
p122
S'version'
p123
g123
S'unique version identifier'
p124
I01
I0
I01
Ntp125
asg29
(dp126
sbsS'TExamplesDistance_Maximal'
p127
(i__main__
ClassDefinition
p128
(dp129
g4
I1
sg5
I0
sg6
g127
sg7
S'TExamplesDistance_Normalized'
p130
sg9
I00
sg10
(lp131
sg12
(lp132
(S'TAttributedFloatList'
p133
S'normalizers'
p134
g134
S'normalizing factors for attributes'
p135
I0
I0
I00
Ntp136
a(S'TAttributedFloatList'
p137
S'bases'
p138
g138
S'lowest values for attributes'
p139
I0
I0
I00
Ntp140
a(S'TAttributedFloatList'
p141
S'averages'
p142
g142
S'average values for continuous attribute values'
p143
I0
I0
I00
Ntp144
a(S'TAttributedFloatList'
p145
S'variances'
p146
g146
S'variations for continuous attribute values'
p147
I0
I0
I00
Ntp148
a(S'int'
p149
S'domainVersion'
p150
S'domain_version'
p151
S'version of domain on which the ranges were computed'
p152
I0
I0
I01
Ntp153
a(S'bool'
p154
S'normalize'
p155
g155
S'tells whether to normalize distances between attributes'
p156
I0
I0
I01
Ntp157
a(S'bool'
p158
S'ignoreUnknowns'
p159
S'ignore_unknowns'
p160
S'if true (default: false) unknown values are ignored in computation'
p161
I0
I0
I01
Ntp162
asg29
(dp163
sbsS'TSubsetsGenerator_withRestrictions_iterator'
p164
(i__main__
ClassDefinition
p165
(dp166
g4
I1
sg5
I0
sg6
g164
sg7
S'TSubsetsGenerator_iterator'
p167
sg9
I00
sg10
(lp168
sg12
(lp169
(S'TSubsetsGenerator_iterator'
p170
S'subGenerator_iterator'
p171
S'sub_generator_iterator'
p172
S'subset generator'
p173
I0
I0
I00
Ntp174
a(S'TVarList'
p175
S'required'
p176
g176
S'set of required attributes'
p177
I0
I0
I00
Ntp178
a(S'TVarList'
p179
S'forbidden'
p180
g180
S'set of forbidden attributes'
p181
I0
I0
I00
Ntp182
a(S'TVarListList'
p183
S'forbiddenSubSubsets'
p184
S'forbidden_sub_subsets'
p185
S'set of forbidden subsets (attributes that must not occur together)'
p186
I0
I0
I00
Ntp187
a(S'TVarList'
p188
S'varList'
p189
S'var_list'
p190
S'a set of attributes from which subsets are generated'
p191
I0
I0
I00
Ntp192
asg29
(dp193
sbsS'TPreprocessor_discretize'
p194
(i__main__
ClassDefinition
p195
(dp196
g4
I1
sg5
I0
sg6
g194
sg7
S'TPreprocessor'
p197
sg9
I00
sg10
(lp198
sg12
(lp199
(S'TVarList'
p200
S'attributes'
p201
g201
S'attributes to be discretized (all, if not defined or empty)'
p202
I0
I0
I00
Ntp203
a(S'bool'
p204
S'discretizeClass'
p205
S'discretize_class'
p206
S'also discretize the class attribute (default: false)'
p207
I0
I0
I01
Ntp208
a(S'TDiscretization'
p209
S'method'
p210
g210
S'discretization method'
p211
I0
I0
I00
Ntp212
asg29
(dp213
sbsS'TProgressCallback_Python'
p214
(i__main__
ClassDefinition
p215
(dp216
g4
I1
sg5
I0
sg6
g214
sg7
S'TProgressCallback'
p217
sg9
I00
sg10
(lp218
sg12
(lp219
sg29
(dp220
sbsS'TAssociationRulesSparseInducer'
p221
(i__main__
ClassDefinition
p222
(dp223
g4
I1
sg5
I0
sg6
g221
sg7
S'TOrange'
p224
sg9
I00
sg10
(lp225
sg12
(lp226
(S'int'
p227
S'maxItemSets'
p228
S'max_item_sets'
p229
S'maximal number of itemsets (increase if you want)'
p230
I0
I0
I01
Ntp231
a(S'float'
p232
S'confidence'
p233
g233
S'required confidence'
p234
I0
I0
I01
Ntp235
a(S'float'
p236
S'support'
p237
g237
S'required support'
p238
I0
I0
I01
Ntp239
a(S'bool'
p240
S'storeExamples'
p241
S'store_examples'
p242
S'stores examples corresponding to rules'
p243
I0
I0
I01
Ntp244
asg29
(dp245
sbsS'TFilter_sameExample'
p246
(i__main__
ClassDefinition
p247
(dp248
g4
I1
sg5
I0
sg6
g246
sg7
S'TFilter'
p249
sg9
I00
sg10
(lp250
sg12
(lp251
(S'TExample'
p252
S'example'
p253
g253
S'example with which examples are compared'
p254
I0
I0
I00
Ntp255
a(S'bool'
p256
S'negate'
p257
g257
S'if true, filter output should be negated.'
p258
I0
I0
I01
Ntp259
a(S'TDomain'
p260
S'domain'
p261
g261
S'domain to which the examples are converted (if needed)'
p262
I0
I0
I00
Ntp263
asg29
(dp264
sbsS'TRuleClassifierConstructor'
p265
(i__main__
ClassDefinition
p266
(dp267
g4
I1
sg5
I0
sg6
g265
sg7
S'TOrange'
p268
sg9
I01
sg10
(lp269
sg12
(lp270
sg29
(dp271
sbsS'TMakeRandomIndicesMultiple'
p272
(i__main__
ClassDefinition
p273
(dp274
g4
I1
sg5
I0
sg6
g272
sg7
S'TMakeRandomIndices'
p275
sg9
I00
sg10
(lp276
sg12
(lp277
(S'int'
p278
S'stratified'
p279
g279
S' requests stratified distributions'
p280
I0
I0
I01
S'MakeRandomIndices_Stratification'
p281
tp282
a(S'int'
p283
S'randseed'
p284
g284
S'a seed for random generator'
p285
I0
I0
I01
Ntp286
a(S'TRandomGenerator'
p287
S'randomGenerator'
p288
S'random_generator'
p289
S'a random generator'
p290
I0
I0
I00
Ntp291
asg29
(dp292
sbsS'TLearnerFD'
p293
(i__main__
ClassDefinition
p294
(dp295
g4
I1
sg5
I0
sg6
g293
sg7
S'TLearner'
p296
sg9
I00
sg10
(lp297
sg12
(lp298
(S'TDomain'
p299
S'domain'
p300
g300
S'domain'
p301
I0
I0
I00
Ntp302
ag47
asg29
(dp303
sbsS'TMapIntValue'
p304
(i__main__
ClassDefinition
p305
(dp306
g4
I1
sg5
I0
sg6
g304
sg7
S'TTransformValue'
p307
sg9
I00
sg10
(lp308
sg12
(lp309
(S'TIntList'
p310
S'mapping'
p311
g311
S'a lookup table'
p312
I0
I0
I00
Ntp313
a(S'TTransformValue'
p314
S'subTransform'
p315
S'sub_transform'
p316
S'transformation executed prior to this'
p317
I0
I0
I00
Ntp318
asg29
(dp319
sbsS'TEVDistGetter_Standard'
p320
(i__main__
ClassDefinition
p321
(dp322
g4
I1
sg5
I0
sg6
g320
sg7
S'TEVDistGetter'
p323
sg9
I00
sg10
(lp324
sg12
(lp325
(S'TEVDistList'
p326
S'dists'
p327
g327
S'EVC distribution (sorted by rule length, 0 = for rules without conditions)'
p328
I0
I0
I00
Ntp329
asg29
(dp330
sbsS'TFeatureByIM'
p331
(i__main__
ClassDefinition
p332
(dp333
g4
I1
sg5
I0
sg6
g331
sg7
S'TFeatureInducer'
p334
sg9
I00
sg10
(lp335
sg12
(lp336
(S'TIMConstructor'
p337
S'IMconstructor'
p338
g338
S'incompatibility matrix constructor'
p339
I0
I0
I00
Ntp340
a(S'TClustersFromIM'
p341
S'clustersFromIM'
p342
S'clusters_from_IM'
p343
S'clustering algorithm'
p344
I0
I0
I00
Ntp345
a(S'int'
p346
S'completion'
p347
g347
S' decides how to determine the class for points not covered by any cluster'
p348
I0
I0
I01
S'FeatureByIM_Completion'
p349
tp350
asg29
(dp351
S'Completion'
p352
(lp353
(S'NoCompletion'
p354
S'completion_no'
p355
tp356
a(S'CompletionByDefault'
p357
S'completion_default'
p358
tp359
a(S'CompletionByBayes'
p360
S'completion_bayes'
p361
tp362
assbsS'TRuleBeamRefiner'
p363
(i__main__
ClassDefinition
p364
(dp365
g4
I1
sg5
I0
sg6
g363
sg7
S'TOrange'
p366
sg9
I01
sg10
(lp367
sg12
(lp368
sg29
(dp369
sbsS'TSubsetsGenerator_iterator'
p370
(i__main__
ClassDefinition
p371
(dp372
g4
I1
sg5
I0
sg6
g370
sg7
S'TOrange'
p373
sg9
I01
sg10
(lp374
sg12
(lp375
g192
asg29
(dp376
sbsS'TEquiDistDiscretizer'
p377
(i__main__
ClassDefinition
p378
(dp379
g4
I1
sg5
I0
sg6
g377
sg7
S'TDiscretizer'
p380
sg9
I00
sg10
(lp381
sg12
(lp382
(S'int'
p383
S'numberOfIntervals'
p384
(g384
S'n'
p385
tp386
S' number of intervals'
p387
I0
I0
I01
Ntp388
a(S'float'
p389
S'firstCut'
p390
S'first_cut'
p391
S'the first cut-off point'
p392
I0
I0
I01
Ntp393
a(S'float'
p394
S'step'
p395
g395
S'step (width of interval)'
p396
I0
I0
I01
Ntp397
ag318
asg29
(dp398
sbsS'TFindNearest_BruteForce'
p399
(i__main__
ClassDefinition
p400
(dp401
g4
I1
sg5
I0
sg6
g399
sg7
S'TFindNearest'
p402
sg9
I00
sg10
(lp403
sg12
(lp404
(S'TExamplesDistance'
p405
S'distance'
p406
g406
S'metrics'
p407
I0
I0
I00
Ntp408
a(S'TExampleGenerator'
p409
S'examples'
p410
g410
S'a list of stored examples'
p411
I0
I0
I00
Ntp412
a(S'int'
p413
S'weightID'
p414
S'weight_ID'
p415
S'weight to use when counting examples'
p416
I0
I0
I01
Ntp417
a(S'int'
p418
S'distanceID'
p419
S'distance_ID'
p420
S'id of meta attribute where the distance should be stored (0 = no storing)'
p421
I0
I0
I01
Ntp422
a(S'bool'
p423
S'includeSame'
p424
S'include_same'
p425
S'tells whether to include examples that are same as the reference example'
p426
I0
I0
I01
Ntp427
asg29
(dp428
sbsS'TRuleBeamInitializer'
p429
(i__main__
ClassDefinition
p430
(dp431
g4
I1
sg5
I0
sg6
g429
sg7
S'TOrange'
p432
sg9
I01
sg10
(lp433
sg12
(lp434
sg29
(dp435
sbsS'TMeasureAttribute_relevance'
p436
(i__main__
ClassDefinition
p437
(dp438
g4
I1
sg5
I0
sg6
g436
sg7
S'TMeasureAttributeFromProbabilities'
p439
sg9
I00
sg10
(lp440
sg12
(lp441
(S'TProbabilityEstimatorConstructor'
p442
S'estimatorConstructor'
p443
S'estimator_constructor'
p444
S'probability estimator (none by default)'
p445
I0
I0
I00
Ntp446
a(S'TConditionalProbabilityEstimatorConstructor'
p447
S'conditionalEstimatorConstructor'
p448
S'conditional_estimator_constructor'
p449
S'conditional probability estimator (none by default)'
p450
I0
I0
I00
Ntp451
a(S'int'
p452
S'unknownsTreatment'
p453
S'unknowns_treatment'
p454
S' treatment of unknown values'
p455
I0
I0
I01
S'MeasureAttribute_UnknownsTreatment'
p456
tp457
a(S'int'
p458
S'needs'
p459
g459
S' describes what kind of data is needed for computation'
p460
I0
I0
I01
S'MeasureAttribute_Needs'
p461
tp462
a(S'bool'
p463
S'handlesDiscrete'
p464
S'handles_discrete'
p465
S'tells whether the measure can handle discrete attributes'
p466
I0
I0
I01
Ntp467
a(S'bool'
p468
S'handlesContinuous'
p469
S'handles_continuous'
p470
S'tells whether the measure can handle continuous attributes'
p471
I0
I0
I01
Ntp472
a(S'bool'
p473
S'computesThresholds'
p474
S'computes_thresholds'
p475
S'tells whether the measure can compute threshold functions/maxima for continuous attributes'
p476
I0
I0
I01
Ntp477
asg29
(dp478
sbsS'TBayesLearner'
p479
(i__main__
ClassDefinition
p480
(dp481
g4
I1
sg5
I0
sg6
g479
sg7
S'TLearner'
p482
sg9
I00
sg10
(lp483
sg12
(lp484
(S'TProbabilityEstimatorConstructor'
p485
S'estimatorConstructor'
p486
S'estimator_constructor'
p487
S'constructs a probability estimator for P(C)'
p488
I0
I0
I00
Ntp489
a(S'TConditionalProbabilityEstimatorConstructor'
p490
S'conditionalEstimatorConstructor'
p491
S'conditional_estimator_constructor'
p492
S'constructs a probability estimator for P(C|A) '
p493
I0
I0
I00
Ntp494
a(S'TConditionalProbabilityEstimatorConstructor'
p495
S'conditionalEstimatorConstructorContinuous'
p496
S'conditional_estimator_constructor_continuous'
p497
S'constructs a probability estimator for P(C|A) for continuous attributes'
p498
I0
I0
I00
Ntp499
a(S'bool'
p500
S'normalizePredictions'
p501
S'normalize_predictions'
p502
S'instructs learner to construct a classifier that normalizes probabilities'
p503
I0
I0
I01
Ntp504
a(S'bool'
p505
S'adjustThreshold'
p506
S'adjust_threshold'
p507
S'adjust probability thresholds (for binary classes only)'
p508
I0
I0
I01
Ntp509
ag47
asg29
(dp510
sbsNNsS'TConditionalProbabilityEstimator'
p511
(i__main__
ClassDefinition
p512
(dp513
g4
I1
sg5
I0
sg6
g511
sg7
S'TOrange'
p514
sg9
I01
sg10
(lp515
sg12
(lp516
g63
ag68
asg29
(dp517
sbsS'TColumnAssessor_Laplace'
p518
(i__main__
ClassDefinition
p519
(dp520
g4
I1
sg5
I0
sg6
g518
sg7
S'TColumnAssessor'
p521
sg9
I00
sg10
(lp522
sg12
(lp523
sg29
(dp524
sbsS'TFilter_compatibleExample'
p525
(i__main__
ClassDefinition
p526
(dp527
g4
I1
sg5
I0
sg6
g525
sg7
S'TFilter'
p528
sg9
I00
sg10
(lp529
sg12
(lp530
(S'TExample'
p531
S'example'
p532
g532
S'example with which examples are compared'
p533
I0
I0
I00
Ntp534
ag259
ag263
asg29
(dp535
sbsS'TRemoveRedundant'
p536
(i__main__
ClassDefinition
p537
(dp538
g4
I1
sg5
I0
sg6
g536
sg7
S'TOrange'
p539
sg9
I01
sg10
(lp540
sg12
(lp541
(S'bool'
p542
S'keepValues'
p543
S'keep_values'
p544
S'keep an attribute if number values is only smaller, not one'
p545
I0
I0
I01
Ntp546
asg29
(dp547
sbsS'TExamplesDistanceConstructor_Hamming'
p548
(i__main__
ClassDefinition
p549
(dp550
g4
I1
sg5
I0
sg6
g548
sg7
S'TExamplesDistanceConstructor'
p551
sg9
I00
sg10
(lp552
sg12
(lp553
(S'bool'
p554
S'ignoreClass'
p555
S'ignore_class'
p556
S'if true (default), class value is ignored when computing distances'
p557
I0
I0
I01
Ntp558
a(S'bool'
p559
S'ignoreUnknowns'
p560
S'ignore_unknowns'
p561
S'if true (default: false) unknown values are ignored in computation'
p562
I0
I0
I01
Ntp563
ag106
asg29
(dp564
sbsS'TRuleClassifierConstructor_firstRule'
p565
(i__main__
ClassDefinition
p566
(dp567
g4
I1
sg5
I0
sg6
g565
sg7
S'TRuleClassifierConstructor'
p568
sg9
I00
sg10
(lp569
sg12
(lp570
sg29
(dp571
sbsS'TStopDistributionClustering_noProfit'
p572
(i__main__
ClassDefinition
p573
(dp574
g4
I1
sg5
I0
sg6
g572
sg7
S'TStopDistributionClustering'
p575
sg9
I00
sg10
(lp576
sg12
(lp577
(S'float'
p578
S'minProfitProportion'
p579
S'min_profit_proportion'
p580
S'minimal allowable profit proportion'
p581
I0
I0
I01
Ntp582
asg29
(dp583
sbsS'TColoredIG'
p584
(i__main__
ClassDefinition
p585
(dp586
g4
I1
sg5
I0
sg6
g584
sg7
S'TGeneralExampleClustering'
p587
sg9
I00
sg10
(lp588
sg12
(lp589
(S'TIG'
p590
S'ig'
p591
g591
S'incompatibility graph'
p592
I0
I0
I00
Ntp593
a(S'TIntList'
p594
S'colors'
p595
g595
S'colors (one element corresponding to each ig node)'
p596
I0
I0
I00
Ntp597
asg29
(dp598
sbsS'TMeasureAttribute'
p599
(i__main__
ClassDefinition
p600
(dp601
g4
I1
sg5
I0
sg6
g599
sg7
S'TOrange'
p602
sg9
I00
sg10
(lp603
sg12
(lp604
g462
ag467
ag472
ag477
asg29
(dp605
S'Needs'
p606
(lp607
(S'Contingency_Class'
p608
I0
tp609
a(S'DomainContingency'
p610
I1
tp611
a(S'Generator'
p612
I2
tp613
asS'UnknownsTreatment'
p614
(lp615
(S'IgnoreUnknowns'
p616
I0
tp617
a(S'ReduceByUnknowns'
p618
I1
tp619
a(S'UnknownsToCommon'
p620
I2
tp621
a(S'UnknownsAsValue'
p622
I3
tp623
assbsS'TRuleEvaluator'
p624
(i__main__
ClassDefinition
p625
(dp626
g4
I1
sg5
I0
sg6
g624
sg7
S'TOrange'
p627
sg9
I01
sg10
(lp628
sg12
(lp629
sg29
(dp630
sbsS'TStringVariable'
p631
(i__main__
ClassDefinition
p632
(dp633
g4
I1
sg5
I0
sg6
g631
sg7
S'TVariable'
p634
sg9
I00
sg10
(lp635
sg12
(lp636
(S'int'
p637
S'varType'
p638
S'var_type'
p639
S' variable type'
p640
I0
I0
I01
S'Variable_Type'
p641
tp642
a(S'bool'
p643
S'ordered'
p644
g644
S'variable values are ordered'
p645
I0
I0
I01
Ntp646
a(S'bool'
p647
S'distributed'
p648
g648
S'variable values are distributions'
p649
I0
I0
I01
Ntp650
a(S'int'
p651
S'defaultMetaId'
p652
S'default_meta_id'
p653
S'default (proposed, suggested...) meta id for this variable'
p654
I0
I0
I01
Ntp655
a(S'TRandomGenerator'
p656
S'randomGenerator'
p657
S'random_generator'
p658
S'random generator for random values (initialized when first needed)'
p659
I0
I0
I00
Ntp660
a(S'TVariable'
p661
S'sourceVariable'
p662
S'source_variable'
p663
S'The attribute that this attribute is computed from (when applicable)'
p664
I0
I0
I00
Ntp665
a(S'TClassifier'
p666
S'getValueFrom'
p667
S'get_value_from'
p668
S'Function to compute the value from values of other variables'
p669
I0
I0
I00
Ntp670
asg29
(dp671
sbsS'TGraphAsTree'
p672
(i__main__
ClassDefinition
p673
(dp674
g4
I1
sg5
I0
sg6
g672
sg7
S'TGraph'
p675
sg9
I00
sg10
(lp676
sg12
(lp677
(S'int'
p678
S'nVertices'
p679
S'n_vertices'
p680
S'the number of vertices'
p681
I01
I0
I01
Ntp682
a(S'int'
p683
S'nEdgeTypes'
p684
S'n_edge_types'
p685
S'the number of edge types'
p686
I01
I0
I01
Ntp687
a(S'bool'
p688
S'directed'
p689
g689
S'directed'
p690
I01
I0
I01
Ntp691
asg29
(dp692
sbsS'TTreeExampleSplitter_IgnoreUnknowns'
p693
(i__main__
ClassDefinition
p694
(dp695
g4
I1
sg5
I0
sg6
g693
sg7
S'TTreeExampleSplitter'
p696
sg9
I00
sg10
(lp697
sg12
(lp698
sg29
(dp699
sbsS'TProbabilityEstimator_FromDistribution'
p700
(i__main__
ClassDefinition
p701
(dp702
g4
I1
sg5
I0
sg6
g700
sg7
S'TProbabilityEstimator'
p703
sg9
I00
sg10
(lp704
sg12
(lp705
(S'TDistribution'
p706
S'probabilities'
p707
g707
S'probabilities'
p708
I0
I0
I00
Ntp709
a(S'bool'
p710
S'supportsDiscrete'
p711
S'supports_discrete'
p712
S'can estimate probabilities of discrete attributes'
p713
I01
I0
I01
Ntp714
a(S'bool'
p715
S'supportsContinuous'
p716
S'supports_continuous'
p717
S'can estimate probabilities of continuous attributes'
p718
I01
I0
I01
Ntp719
asg29
(dp720
sbsS'TExamplesDistance'
p721
(i__main__
ClassDefinition
p722
(dp723
g4
I1
sg5
I0
sg6
g721
sg7
S'TOrange'
p724
sg9
I01
sg10
(lp725
sg12
(lp726
sg29
(dp727
sbsS'TFileExampleGenerator'
p728
(i__main__
ClassDefinition
p729
(dp730
g4
I1
sg5
I0
sg6
g728
sg7
S'TExampleGenerator'
p731
sg9
I01
sg10
(lp732
sg12
(lp733
(S'string'
p734
S'filename'
p735
g735
S'filename'
p736
I0
I0
I01
Ntp737
a(S'int'
p738
S'startDataPos'
p739
S'start_data_pos'
p740
S'starting position of the data in file'
p741
I0
I0
I01
Ntp742
a(S'int'
p743
S'startDataLine'
p744
S'start_data_line'
p745
S'line in the file where the data starts'
p746
I0
I0
I01
Ntp747
ag121
ag125
asg29
(dp748
sbsS'TClassifierByLookupTable2'
p749
(i__main__
ClassDefinition
p750
(dp751
g4
I1
sg5
I0
sg6
g749
sg7
S'TClassifierByLookupTable'
p752
sg9
I00
sg10
(lp753
sg12
(lp754
(S'TVariable'
p755
S'variable1'
p756
g756
S'the first attribute used for classification'
p757
I01
I0
I00
Ntp758
a(S'TVariable'
p759
S'variable2'
p760
g760
S'the second attribute used for classification'
p761
I01
I0
I00
Ntp762
a(S'int'
p763
S'noOfValues1'
p764
S'no_of_values1'
p765
S'number of values of the first attribute'
p766
I01
I0
I01
Ntp767
a(S'int'
p768
S'noOfValues2'
p769
S'no_of_values2'
p770
S'number of values of the second attribute'
p771
I01
I0
I01
Ntp772
a(S'TEFMDataDescription'
p773
S'dataDescription'
p774
S'data_description'
p775
S'data description'
p776
I0
I0
I00
Ntp777
a(S'TValueList'
p778
S'lookupTable'
p779
S'lookup_table'
p780
S'a list of class values, one for each attribute value'
p781
I01
I0
I00
Ntp782
a(S'TDistributionList'
p783
S'distributions'
p784
g784
S'a list of class distributions, one for each attribute value'
p785
I01
I0
I00
Ntp786
a(S'TVariable'
p787
S'classVar'
p788
S'class_var'
p789
S'class variable'
p790
I0
I0
I00
Ntp791
a(S'bool'
p792
S'computesProbabilities'
p793
S'computes_probabilities'
p794
S'set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)'
p795
I0
I0
I01
Ntp796
asg29
(dp797
sbsS'TMeasureAttribute_gainRatio'
p798
(i__main__
ClassDefinition
p799
(dp800
g4
I1
sg5
I0
sg6
g798
sg7
S'TMeasureAttributeFromProbabilities'
p801
sg9
I00
sg10
(lp802
sg12
(lp803
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp804
sbsS'TContingencyClassAttr'
p805
(i__main__
ClassDefinition
p806
(dp807
g4
I1
sg5
I0
sg6
g805
sg7
S'TContingencyClass'
p808
sg9
I00
sg10
(lp809
sg12
(lp810
(S'TVariable'
p811
S'outerVariable'
p812
S'outer_variable'
p813
S'outer attribute'
p814
I0
I0
I00
Ntp815
a(S'TVariable'
p816
S'innerVariable'
p817
S'inner_variable'
p818
S'inner attribute'
p819
I0
I0
I00
Ntp820
a(S'int'
p821
S'varType'
p822
S'var_type'
p823
S' outer attribute type'
p824
I0
I0
I01
S'Variable_Type'
p825
tp826
a(S'TDistribution'
p827
S'outerDistribution'
p828
S'outer_distribution'
p829
S'distribution of values of outer attributes'
p830
I0
I0
I00
Ntp831
a(S'TDistribution'
p832
S'innerDistribution'
p833
S'inner_distribution'
p834
S'distribution of values of inner attributes'
p835
I0
I0
I00
Ntp836
a(S'TDistribution'
p837
S'innerDistributionUnknown'
p838
S'inner_distribution_unknown'
p839
S'distribution of inner variable for examples where the outer value was unknown'
p840
I0
I0
I00
Ntp841
asg29
(dp842
sbsS'TColumnAssessor_Measure'
p843
(i__main__
ClassDefinition
p844
(dp845
g4
I1
sg5
I0
sg6
g843
sg7
S'TColumnAssessor'
p846
sg9
I00
sg10
(lp847
sg12
(lp848
(S'TMeasureAttribute'
p849
S'measure'
p850
g850
S'attribute quality measure'
p851
I0
I0
I00
Ntp852
asg29
(dp853
sbsS'TLogRegClassifier'
p854
(i__main__
ClassDefinition
p855
(dp856
g4
I1
sg5
I0
sg6
g854
sg7
S'TClassifierFD'
p857
sg9
I00
sg10
(lp858
sg12
(lp859
(S'TDomain'
p860
S'continuizedDomain'
p861
S'continuized_domain'
p862
S'if absent, there is no continuous attributes in original domain'
p863
I0
I0
I00
Ntp864
a(S'TEFMDataDescription'
p865
S'dataDescription'
p866
S'data_description'
p867
S'Data needed for classification in presence of undefined values'
p868
I0
I0
I00
Ntp869
a(S'TAttributedFloatList'
p870
S'beta'
p871
g871
S'estimated beta coefficients for logistic regression'
p872
I0
I0
I00
Ntp873
a(S'TAttributedFloatList'
p874
S'beta_se'
p875
g875
S'estimated standard errors for beta coefficients'
p876
I0
I0
I00
Ntp877
a(S'TAttributedFloatList'
p878
S'wald_Z'
p879
g879
S'Wald Z statstic for beta coefficients'
p880
I0
I0
I00
Ntp881
a(S'TAttributedFloatList'
p882
S'P'
p883
g883
S'estimated significances for beta coefficients'
p884
I0
I0
I00
Ntp885
a(S'float'
p886
S'likelihood'
p887
g887
S"Likelihood: The likelihood function is the function which specifies the probability of the sample observed on the basis of a known model, as a function of the model's parameters. "
p888
I0
I0
I01
Ntp889
a(S'int'
p890
S'fit_status'
p891
g891
S"Tells how the model fitting ended - either regularly (LogRegFitter.OK), or it was interrupted due to one of beta coefficients escaping towards infinity (LogRegFitter.Infinity) or since the values didn't converge (LogRegFitter.Divergence)."
p892
I0
I0
I01
Ntp893
a(S'TImputer'
p894
S'imputer'
p895
g895
S'if present, it imputes unknown values'
p896
I0
I0
I00
Ntp897
a(S'TDomain'
p898
S'domain'
p899
g899
S'domain'
p900
I0
I0
I00
Ntp901
ag791
ag796
asg29
(dp902
sbsS'TClassifierRandomGenerator'
p903
(i__main__
ClassDefinition
p904
(dp905
g4
I1
sg5
I0
sg6
g903
sg7
S'TExampleGenerator'
p906
sg9
I00
sg10
(lp907
sg12
(lp908
(S'TClassifier'
p909
S'classify'
p910
g910
S'classifier'
p911
I0
I0
I00
Ntp912
a(S'int'
p913
S'noOfEx'
p914
S'no_of_ex'
p915
S'number of examples'
p916
I0
I0
I01
Ntp917
ag121
ag125
asg29
(dp918
sbsS'TPreprocessor_select'
p919
(i__main__
ClassDefinition
p920
(dp921
g4
I1
sg5
I0
sg6
g919
sg7
S'TPreprocessor'
p922
sg9
I00
sg10
(lp923
sg12
(lp924
(S'TVarList'
p925
S'attributes'
p926
g926
S'tells which attributes to select'
p927
I0
I0
I00
Ntp928
asg29
(dp929
sbsS'TBasicAttrStat'
p930
(i__main__
ClassDefinition
p931
(dp932
g4
I1
sg5
I0
sg6
g930
sg7
S'TOrange'
p933
sg9
I00
sg10
(lp934
sg12
(lp935
(S'float'
p936
S'sum'
p937
g937
S'sum of values'
p938
I0
I0
I01
Ntp939
a(S'float'
p940
S'sum2'
p941
g941
S'sum of squares of values'
p942
I0
I0
I01
Ntp943
a(S'float'
p944
g385
g385
S'number of examples for which the attribute is defined'
p945
I0
I0
I01
Ntp946
a(S'float'
p947
S'min'
p948
g948
S'the lowest value of the attribute'
p949
I0
I0
I01
Ntp950
a(S'float'
p951
S'max'
p952
g952
S'the highest value of the attribute'
p953
I0
I0
I01
Ntp954
a(S'float'
p955
S'avg'
p956
g956
S'the average value of the attribute'
p957
I0
I0
I01
Ntp958
a(S'float'
p959
S'dev'
p960
g960
S'the deviation of the value of the attribute'
p961
I0
I0
I01
Ntp962
a(S'TVariable'
p963
S'variable'
p964
g964
S'the attribute to which the data applies'
p965
I0
I0
I00
Ntp966
a(S'bool'
p967
S'holdRecomputation'
p968
S'hold_recomputation'
p969
S'temporarily disables recomputation of avg and dev while adding values'
p970
I0
I0
I01
Ntp971
asg29
(dp972
sbsS'TMeasureAttribute_gini'
p973
(i__main__
ClassDefinition
p974
(dp975
g4
I1
sg5
I0
sg6
g973
sg7
S'TMeasureAttributeFromProbabilities'
p976
sg9
I00
sg10
(lp977
sg12
(lp978
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp979
sbsS'TIMByRowsByRelief'
p980
(i__main__
ClassDefinition
p981
(dp982
g4
I1
sg5
I0
sg6
g980
sg7
S'TIMByRowsConstructor'
p983
sg9
I00
sg10
(lp984
sg12
(lp985
(S'float'
p986
S'k'
p987
g987
S'number of neighbours'
p988
I0
I0
I01
Ntp989
a(S'float'
p990
S'm'
p991
g991
S'number of reference examples'
p992
I0
I0
I01
Ntp993
a(S'float'
p994
S'kFromColumns'
p995
S'k_from_columns'
p996
S'if positive, number of neighbours is #columns*kFromColumns'
p997
I0
I0
I01
Ntp998
a(S'bool'
p999
S'ignoreSameExample'
p1000
S'ignore_same_example'
p1001
S'does not put reference example into M'
p1002
I0
I0
I01
Ntp1003
a(S'bool'
p1004
S'convertToBinary'
p1005
S'convert_to_binary'
p1006
S'convert to binary class (hit-miss)'
p1007
I0
I0
I01
Ntp1008
a(S'bool'
p1009
S'correctClassFirst'
p1010
S'correct_class_first'
p1011
S'puts the correct class proportion to the first place'
p1012
I0
I0
I01
Ntp1013
a(S'bool'
p1014
S'allExamples'
p1015
S'all_examples'
p1016
S'uses all examples for reference examples'
p1017
I0
I0
I01
Ntp1018
a(S'bool'
p1019
S'allSameNeighbours'
p1020
S'all_same_neighbours'
p1021
S'uses all the examples same to the reference as neighbours'
p1022
I0
I0
I01
Ntp1023
asg29
(dp1024
sbsS'TFindNearestConstructor'
p1025
(i__main__
ClassDefinition
p1026
(dp1027
g4
I1
sg5
I0
sg6
g1025
sg7
S'TOrange'
p1028
sg9
I01
sg10
(lp1029
sg12
(lp1030
(S'TExamplesDistanceConstructor'
p1031
S'distanceConstructor'
p1032
S'distance_constructor'
p1033
S'metrics'
p1034
I0
I0
I00
Ntp1035
a(S'bool'
p1036
S'includeSame'
p1037
S'include_same'
p1038
S'tells whether to include examples that are same as the reference example'
p1039
I0
I0
I01
Ntp1040
asg29
(dp1041
sbsS'TTableAverager'
p1042
(i__main__
ClassDefinition
p1043
(dp1044
g4
I1
sg5
I0
sg6
g1042
sg7
S'TOrange'
p1045
sg9
I00
sg10
(lp1046
sg12
(lp1047
sg29
(dp1048
sbsS'TIntervalDiscretizer'
p1049
(i__main__
ClassDefinition
p1050
(dp1051
g4
I1
sg5
I0
sg6
g1049
sg7
S'TDiscretizer'
p1052
sg9
I00
sg10
(lp1053
sg12
(lp1054
(S'TFloatList'
p1055
S'points'
p1056
g1056
S'cut-off points'
p1057
I0
I0
I00
Ntp1058
ag318
asg29
(dp1059
sbsS'TImputer_asValue'
p1060
(i__main__
ClassDefinition
p1061
(dp1062
g4
I1
sg5
I0
sg6
g1060
sg7
S'TImputer'
p1063
sg9
I00
sg10
(lp1064
sg12
(lp1065
(S'TDomain'
p1066
S'domain'
p1067
g1067
S'domain to which the values are converted'
p1068
I0
I0
I00
Ntp1069
a(S'TExample'
p1070
S'defaults'
p1071
g1071
S'values to impute instead of missing ones - for continuous attributes only!'
p1072
I0
I0
I00
Ntp1073
asg29
(dp1074
sbsS'TDomainContinuizer'
p1075
(i__main__
ClassDefinition
p1076
(dp1077
g4
I1
sg5
I0
sg6
g1075
sg7
S'TOrange'
p1078
sg9
I00
sg10
(lp1079
sg12
(lp1080
(S'bool'
p1081
S'zeroBased'
p1082
S'zero_based'
p1083
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p1084
I0
I0
I01
Ntp1085
a(S'int'
p1086
S'continuousTreatment'
p1087
S'continuous_treatment'
p1088
S' 0-leave as they are, 1-divide by span, 1-normalize'
p1089
I0
I0
I01
S'DomainContinuizer_ContinuousTreatment'
p1090
tp1091
a(S'int'
p1092
S'multinomialTreatment'
p1093
S'multinomial_treatment'
p1094
S' 0-lowest value, 1-most frequent (or baseValue), 2-n binary, 3-ignore, 4-ignore all discrete, 5-error, 6-convert as ordinal, 7-ordinal,normalized'
p1095
I0
I0
I01
S'DomainContinuizer_MultinomialTreatment'
p1096
tp1097
a(S'int'
p1098
S'classTreatment'
p1099
S'class_treatment'
p1100
S' 3-leave as is unless target is given, 5-error if not continuous nor binary nor target given, 6-convert as ordinal (unless target given)'
p1101
I0
I0
I01
S'DomainContinuizer_ClassTreatment'
p1102
tp1103
asg29
(dp1104
S'MultinomialTreatment'
p1105
(lp1106
(S'LowestIsBase'
p1107
I0
tp1108
a(S'FrequentIsBase'
p1109
I1
tp1110
a(S'NValues'
p1111
I2
tp1112
a(S'Ignore'
p1113
I3
tp1114
a(S'IgnoreAllDiscrete'
p1115
I4
tp1116
a(S'ReportError'
p1117
I5
tp1118
a(S'AsOrdinal'
p1119
I6
tp1120
a(S'AsNormalizedOrdinal'
p1121
I7
tp1122
asS'ClassTreatment'
p1123
(lp1124
(S'LeaveUnlessTarget'
p1125
S'3'
p1126
tp1127
a(S'ErrorIfCannotHandle'
p1128
S'5'
p1129
tp1130
a(S'AsOrdinal'
p1131
S'6'
p1132
tp1133
asS'ContinuousTreatment'
p1134
(lp1135
(S'Leave'
p1136
I0
tp1137
a(S'NormalizeBySpan'
p1138
I1
tp1139
a(S'NormalizeByVariance'
p1140
I2
tp1141
assbsS'TSimpleTreeClassifier'
p1142
(i__main__
ClassDefinition
p1143
(dp1144
g4
I1
sg5
I0
sg6
g1142
sg7
S'TClassifier'
p1145
sg9
I00
sg10
(lp1146
sg12
(lp1147
g791
ag796
asg29
(dp1148
sbsS'TExamplesDistanceConstructor_Euclidean'
p1149
(i__main__
ClassDefinition
p1150
(dp1151
g4
I1
sg5
I0
sg6
g1149
sg7
S'TExamplesDistanceConstructor_Normalized'
p1152
sg9
I00
sg10
(lp1153
sg12
(lp1154
g96
ag101
ag106
asg29
(dp1155
sbsS'TContingencyAttrAttr'
p1156
(i__main__
ClassDefinition
p1157
(dp1158
g4
I1
sg5
I0
sg6
g1156
sg7
S'TContingency'
p1159
sg9
I00
sg10
(lp1160
sg12
(lp1161
g815
ag820
ag826
ag831
ag836
ag841
asg29
(dp1162
sbsS'TRuleBeamRefiner_Selector'
p1163
(i__main__
ClassDefinition
p1164
(dp1165
g4
I1
sg5
I0
sg6
g1163
sg7
S'TRuleBeamRefiner'
p1166
sg9
I00
sg10
(lp1167
sg12
(lp1168
(S'TDiscretization'
p1169
S'discretization'
p1170
g1170
S'discretization for continuous attributes'
p1171
I0
I0
I00
Ntp1172
asg29
(dp1173
sbsS'TExamplesDistance_Relief'
p1174
(i__main__
ClassDefinition
p1175
(dp1176
g4
I1
sg5
I0
sg6
g1174
sg7
S'TExamplesDistance'
p1177
sg9
I00
sg10
(lp1178
sg12
(lp1179
(S'TDomainDistributions'
p1180
S'distributions'
p1181
g1181
S"distributions of attributes' values"
p1182
I0
I0
I00
Ntp1183
a(S'TAttributedFloatList'
p1184
S'averages'
p1185
g1185
S'average values of attributes'
p1186
I0
I0
I00
Ntp1187
a(S'TAttributedFloatList'
p1188
S'normalizations'
p1189
g1189
S"ranges of attributes' values"
p1190
I0
I0
I00
Ntp1191
a(S'TAttributedFloatList'
p1192
S'bothSpecial'
p1193
S'both_special'
p1194
S'distance if both values of both attributes are undefined'
p1195
I0
I0
I00
Ntp1196
asg29
(dp1197
sbsS'TExamplesDistance_Manhattan'
p1198
(i__main__
ClassDefinition
p1199
(dp1200
g4
I1
sg5
I0
sg6
g1198
sg7
S'TExamplesDistance_Normalized'
p1201
sg9
I00
sg10
(lp1202
sg12
(lp1203
g136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp1204
sbsS'TTreeDescender'
p1205
(i__main__
ClassDefinition
p1206
(dp1207
g4
I1
sg5
I0
sg6
g1205
sg7
S'TOrange'
p1208
sg9
I01
sg10
(lp1209
sg12
(lp1210
sg29
(dp1211
sbsS'TIMBlurer'
p1212
(i__main__
ClassDefinition
p1213
(dp1214
g4
I1
sg5
I0
sg6
g1212
sg7
S'TIMByRowsPreprocessor'
p1215
sg9
I00
sg10
(lp1216
sg12
(lp1217
(S'float'
p1218
S'weight'
p1219
g1219
S'weight of neighbours'
p1220
I0
I0
I01
Ntp1221
a(S'float'
p1222
S'origWeight'
p1223
S'orig_weight'
p1224
S'weight of original row'
p1225
I0
I0
I01
Ntp1226
a(S'TFloatList'
p1227
S'attrWeights'
p1228
S'attr_weights'
p1229
S'weights by individual (different) attributes'
p1230
I0
I0
I00
Ntp1231
a(S'bool'
p1232
S'adjustOrigWeight'
p1233
S'adjust_orig_weight'
p1234
S'uses 1-weight(s) for weight of original row'
p1235
I0
I0
I01
Ntp1236
a(S'bool'
p1237
S'onlyEmpty'
p1238
S'only_empty'
p1239
S'blurs only empty cells'
p1240
I0
I0
I01
Ntp1241
asg29
(dp1242
sbsS'TFeatureByMinComplexity'
p1243
(i__main__
ClassDefinition
p1244
(dp1245
g4
I1
sg5
I0
sg6
g1243
sg7
S'TFeatureInducer'
p1246
sg9
I00
sg10
(lp1247
sg12
(lp1248
(S'TColorIG'
p1249
S'colorIG'
p1250
S'color_IG'
p1251
S'graph coloring algorithm'
p1252
I0
I0
I00
Ntp1253
a(S'int'
p1254
S'completion'
p1255
g1255
S' decides how to determine the class for points not covered by any cluster'
p1256
I0
I0
I01
S'FeatureByMinComplexity_Completion'
p1257
tp1258
asg29
(dp1259
S'Completion'
p1260
(lp1261
(S'NoCompletion'
p1262
S'completion_no'
p1263
tp1264
a(S'CompletionByDefault'
p1265
S'completion_default'
p1266
tp1267
a(S'CompletionByBayes'
p1268
S'completion_bayes'
p1269
tp1270
assbsS'TPreprocessor_dropMissingClasses'
p1271
(i__main__
ClassDefinition
p1272
(dp1273
g4
I1
sg5
I0
sg6
g1271
sg7
S'TPreprocessor'
p1274
sg9
I00
sg10
(lp1275
sg12
(lp1276
sg29
(dp1277
sbsS'TChangeExampleGenerator'
p1278
(i__main__
ClassDefinition
p1279
(dp1280
g4
I1
sg5
I0
sg6
g1278
sg7
S'TAdapterGenerator'
p1281
sg9
I01
sg10
(lp1282
sg12
(lp1283
g121
ag125
asg29
(dp1284
sbsS'TkNNClassifier'
p1285
(i__main__
ClassDefinition
p1286
(dp1287
g4
I1
sg5
I0
sg6
g1285
sg7
S'TClassifierFD'
p1288
sg9
I00
sg10
(lp1289
sg12
(lp1290
(S'TFindNearest'
p1291
S'findNearest'
p1292
S'find_nearest'
p1293
S''
p1294
I0
I0
I00
Ntp1295
a(S'float'
p1296
g987
g987
S'number of neighbours (0 for sqrt of #examples)'
p1297
I0
I0
I01
Ntp1298
a(S'bool'
p1299
S'rankWeight'
p1300
S'rank_weight'
p1301
S'enable weighting by ranks'
p1302
I0
I0
I01
Ntp1303
a(S'int'
p1304
S'weightID'
p1305
S'weight_ID'
p1306
S'id of meta-attribute with weight'
p1307
I0
I0
I01
Ntp1308
a(S'int'
p1309
S'nExamples'
p1310
S'n_examples'
p1311
S'the number of learning examples '
p1312
I0
I0
I01
Ntp1313
ag901
ag791
ag796
asg29
(dp1314
sbsS'TMeasureAttribute_info'
p1315
(i__main__
ClassDefinition
p1316
(dp1317
g4
I1
sg5
I0
sg6
g1315
sg7
S'TMeasureAttributeFromProbabilities'
p1318
sg9
I00
sg10
(lp1319
sg12
(lp1320
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp1321
sbsS'TOrange'
p1322
(i__main__
ClassDefinition
p1323
(dp1324
g4
I1
sg5
I0
sg6
g1322
sg7
Nsg9
I00
sg10
(lp1325
sg12
(lp1326
sg29
(dp1327
sbsS'TRuleValidator'
p1328
(i__main__
ClassDefinition
p1329
(dp1330
g4
I1
sg5
I0
sg6
g1328
sg7
S'TOrange'
p1331
sg9
I01
sg10
(lp1332
sg12
(lp1333
sg29
(dp1334
sbsS'TIMByRowsBySorting'
p1335
(i__main__
ClassDefinition
p1336
(dp1337
g4
I1
sg5
I0
sg6
g1335
sg7
S'TIMByRowsConstructor'
p1338
sg9
I00
sg10
(lp1339
sg12
(lp1340
sg29
(dp1341
sbsS'TRuleBeamInitializer_Python'
p1342
(i__main__
ClassDefinition
p1343
(dp1344
g4
I1
sg5
I0
sg6
g1342
sg7
S'TRuleBeamInitializer'
p1345
sg9
I00
sg10
(lp1346
sg12
(lp1347
sg29
(dp1348
sbsS'TRuleCovererAndRemover_Python'
p1349
(i__main__
ClassDefinition
p1350
(dp1351
g4
I1
sg5
I0
sg6
g1349
sg7
S'TRuleCovererAndRemover'
p1352
sg9
I00
sg10
(lp1353
sg12
(lp1354
sg29
(dp1355
sbsS'TMeasureAttribute_gainRatioA'
p1356
(i__main__
ClassDefinition
p1357
(dp1358
g4
I1
sg5
I0
sg6
g1356
sg7
S'TMeasureAttribute_gainRatio'
p1359
sg9
I00
sg10
(lp1360
sg12
(lp1361
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp1362
sbsS'TCartesianClassifier'
p1363
(i__main__
ClassDefinition
p1364
(dp1365
g4
I1
sg5
I0
sg6
g1363
sg7
S'TClassifierFD'
p1366
sg9
I00
sg10
(lp1367
sg12
(lp1368
g901
ag791
ag796
asg29
(dp1369
sbsS'TLinearClassifier'
p1370
(i__main__
ClassDefinition
p1371
(dp1372
g4
I1
sg5
I0
sg6
g1370
sg7
S'TClassifierFD'
p1373
sg9
I00
sg10
(lp1374
sg12
(lp1375
(S'TFloatListList'
p1376
S'weights'
p1377
g1377
S'Computed feature weights'
p1378
I0
I0
I00
Ntp1379
a(S'TExampleTable'
p1380
S'examples'
p1381
g1381
S'Examples used to train the classifier'
p1382
I0
I0
I00
Ntp1383
a(S'float'
p1384
S'bias'
p1385
g1385
S'bias'
p1386
I01
I0
I01
Ntp1387
ag901
ag791
ag796
asg29
(dp1388
sbsS'TRemoveRedundantByInduction'
p1389
(i__main__
ClassDefinition
p1390
(dp1391
g4
I1
sg5
I0
sg6
g1389
sg7
S'TRemoveRedundant'
p1392
sg9
I00
sg10
(lp1393
sg12
(lp1394
(S'TFeatureInducer'
p1395
S'featureReducer'
p1396
S'feature_reducer'
p1397
S'feature construction algorithm'
p1398
I0
I0
I00
Ntp1399
a(S'TMeasureAttribute'
p1400
S'measure'
p1401
g1401
S'measure for initial ordering of attributes'
p1402
I0
I0
I00
Ntp1403
a(S'TDiscretization'
p1404
S'discretization'
p1405
g1405
S'discretization method'
p1406
I0
I0
I00
Ntp1407
ag546
asg29
(dp1408
sbsS'TFilter_conjunction'
p1409
(i__main__
ClassDefinition
p1410
(dp1411
g4
I1
sg5
I0
sg6
g1409
sg7
S'TFilter'
p1412
sg9
I00
sg10
(lp1413
sg12
(lp1414
(S'TFilterList'
p1415
S'filters'
p1416
g1416
S'a list of filters;'
p1417
I0
I0
I00
Ntp1418
ag259
ag263
asg29
(dp1419
sbsS'TGraph'
p1420
(i__main__
ClassDefinition
p1421
(dp1422
g4
I1
sg5
I0
sg6
g1420
sg7
S'TOrange'
p1423
sg9
I01
sg10
(lp1424
sg12
(lp1425
g682
ag687
ag691
asg29
(dp1426
sbsS'TStopIMClusteringByAssessor'
p1427
(i__main__
ClassDefinition
p1428
(dp1429
g4
I1
sg5
I0
sg6
g1427
sg7
S'TOrange'
p1430
sg9
I01
sg10
(lp1431
sg12
(lp1432
sg29
(dp1433
sbsS'TClustersFromDistributions'
p1434
(i__main__
ClassDefinition
p1435
(dp1436
g4
I1
sg5
I0
sg6
g1434
sg7
S'TOrange'
p1437
sg9
I01
sg10
(lp1438
sg12
(lp1439
sg29
(dp1440
sbsS'TVariable'
p1441
(i__main__
ClassDefinition
p1442
(dp1443
g4
I1
sg5
I0
sg6
g1441
sg7
S'TOrange'
p1444
sg9
I01
sg10
(lp1445
sg12
(lp1446
g642
ag646
ag650
ag655
ag660
ag665
ag670
asg29
(dp1447
S'Type'
p1448
(lp1449
(S'None'
p1450
S'(int)TValue::NONE'
p1451
tp1452
a(S'Discrete'
p1453
S'(int)TValue::INTVAR'
p1454
tp1455
a(S'Continuous'
p1456
S'(int)TValue::FLOATVAR'
p1457
tp1458
a(S'Other'
p1459
S'(int)(TValue::FLOATVAR+1)'
p1460
tp1461
a(S'String'
p1462
S'(int)STRINGVAR'
p1463
tp1464
asS'MakeStatus'
p1465
(lp1466
(S'OK'
p1467
I0
tp1468
a(S'MissingValues'
p1469
I1
tp1470
a(S'NoRecognizedValues'
p1471
I2
tp1472
a(S'Incompatible'
p1473
I3
tp1474
a(S'NotFound'
p1475
I4
tp1476
assbsS'TImputerConstructor_average'
p1477
(i__main__
ClassDefinition
p1478
(dp1479
g4
I1
sg5
I0
sg6
g1477
sg7
S'TImputerConstructor'
p1480
sg9
I00
sg10
(lp1481
sg12
(lp1482
(S'bool'
p1483
S'imputeClass'
p1484
S'impute_class'
p1485
S'tells whether to impute the class value (default: true)'
p1486
I0
I0
I01
Ntp1487
asg29
(dp1488
sbsS'TStopDistributionClustering'
p1489
(i__main__
ClassDefinition
p1490
(dp1491
g4
I1
sg5
I0
sg6
g1489
sg7
S'TOrange'
p1492
sg9
I01
sg10
(lp1493
sg12
(lp1494
sg29
(dp1495
sbsS'TExampleTable'
p1496
(i__main__
ClassDefinition
p1497
(dp1498
g4
I1
sg5
I0
sg6
g1496
sg7
S'TExampleGenerator'
p1499
sg9
I00
sg10
(lp1500
sg12
(lp1501
(S'TRandomGenerator'
p1502
S'randomGenerator'
p1503
S'random_generator'
p1504
S'random generator used by randomExample'
p1505
I0
I0
I00
Ntp1506
a(S'TExampleGenerator'
p1507
S'lock'
p1508
(g1508
S'owner'
p1509
tp1510
S' the real owner of examples'
p1511
I01
I0
I00
Ntp1512
a(S'bool'
p1513
S'ownsExamples'
p1514
(g1514
S'owns_instances'
p1515
tp1516
S' if false, examples in this table are references to examples in another table'
p1517
I01
I0
I01
Ntp1518
ag121
ag125
asg29
(dp1519
sbsS'TMakeRandomIndicesN'
p1520
(i__main__
ClassDefinition
p1521
(dp1522
g4
I1
sg5
I0
sg6
g1520
sg7
S'TMakeRandomIndices'
p1523
sg9
I00
sg10
(lp1524
sg12
(lp1525
(S'TFloatList'
p1526
g91
g91
S'probabilities of indices (last is 1-sum(p))'
p1527
I0
I0
I00
Ntp1528
ag282
ag286
ag291
asg29
(dp1529
sbsS'TRemoveRedundantByQuality'
p1530
(i__main__
ClassDefinition
p1531
(dp1532
g4
I1
sg5
I0
sg6
g1530
sg7
S'TRemoveRedundant'
p1533
sg9
I00
sg10
(lp1534
sg12
(lp1535
(S'bool'
p1536
S'remeasure'
p1537
g1537
S'reapply the measure after removal'
p1538
I0
I0
I01
Ntp1539
a(S'float'
p1540
S'minQuality'
p1541
S'min_quality'
p1542
S'minimal acceptable quality'
p1543
I0
I0
I01
Ntp1544
a(S'int'
p1545
S'removeBut'
p1546
S'remove_but'
p1547
S'the desired number of attributes'
p1548
I0
I0
I01
Ntp1549
a(S'TMeasureAttribute'
p1550
S'measure'
p1551
g1551
S'attribute quality measure'
p1552
I0
I0
I00
Ntp1553
ag546
asg29
(dp1554
sbsS'TGraphAsList'
p1555
(i__main__
ClassDefinition
p1556
(dp1557
g4
I1
sg5
I0
sg6
g1555
sg7
S'TGraph'
p1558
sg9
I00
sg10
(lp1559
sg12
(lp1560
g682
ag687
ag691
asg29
(dp1561
sbsS'TDistanceMapConstructor'
p1562
(i__main__
ClassDefinition
p1563
(dp1564
g4
I1
sg5
I0
sg6
g1562
sg7
S'TOrange'
p1565
sg9
I00
sg10
(lp1566
sg12
(lp1567
(S'TSymMatrix'
p1568
S'distanceMatrix'
p1569
S'distance_matrix'
p1570
S'distance matrix'
p1571
I0
I0
I00
Ntp1572
a(S'TIntList'
p1573
S'order'
p1574
g1574
S'order of elements'
p1575
I0
I0
I00
Ntp1576
asg29
(dp1577
sbsS'TTransformValue'
p1578
(i__main__
ClassDefinition
p1579
(dp1580
g4
I1
sg5
I0
sg6
g1578
sg7
S'TOrange'
p1581
sg9
I01
sg10
(lp1582
sg12
(lp1583
g318
asg29
(dp1584
sbsS'TComputeDomainContingency_DomainTransformation'
p1585
(i__main__
ClassDefinition
p1586
(dp1587
g4
I1
sg5
I0
sg6
g1585
sg7
S'TComputeDomainContingency'
p1588
sg9
I00
sg10
(lp1589
sg12
(lp1590
(S'TDomainTransformerConstructor'
p1591
S'domainTransformerConstructor'
p1592
S'domain_transformer_constructor'
p1593
S'constructs a domain in which each attribute corresponds one of originals'
p1594
I0
I0
I00
Ntp1595
a(S'bool'
p1596
S'resultInOriginalDomain'
p1597
S'result_in_original_domain'
p1598
S'tells whether the resulting DomainContingency should consist of original attributes'
p1599
I0
I0
I01
Ntp1600
ag28
asg29
(dp1601
sbsS'TTreePruner'
p1602
(i__main__
ClassDefinition
p1603
(dp1604
g4
I1
sg5
I0
sg6
g1602
sg7
S'TOrange'
p1605
sg9
I01
sg10
(lp1606
sg12
(lp1607
sg29
(dp1608
sbsS'TImputer_Python'
p1609
(i__main__
ClassDefinition
p1610
(dp1611
g4
I1
sg5
I0
sg6
g1609
sg7
S'TImputer'
p1612
sg9
I00
sg10
(lp1613
sg12
(lp1614
sg29
(dp1615
sbsS'TPreprocessor_addGaussianClassNoise'
p1616
(i__main__
ClassDefinition
p1617
(dp1618
g4
I1
sg5
I0
sg6
g1616
sg7
S'TPreprocessor'
p1619
sg9
I00
sg10
(lp1620
sg12
(lp1621
(S'float'
p1622
S'deviation'
p1623
g1623
S'class deviation'
p1624
I0
I0
I01
Ntp1625
a(S'TRandomGenerator'
p1626
S'randomGenerator'
p1627
S'random_generator'
p1628
S'random number generator'
p1629
I0
I0
I00
Ntp1630
asg29
(dp1631
sbsS'TRuleEvaluator_Python'
p1632
(i__main__
ClassDefinition
p1633
(dp1634
g4
I1
sg5
I0
sg6
g1632
sg7
S'TRuleEvaluator'
p1635
sg9
I00
sg10
(lp1636
sg12
(lp1637
sg29
(dp1638
sbsS'TIGBySorting'
p1639
(i__main__
ClassDefinition
p1640
(dp1641
g4
I1
sg5
I0
sg6
g1639
sg7
S'TIGConstructor'
p1642
sg9
I00
sg10
(lp1643
sg12
(lp1644
sg29
(dp1645
sbsS'TConditionalProbabilityEstimator_ByRows'
p1646
(i__main__
ClassDefinition
p1647
(dp1648
g4
I1
sg5
I0
sg6
g1646
sg7
S'TConditionalProbabilityEstimator'
p1649
sg9
I00
sg10
(lp1650
sg12
(lp1651
(S'TProbabilityEstimatorList'
p1652
S'estimatorList'
p1653
S'estimator_list'
p1654
S'A list of probability estimators'
p1655
I0
I0
I00
Ntp1656
ag63
ag68
asg29
(dp1657
sbsS'TProgressCallback'
p1658
(i__main__
ClassDefinition
p1659
(dp1660
g4
I1
sg5
I0
sg6
g1658
sg7
S'TOrange'
p1661
sg9
I01
sg10
(lp1662
sg12
(lp1663
sg29
(dp1664
sbsS'THierarchicalClustering'
p1665
(i__main__
ClassDefinition
p1666
(dp1667
g4
I1
sg5
I0
sg6
g1665
sg7
S'TOrange'
p1668
sg9
I00
sg10
(lp1669
sg12
(lp1670
(S'int'
p1671
S'linkage'
p1672
g1672
S' linkage'
p1673
I0
I0
I01
S'HierarchicalClustering_Linkage'
p1674
tp1675
a(S'bool'
p1676
S'overwriteMatrix'
p1677
S'overwrite_matrix'
p1678
S'if true (default is false) it will use (and destroy) the distance matrix given as argument'
p1679
I0
I0
I01
Ntp1680
a(S'TProgressCallback'
p1681
S'progressCallback'
p1682
S'progress_callback'
p1683
S'progress callback function'
p1684
I0
I0
I00
Ntp1685
asg29
(dp1686
S'Linkage'
p1687
(lp1688
(S'Single'
p1689
I0
tp1690
a(S'Average'
p1691
I1
tp1692
a(S'Complete'
p1693
I2
tp1694
a(S'Ward'
p1695
I3
tp1696
assbsS'TTreeSplitConstructor_Python'
p1697
(i__main__
ClassDefinition
p1698
(dp1699
g4
I1
sg5
I0
sg6
g1697
sg7
S'TTreeSplitConstructor'
p1700
sg9
I00
sg10
(lp1701
sg12
(lp1702
(S'float'
p1703
S'minSubset'
p1704
S'min_subset'
p1705
S'minimal number of examples in a subset'
p1706
I0
I0
I01
Ntp1707
asg29
(dp1708
sbsS'TEarthLearner'
p1709
(i__main__
ClassDefinition
p1710
(dp1711
g4
I1
sg5
I0
sg6
g1709
sg7
S'TLearner'
p1712
sg9
I00
sg10
(lp1713
sg12
(lp1714
(S'int'
p1715
S'max_terms'
p1716
g1716
S'Maximum number of terms.'
p1717
I0
I0
I01
Ntp1718
a(S'int'
p1719
S'max_degree'
p1720
g1720
S'Maximum degree of terms.'
p1721
I0
I0
I01
Ntp1722
a(S'float'
p1723
S'penalty'
p1724
g1724
S'Penalty.'
p1725
I0
I0
I01
Ntp1726
a(S'float'
p1727
S'threshold'
p1728
g1728
S'Forward step threshold.'
p1729
I0
I0
I01
Ntp1730
a(S'bool'
p1731
S'prune'
p1732
g1732
S'Prune terms (do backward pass).'
p1733
I0
I0
I01
Ntp1734
a(S'float'
p1735
S'fast_beta'
p1736
g1736
S'Fast beta (aging coefficient).'
p1737
I0
I0
I01
Ntp1738
a(S'float'
p1739
S'trace'
p1740
g1740
S'Execution trace (for debugging only).'
p1741
I0
I0
I01
Ntp1742
a(S'int'
p1743
S'min_span'
p1744
g1744
S'Min. span (training instances) between knots.'
p1745
I0
I0
I01
Ntp1746
a(S'int'
p1747
S'fast_k'
p1748
g1748
S'Fast K.'
p1749
I0
I0
I01
Ntp1750
a(S'bool'
p1751
S'new_var_penalty'
p1752
g1752
S'Penalty for adding a new variable.'
p1753
I0
I0
I01
Ntp1754
a(S'bool'
p1755
S'use_beta_cache'
p1756
g1756
S'Use caching for betas.'
p1757
I0
I0
I01
Ntp1758
ag47
asg29
(dp1759
sbsS'TKernelFunc_Python'
p1760
(i__main__
ClassDefinition
p1761
(dp1762
g4
I1
sg5
I0
sg6
g1760
sg7
S'TKernelFunc'
p1763
sg9
I00
sg10
(lp1764
sg12
(lp1765
sg29
(dp1766
sbsS'TAdapterGenerator'
p1767
(i__main__
ClassDefinition
p1768
(dp1769
g4
I1
sg5
I0
sg6
g1767
sg7
S'TExampleGenerator'
p1770
sg9
I00
sg10
(lp1771
sg12
(lp1772
g121
ag125
asg29
(dp1773
sbsS'TIMFromExamples'
p1774
(i__main__
ClassDefinition
p1775
(dp1776
g4
I1
sg5
I0
sg6
g1774
sg7
S'TOrange'
p1777
sg9
I01
sg10
(lp1778
sg12
(lp1779
sg29
(dp1780
sbsS'TExamplesDistance_Lp'
p1781
(i__main__
ClassDefinition
p1782
(dp1783
g4
I1
sg5
I0
sg6
g1781
sg7
S'TExamplesDistance_Normalized'
p1784
sg9
I00
sg10
(lp1785
sg12
(lp1786
(S'float'
p1787
g91
g91
g91
I01
I0
I01
Ntp1788
ag136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp1789
sbsS'TMakeRandomIndicesCV'
p1790
(i__main__
ClassDefinition
p1791
(dp1792
g4
I1
sg5
I0
sg6
g1790
sg7
S'TMakeRandomIndices'
p1793
sg9
I00
sg10
(lp1794
sg12
(lp1795
(S'int'
p1796
S'folds'
p1797
g1797
S'number of folds'
p1798
I0
I0
I01
Ntp1799
ag282
ag286
ag291
asg29
(dp1800
sbsS'TPreprocessor_removeDuplicates'
p1801
(i__main__
ClassDefinition
p1802
(dp1803
g4
I1
sg5
I0
sg6
g1801
sg7
S'TPreprocessor'
p1804
sg9
I00
sg10
(lp1805
sg12
(lp1806
sg29
(dp1807
sbsS'TTreeExampleSplitter_UnknownsAsBranchSizes'
p1808
(i__main__
ClassDefinition
p1809
(dp1810
g4
I1
sg5
I0
sg6
g1808
sg7
S'TTreeExampleSplitter'
p1811
sg9
I00
sg10
(lp1812
sg12
(lp1813
sg29
(dp1814
sbsS'TExamplesDistanceConstructor_Normalized'
p1815
(i__main__
ClassDefinition
p1816
(dp1817
g4
I1
sg5
I0
sg6
g1815
sg7
S'TExamplesDistanceConstructor'
p1818
sg9
I01
sg10
(lp1819
sg12
(lp1820
g96
ag101
ag106
asg29
(dp1821
sbsS'TCostWrapperLearner'
p1822
(i__main__
ClassDefinition
p1823
(dp1824
g4
I1
sg5
I0
sg6
g1822
sg7
S'TLearner'
p1825
sg9
I00
sg10
(lp1826
sg12
(lp1827
(S'TLearner'
p1828
S'basicLearner'
p1829
S'basic_learner'
p1830
S'basic learner'
p1831
I0
I0
I00
Ntp1832
a(S'TCostMatrix'
p1833
S'costMatrix'
p1834
S'cost_matrix'
p1835
S'cost matrix'
p1836
I0
I0
I00
Ntp1837
ag47
asg29
(dp1838
sbsS'TPearsonCorrelation'
p1839
(i__main__
ClassDefinition
p1840
(dp1841
g4
I1
sg5
I0
sg6
g1839
sg7
S'TOrange'
p1842
sg9
I00
sg10
(lp1843
sg12
(lp1844
(S'float'
p1845
S'r'
p1846
g1846
S'correlation coefficient'
p1847
I0
I0
I01
Ntp1848
a(S'float'
p1849
S't'
p1850
g1850
S't-statics significance'
p1851
I0
I0
I01
Ntp1852
a(S'int'
p1853
S'df'
p1854
g1854
S'degrees of freedom'
p1855
I0
I0
I01
Ntp1856
a(S'float'
p1857
g91
g91
S'significance'
p1858
I0
I0
I01
Ntp1859
asg29
(dp1860
sbsS'TDistributionAssessor_Laplace'
p1861
(i__main__
ClassDefinition
p1862
(dp1863
g4
I1
sg5
I0
sg6
g1861
sg7
S'TDistributionAssessor'
p1864
sg9
I00
sg10
(lp1865
sg12
(lp1866
sg29
(dp1867
sbsS'TColumnAssessor_Relief'
p1868
(i__main__
ClassDefinition
p1869
(dp1870
g4
I1
sg5
I0
sg6
g1868
sg7
S'TColumnAssessor'
p1871
sg9
I00
sg10
(lp1872
sg12
(lp1873
sg29
(dp1874
sbsS'TClassifierByLookupTable'
p1875
(i__main__
ClassDefinition
p1876
(dp1877
g4
I1
sg5
I0
sg6
g1875
sg7
S'TClassifier'
p1878
sg9
I01
sg10
(lp1879
sg12
(lp1880
g782
ag786
ag791
ag796
asg29
(dp1881
sbsS'TRuleBeamFinder'
p1882
(i__main__
ClassDefinition
p1883
(dp1884
g4
I1
sg5
I0
sg6
g1882
sg7
S'TRuleFinder'
p1885
sg9
I00
sg10
(lp1886
sg12
(lp1887
(S'TRuleBeamInitializer'
p1888
S'initializer'
p1889
g1889
g1294
I0
I0
I00
Ntp1890
a(S'TRuleBeamRefiner'
p1891
S'refiner'
p1892
g1892
g1294
I0
I0
I00
Ntp1893
a(S'TRuleBeamCandidateSelector'
p1894
S'candidateSelector'
p1895
S'candidate_selector'
p1896
g1294
I0
I0
I00
Ntp1897
a(S'TRuleBeamFilter'
p1898
S'ruleFilter'
p1899
S'rule_filter'
p1900
g1294
I0
I0
I00
Ntp1901
a(S'TRuleValidator'
p1902
S'ruleStoppingValidator'
p1903
S'rule_stopping_validator'
p1904
g1294
I0
I0
I00
Ntp1905
a(S'TRuleValidator'
p1906
S'validator'
p1907
g1907
g1294
I0
I0
I00
Ntp1908
a(S'TRuleEvaluator'
p1909
S'evaluator'
p1910
g1910
g1294
I0
I0
I00
Ntp1911
asg29
(dp1912
sbsS'TC45Classifier'
p1913
(i__main__
ClassDefinition
p1914
(dp1915
g4
I1
sg5
I0
sg6
g1913
sg7
S'TClassifierFD'
p1916
sg9
I00
sg10
(lp1917
sg12
(lp1918
(S'TC45TreeNode'
p1919
S'tree'
p1920
g1920
S'tree'
p1921
I0
I0
I00
Ntp1922
ag901
ag791
ag796
asg29
(dp1923
sbsS'TFilter_values'
p1924
(i__main__
ClassDefinition
p1925
(dp1926
g4
I1
sg5
I0
sg6
g1924
sg7
S'TFilter'
p1927
sg9
I00
sg10
(lp1928
sg12
(lp1929
(S'TValueFilterList'
p1930
S'conditions'
p1931
g1931
S'a list of filters'
p1932
I0
I0
I00
Ntp1933
a(S'bool'
p1934
S'conjunction'
p1935
g1935
S'if true, filter computes conjunction, otherwise disjunction'
p1936
I0
I0
I01
Ntp1937
ag259
ag263
asg29
(dp1938
S'Operator'
p1939
(lp1940
(S'None'
p1941
I0
tp1942
a(S'Equal'
p1943
I1
tp1944
a(S'NotEqual'
p1945
I2
tp1946
a(S'Less'
p1947
I3
tp1948
a(S'LessEqual'
p1949
I4
tp1950
a(S'Greater'
p1951
I5
tp1952
a(S'GreaterEqual'
p1953
I6
tp1954
a(S'Between'
p1955
I7
tp1956
a(S'Outside'
p1957
I8
tp1958
a(S'Contains'
p1959
I9
tp1960
a(S'NotContains'
p1961
I10
tp1962
a(S'BeginsWith'
p1963
I11
tp1964
a(S'EndsWith'
p1965
I12
tp1966
a(S'Listed'
p1967
I13
tp1968
assbsS'TRuleClassifier'
p1969
(i__main__
ClassDefinition
p1970
(dp1971
g4
I1
sg5
I0
sg6
g1969
sg7
S'TClassifier'
p1972
sg9
I01
sg10
(lp1973
sg12
(lp1974
(S'TRuleList'
p1975
S'rules'
p1976
g1976
g1294
I0
I0
I00
Ntp1977
a(S'TExampleTable'
p1978
S'examples'
p1979
g1979
g1294
I0
I0
I00
Ntp1980
a(S'int'
p1981
S'weightID'
p1982
S'weight_ID'
p1983
g1294
I0
I0
I01
Ntp1984
ag791
ag796
asg29
(dp1985
sbsS'TSymMatrix'
p1986
(i__main__
ClassDefinition
p1987
(dp1988
g4
I1
sg5
I0
sg6
g1986
sg7
S'TOrange'
p1989
sg9
I00
sg10
(lp1990
sg12
(lp1991
(S'int'
p1992
S'dim'
p1993
g1993
S'matrix dimension'
p1994
I01
I0
I01
Ntp1995
a(S'int'
p1996
S'matrixType'
p1997
S'matrix_type'
p1998
S' 0 lower, 1 upper, 2 symmetric, 3 lower_filled, 4 upper_filled'
p1999
I0
I0
I01
S'SymMatrix_Shape'
p2000
tp2001
asg29
(dp2002
S'Shape'
p2003
(lp2004
(S'Lower'
p2005
I0
tp2006
a(S'Upper'
p2007
I1
tp2008
a(S'Symmetric'
p2009
I2
tp2010
a(S'LowerFilled'
p2011
I3
tp2012
a(S'UpperFilled'
p2013
I4
tp2014
assbsS'TSVMLearner'
p2015
(i__main__
ClassDefinition
p2016
(dp2017
g4
I1
sg5
I0
sg6
g2015
sg7
S'TLearner'
p2018
sg9
I00
sg10
(lp2019
sg12
(lp2020
(S'int'
p2021
S'svm_type'
p2022
g2022
S'  SVM type (C_SVC=0, NU_SVC, ONE_CLASS, EPSILON_SVR=3, NU_SVR=4)'
p2023
I0
I0
I01
S'SVMLearner_SVMType'
p2024
tp2025
a(S'int'
p2026
S'kernel_type'
p2027
g2027
S'  kernel type (LINEAR=0, POLY, RBF, SIGMOID, CUSTOM=4)'
p2028
I0
I0
I01
S'SVMLearner_Kernel'
p2029
tp2030
a(S'float'
p2031
S'degree'
p2032
g2032
S'polynomial kernel degree'
p2033
I0
I0
I01
Ntp2034
a(S'float'
p2035
S'gamma'
p2036
g2036
S'poly/rbf/sigm parameter'
p2037
I0
I0
I01
Ntp2038
a(S'float'
p2039
S'coef0'
p2040
g2040
S'poly/sigm parameter'
p2041
I0
I0
I01
Ntp2042
a(S'float'
p2043
S'cache_size'
p2044
g2044
S'cache size in MB'
p2045
I0
I0
I01
Ntp2046
a(S'float'
p2047
S'eps'
p2048
g2048
S'stopping criteria'
p2049
I0
I0
I01
Ntp2050
a(S'float'
p2051
S'C'
p2052
g2052
S'for C_SVC and C_SVR'
p2053
I0
I0
I01
Ntp2054
a(S'float'
p2055
S'nu'
p2056
g2056
S'for NU_SVC and ONE_CLASS'
p2057
I0
I0
I01
Ntp2058
a(S'float'
p2059
g91
g91
S'for C_SVR'
p2060
I0
I0
I01
Ntp2061
a(S'int'
p2062
S'shrinking'
p2063
g2063
S'shrinking'
p2064
I0
I0
I01
Ntp2065
a(S'int'
p2066
S'probability'
p2067
g2067
S'probability'
p2068
I0
I0
I01
Ntp2069
a(S'bool'
p2070
S'verbose'
p2071
g2071
S'verbose'
p2072
I0
I0
I01
Ntp2073
a(S'TKernelFunc'
p2074
S'kernelFunc'
p2075
S'kernel_func'
p2076
S'custom kernel function'
p2077
I0
I0
I00
Ntp2078
ag47
asg29
(dp2079
S'Kernel'
p2080
(lp2081
(S'Linear'
p2082
S'LINEAR'
p2083
tp2084
a(S'Polynomial'
p2085
S'POLY'
p2086
tp2087
a(S'RBF'
p2088
S'RBF'
p2089
tp2090
a(S'Sigmoid'
p2091
S'SIGMOID'
p2092
tp2093
a(S'Custom'
p2094
S'PRECOMPUTED'
p2095
tp2096
asS'LIBSVM_VERSION'
p2097
(lp2098
(S'VERSION'
p2099
S'LIBSVM_VERSION'
p2100
tp2101
asS'SVMType'
p2102
(lp2103
(S'C_SVC'
p2104
S'C_SVC'
p2105
tp2106
a(S'Nu_SVC'
p2107
S'NU_SVC'
p2108
tp2109
a(S'OneClass'
p2110
S'ONE_CLASS'
p2111
tp2112
a(S'Epsilon_SVR'
p2113
S'EPSILON_SVR'
p2114
tp2115
a(S'Nu_SVR'
p2116
S'NU_SVR'
p2117
tp2118
assbsS'TImputerConstructor_defaults'
p2119
(i__main__
ClassDefinition
p2120
(dp2121
g4
I1
sg5
I0
sg6
g2119
sg7
S'TImputerConstructor'
p2122
sg9
I00
sg10
(lp2123
sg12
(lp2124
(S'TExample'
p2125
S'defaults'
p2126
g2126
S'default values to be imputed instead missing ones'
p2127
I0
I0
I00
Ntp2128
ag1487
asg29
(dp2129
sbsS'TConditionalProbabilityEstimatorConstructor'
p2130
(i__main__
ClassDefinition
p2131
(dp2132
g4
I1
sg5
I0
sg6
g2130
sg7
S'TOrange'
p2133
sg9
I01
sg10
(lp2134
sg12
(lp2135
sg29
(dp2136
sbsS'TPreprocessor_takeMissingClasses'
p2137
(i__main__
ClassDefinition
p2138
(dp2139
g4
I1
sg5
I0
sg6
g2137
sg7
S'TPreprocessor'
p2140
sg9
I00
sg10
(lp2141
sg12
(lp2142
sg29
(dp2143
sbsS'TRuleValidator_LRS'
p2144
(i__main__
ClassDefinition
p2145
(dp2146
g4
I1
sg5
I0
sg6
g2144
sg7
S'TRuleValidator'
p2147
sg9
I00
sg10
(lp2148
sg12
(lp2149
(S'float'
p2150
S'alpha'
p2151
g2151
g1294
I0
I0
I01
Ntp2152
a(S'float'
p2153
S'min_coverage'
p2154
g2154
g1294
I0
I0
I01
Ntp2155
a(S'int'
p2156
S'max_rule_complexity'
p2157
g2157
g1294
I0
I0
I01
Ntp2158
a(S'float'
p2159
S'min_quality'
p2160
g2160
g1294
I0
I0
I01
Ntp2161
asg29
(dp2162
sbsS'TLogRegFitter_Python'
p2163
(i__main__
ClassDefinition
p2164
(dp2165
g4
I1
sg5
I0
sg6
g2163
sg7
S'TLogRegFitter'
p2166
sg9
I00
sg10
(lp2167
sg12
(lp2168
sg29
(dp2169
sbsS'TContDistribution'
p2170
(i__main__
ClassDefinition
p2171
(dp2172
g4
I1
sg5
I0
sg6
g2170
sg7
S'TDistribution'
p2173
sg9
I00
sg10
(lp2174
sg12
(lp2175
(S'TFloatList'
p2176
S'variances'
p2177
g2177
S'variances'
p2178
I0
I0
I00
Ntp2179
a(S'float'
p2180
S'sum'
p2181
g2181
S'weighted sum of elements (i.e. N*average)'
p2182
I01
I0
I01
Ntp2183
a(S'float'
p2184
S'sum2'
p2185
g2185
S'weighted sum of squares of elements'
p2186
I01
I0
I01
Ntp2187
a(S'TVariable'
p2188
S'variable'
p2189
g2189
S'attribute descriptor (optional)'
p2190
I0
I0
I00
Ntp2191
a(S'float'
p2192
S'unknowns'
p2193
g2193
S'number of unknown values'
p2194
I0
I0
I01
Ntp2195
a(S'float'
p2196
S'abs'
p2197
g2197
S'sum of frequencies (not including unknown values!)'
p2198
I0
I0
I01
Ntp2199
a(S'float'
p2200
S'cases'
p2201
g2201
S"number of cases; as abs, but doesn't change at *= and normalize()"
p2202
I0
I0
I01
Ntp2203
a(S'bool'
p2204
S'normalized'
p2205
g2205
S'distribution is normalized'
p2206
I0
I0
I01
Ntp2207
a(S'bool'
p2208
S'supportsDiscrete'
p2209
S'supports_discrete'
p2210
S'distribution supports discrete interface'
p2211
I01
I0
I01
Ntp2212
a(S'bool'
p2213
S'supportsContinuous'
p2214
S'supports_continuous'
p2215
S'distribution supports continuous interface'
p2216
I01
I0
I01
Ntp2217
a(S'TRandomGenerator'
p2218
S'randomGenerator'
p2219
S'random_generator'
p2220
S'random generator; initialized when needed, if not given earlier'
p2221
I0
I0
I00
Ntp2222
asg29
(dp2223
sbsS'TTreeDescender_UnknownMergeAsSelector'
p2224
(i__main__
ClassDefinition
p2225
(dp2226
g4
I1
sg5
I0
sg6
g2224
sg7
S'TTreeDescender'
p2227
sg9
I0
sg10
(lp2228
sg12
(lp2229
sg29
(dp2230
sbsS'TContingencyAttrClass'
p2231
(i__main__
ClassDefinition
p2232
(dp2233
g4
I1
sg5
I0
sg6
g2231
sg7
S'TContingencyClass'
p2234
sg9
I00
sg10
(lp2235
sg12
(lp2236
g815
ag820
ag826
ag831
ag836
ag841
asg29
(dp2237
sbsS'TPythonValueSpecial'
p2238
(i__main__
ClassDefinition
p2239
(dp2240
g4
I1
sg5
I0
sg6
g2238
sg7
S'TOrange'
p2241
sg9
I00
sg10
(lp2242
sg12
(lp2243
(S'int'
p2244
S'valueType'
p2245
S'value_type'
p2246
S'value type'
p2247
I0
I0
I01
Ntp2248
asg29
(dp2249
sbsS'TProbabilityEstimatorConstructor'
p2250
(i__main__
ClassDefinition
p2251
(dp2252
g4
I1
sg5
I0
sg6
g2250
sg7
S'TOrange'
p2253
sg9
I01
sg10
(lp2254
sg12
(lp2255
sg29
(dp2256
sbsS'TFloatVariable'
p2257
(i__main__
ClassDefinition
p2258
(dp2259
g4
I1
sg5
I0
sg6
g2257
sg7
S'TVariable'
p2260
sg9
I00
sg10
(lp2261
sg12
(lp2262
(S'float'
p2263
S'startValue'
p2264
S'start_value'
p2265
S'lowest value'
p2266
I0
I0
I01
Ntp2267
a(S'float'
p2268
S'endValue'
p2269
S'end_value'
p2270
S'highest value'
p2271
I0
I0
I01
Ntp2272
a(S'float'
p2273
S'stepValue'
p2274
S'step_value'
p2275
S'step'
p2276
I0
I0
I01
Ntp2277
a(S'int'
p2278
S'numberOfDecimals'
p2279
S'number_of_decimals'
p2280
S'number of digits after decimal point'
p2281
I0
I0
I01
Ntp2282
a(S'bool'
p2283
S'scientificFormat'
p2284
S'scientific_format'
p2285
S'use scientific format in output'
p2286
I0
I0
I01
Ntp2287
a(S'int'
p2288
S'adjustDecimals'
p2289
S'adjust_decimals'
p2290
S"adjust number of decimals according to the values converted (0 - no, 1 - yes, 2 - yes, but haven't seen any yet)"
p2291
I0
I0
I01
Ntp2292
ag642
ag646
ag650
ag655
ag660
ag665
ag670
asg29
(dp2293
sbsS'TImputer_random'
p2294
(i__main__
ClassDefinition
p2295
(dp2296
g4
I1
sg5
I0
sg6
g2294
sg7
S'TImputer'
p2297
sg9
I00
sg10
(lp2298
sg12
(lp2299
(S'bool'
p2300
S'imputeClass'
p2301
S'impute_class'
p2302
S'Tells whether to impute the class values, too (default: true)'
p2303
I0
I0
I01
Ntp2304
a(S'bool'
p2305
S'deterministic'
p2306
g2306
S"tells whether to initialize random by example's CRC (default: false)"
p2307
I0
I0
I01
Ntp2308
a(S'TDistributionList'
p2309
S'distributions'
p2310
g2310
S'probability functions'
p2311
I0
I0
I00
Ntp2312
asg29
(dp2313
sbsS'TFilter_hasMeta'
p2314
(i__main__
ClassDefinition
p2315
(dp2316
g4
I1
sg5
I0
sg6
g2314
sg7
S'TFilter'
p2317
sg9
I00
sg10
(lp2318
sg12
(lp2319
(S'int'
p2320
S'id'
p2321
g2321
S'meta attribute id'
p2322
I0
I0
I01
Ntp2323
ag259
ag263
asg29
(dp2324
sbsS'TProbabilityEstimatorConstructor_kernel'
p2325
(i__main__
ClassDefinition
p2326
(dp2327
g4
I1
sg5
I0
sg6
g2325
sg7
S'TProbabilityEstimatorConstructor'
p2328
sg9
I00
sg10
(lp2329
sg12
(lp2330
(S'float'
p2331
S'minImpact'
p2332
S'min_impact'
p2333
S'Minimal impact the point must have to be counted'
p2334
I0
I0
I01
Ntp2335
a(S'float'
p2336
S'smoothing'
p2337
g2337
S'Smoothing factor'
p2338
I0
I0
I01
Ntp2339
a(S'int'
p2340
S'nPoints'
p2341
S'n_points'
p2342
S'Number of points for curve (negative means the given number of points is inserted in each interval)'
p2343
I0
I0
I01
Ntp2344
asg29
(dp2345
sbsS'TSubsetsGenerator_constant'
p2346
(i__main__
ClassDefinition
p2347
(dp2348
g4
I1
sg5
I0
sg6
g2346
sg7
S'TSubsetsGenerator'
p2349
sg9
I00
sg10
(lp2350
sg12
(lp2351
(S'TVarList'
p2352
S'constant'
p2353
g2353
S'a subset that is returned (once!)'
p2354
I0
I0
I00
Ntp2355
a(S'TVarList'
p2356
S'varList'
p2357
S'var_list'
p2358
S'a set of attributes from which subsets are generated'
p2359
I0
I0
I00
Ntp2360
asg29
(dp2361
sbsS'TDefaultClassifier'
p2362
(i__main__
ClassDefinition
p2363
(dp2364
g4
I1
sg5
I0
sg6
g2362
sg7
S'TClassifier'
p2365
sg9
I00
sg10
(lp2366
sg12
(lp2367
(S'TValue'
p2368
S'defaultVal'
p2369
S'default_val'
p2370
S'default prediction'
p2371
I0
I0
I01
Ntp2372
a(S'TDistribution'
p2373
S'defaultDistribution'
p2374
S'default_distribution'
p2375
S'default distribution'
p2376
I0
I0
I00
Ntp2377
ag791
ag796
asg29
(dp2378
sbsS'TTreeSplitConstructor_Measure'
p2379
(i__main__
ClassDefinition
p2380
(dp2381
g4
I1
sg5
I0
sg6
g2379
sg7
S'TTreeSplitConstructor'
p2382
sg9
I01
sg10
(lp2383
sg12
(lp2384
(S'TMeasureAttribute'
p2385
S'measure'
p2386
g2386
S'attribute quality measure'
p2387
I0
I0
I00
Ntp2388
a(S'float'
p2389
S'worstAcceptable'
p2390
S'worst_acceptable'
p2391
S'the worst acceptable quality of the attribute'
p2392
I0
I0
I01
Ntp2393
ag1707
asg29
(dp2394
sbsS'TTreeNode'
p2395
(i__main__
ClassDefinition
p2396
(dp2397
g4
I1
sg5
I0
sg6
g2395
sg7
S'TOrange'
p2398
sg9
I00
sg10
(lp2399
sg12
(lp2400
(S'TClassifier'
p2401
S'nodeClassifier'
p2402
S'node_classifier'
p2403
S'classifies an example'
p2404
I0
I0
I00
Ntp2405
a(S'TDistribution'
p2406
S'distribution'
p2407
g2407
S'distribution of classes in the node'
p2408
I0
I0
I00
Ntp2409
a(S'TDomainContingency'
p2410
S'contingency'
p2411
g2411
S'domain contingency for examples in the node'
p2412
I0
I0
I00
Ntp2413
a(S'TExampleGenerator'
p2414
S'examples'
p2415
g2415
S'learning examples (if stored)'
p2416
I0
I0
I00
Ntp2417
a(S'int'
p2418
S'weightID'
p2419
S'weight_ID'
p2420
S'weightID used to construct this node'
p2421
I0
I0
I01
Ntp2422
a(S'TClassifier'
p2423
S'branchSelector'
p2424
S'branch_selector'
p2425
S'classifier that select a branch for an example'
p2426
I0
I0
I00
Ntp2427
a(S'TTreeNodeList'
p2428
S'branches'
p2429
g2429
S'classifiers presenting the branches'
p2430
I0
I0
I00
Ntp2431
a(S'TStringList'
p2432
S'branchDescriptions'
p2433
S'branch_descriptions'
p2434
S'descriptions of branches'
p2435
I0
I0
I00
Ntp2436
a(S'TDiscDistribution'
p2437
S'branchSizes'
p2438
S'branch_sizes'
p2439
S'numbers of examples in branches'
p2440
I0
I0
I00
Ntp2441
asg29
(dp2442
sbsS'TTransformValue_IsDefined'
p2443
(i__main__
ClassDefinition
p2444
(dp2445
g4
I1
sg5
I0
sg6
g2443
sg7
S'TTransformValue'
p2446
sg9
I00
sg10
(lp2447
sg12
(lp2448
g318
asg29
(dp2449
sbsS'TFilter_hasClassValue'
p2450
(i__main__
ClassDefinition
p2451
(dp2452
g4
I1
sg5
I0
sg6
g2450
sg7
S'TFilter'
p2453
sg9
I00
sg10
(lp2454
sg12
(lp2455
g259
ag263
asg29
(dp2456
sbsS'TStopDistributionClustering_binary'
p2457
(i__main__
ClassDefinition
p2458
(dp2459
g4
I1
sg5
I0
sg6
g2457
sg7
S'TStopDistributionClustering'
p2460
sg9
I00
sg10
(lp2461
sg12
(lp2462
sg29
(dp2463
sbsS'TRuleFinder'
p2464
(i__main__
ClassDefinition
p2465
(dp2466
g4
I1
sg5
I0
sg6
g2464
sg7
S'TOrange'
p2467
sg9
I01
sg10
(lp2468
sg12
(lp2469
g1908
ag1911
asg29
(dp2470
sbsS'TClassifierByExampleTable'
p2471
(i__main__
ClassDefinition
p2472
(dp2473
g4
I1
sg5
I0
sg6
g2471
sg7
S'TClassifierFD'
p2474
sg9
I00
sg10
(lp2475
sg12
(lp2476
(S'TExampleTable'
p2477
S'sortedExamples'
p2478
S'sorted_examples'
p2479
S'a table of examples'
p2480
I0
I0
I00
Ntp2481
a(S'bool'
p2482
S'containsUnknowns'
p2483
S'contains_unknowns'
p2484
S'if true, the table contains unknown values'
p2485
I0
I0
I01
Ntp2486
a(S'TClassifier'
p2487
S'classifierForUnknown'
p2488
S'classifier_for_unknown'
p2489
S'a classifier for unknown cases'
p2490
I0
I0
I00
Ntp2491
a(S'TEFMDataDescription'
p2492
S'dataDescription'
p2493
S'data_description'
p2494
S'data description'
p2495
I0
I0
I00
Ntp2496
ag901
ag791
ag796
asg29
(dp2497
sbsS'TIMByRowsPreprocessor'
p2498
(i__main__
ClassDefinition
p2499
(dp2500
g4
I1
sg5
I0
sg6
g2498
sg7
S'TOrange'
p2501
sg9
I01
sg10
(lp2502
sg12
(lp2503
sg29
(dp2504
sbsS'TImputerConstructor_maximal'
p2505
(i__main__
ClassDefinition
p2506
(dp2507
g4
I1
sg5
I0
sg6
g2505
sg7
S'TImputerConstructor'
p2508
sg9
I00
sg10
(lp2509
sg12
(lp2510
g1487
asg29
(dp2511
sbsS'TRemoveRedundantOneValue'
p2512
(i__main__
ClassDefinition
p2513
(dp2514
g4
I1
sg5
I0
sg6
g2512
sg7
S'TRemoveRedundant'
p2515
sg9
I00
sg10
(lp2516
sg12
(lp2517
(S'bool'
p2518
S'onData'
p2519
S'on_data'
p2520
S'observe the actual number of value on the data (not on attribute definitions)'
p2521
I0
I0
I01
Ntp2522
ag546
asg29
(dp2523
sbsS'TDistributionAssessor_Relief'
p2524
(i__main__
ClassDefinition
p2525
(dp2526
g4
I1
sg5
I0
sg6
g2524
sg7
S'TDistributionAssessor'
p2527
sg9
I00
sg10
(lp2528
sg12
(lp2529
sg29
(dp2530
sbsS'TRuleBeamCandidateSelector'
p2531
(i__main__
ClassDefinition
p2532
(dp2533
g4
I1
sg5
I0
sg6
g2531
sg7
S'TOrange'
p2534
sg9
I01
sg10
(lp2535
sg12
(lp2536
sg29
(dp2537
sbsS'TSubsetsGenerator_minMaxSize'
p2538
(i__main__
ClassDefinition
p2539
(dp2540
g4
I1
sg5
I0
sg6
g2538
sg7
S'TSubsetsGenerator'
p2541
sg9
I00
sg10
(lp2542
sg12
(lp2543
(S'int'
p2544
S'min'
p2545
g2545
S'minimal subset size'
p2546
I0
I0
I01
Ntp2547
a(S'int'
p2548
S'max'
p2549
g2549
S'maximal subset size'
p2550
I0
I0
I01
Ntp2551
ag2360
asg29
(dp2552
sbsS'TContingencyClass'
p2553
(i__main__
ClassDefinition
p2554
(dp2555
g4
I1
sg5
I0
sg6
g2553
sg7
S'TContingency'
p2556
sg9
I01
sg10
(lp2557
sg12
(lp2558
g815
ag820
ag826
ag831
ag836
ag841
asg29
(dp2559
sbsS'TAssociationClassifier'
p2560
(i__main__
ClassDefinition
p2561
(dp2562
g4
I1
sg5
I0
sg6
g2560
sg7
S'TClassifierFD'
p2563
sg9
I00
sg10
(lp2564
sg12
(lp2565
(S'TAssociationRules'
p2566
S'rules'
p2567
g2567
S'association rules'
p2568
I0
I0
I00
Ntp2569
a(S'int'
p2570
S'voteWeight'
p2571
S'vote_weight'
p2572
S'vote weight (s=support, c=confidence, p=product)'
p2573
I0
I0
I01
Ntp2574
ag901
ag791
ag796
asg29
(dp2575
sbsS'TDomainDistributions'
p2576
(i__main__
ClassDefinition
p2577
(dp2578
g4
I1
sg5
I0
sg6
g2576
sg7
S'TOrange'
p2579
sg9
I00
sg10
(lp2580
sg12
(lp2581
sg29
(dp2582
sbsS'TSVMLearnerSparse'
p2583
(i__main__
ClassDefinition
p2584
(dp2585
g4
I1
sg5
I0
sg6
g2583
sg7
S'TSVMLearner'
p2586
sg9
I00
sg10
(lp2587
sg12
(lp2588
(S'bool'
p2589
S'useNonMeta'
p2590
S'use_non_meta'
p2591
S'include non meta attributes in the learning process'
p2592
I0
I0
I01
Ntp2593
ag2025
ag2030
ag2034
ag2038
ag2042
ag2046
ag2050
ag2054
ag2058
ag2061
ag2065
ag2069
ag2073
ag2078
ag47
asg29
(dp2594
sbsS'TSubsetsGenerator_constant_iterator'
p2595
(i__main__
ClassDefinition
p2596
(dp2597
g4
I1
sg5
I0
sg6
g2595
sg7
S'TSubsetsGenerator_iterator'
p2598
sg9
I00
sg10
(lp2599
sg12
(lp2600
(S'TVarList'
p2601
S'constant'
p2602
g2602
S'a subset that is returned (once!)'
p2603
I0
I0
I00
Ntp2604
a(S'bool'
p2605
S'moreToCome'
p2606
S'more_to_come'
p2607
g1294
I0
I0
I01
Ntp2608
ag192
asg29
(dp2609
sbsS'TExampleDistConstructor'
p2610
(i__main__
ClassDefinition
p2611
(dp2612
g4
I1
sg5
I0
sg6
g2610
sg7
S'TOrange'
p2613
sg9
I01
sg10
(lp2614
sg12
(lp2615
sg29
(dp2616
sbsS'TIMByIMByRows'
p2617
(i__main__
ClassDefinition
p2618
(dp2619
g4
I1
sg5
I0
sg6
g2617
sg7
S'TIMConstructor'
p2620
sg9
I00
sg10
(lp2621
sg12
(lp2622
(S'bool'
p2623
S'recordRowExamples'
p2624
S'record_row_examples'
p2625
S'enables creation of rowExample list'
p2626
I0
I0
I01
Ntp2627
asg29
(dp2628
sbsS'TDiscrete2Continuous'
p2629
(i__main__
ClassDefinition
p2630
(dp2631
g4
I1
sg5
I0
sg6
g2629
sg7
S'TTransformValue'
p2632
sg9
I00
sg10
(lp2633
sg12
(lp2634
(S'int'
p2635
S'value'
p2636
g2636
S'target value'
p2637
I0
I0
I01
Ntp2638
a(S'bool'
p2639
S'invert'
p2640
g2640
S'give 1.0 to values not equal to the target'
p2641
I0
I0
I01
Ntp2642
a(S'bool'
p2643
S'zeroBased'
p2644
S'zero_based'
p2645
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p2646
I0
I0
I01
Ntp2647
ag318
asg29
(dp2648
sbsS'TColumnAssessor_m'
p2649
(i__main__
ClassDefinition
p2650
(dp2651
g4
I1
sg5
I0
sg6
g2649
sg7
S'TColumnAssessor'
p2652
sg9
I00
sg10
(lp2653
sg12
(lp2654
(S'float'
p2655
g991
g991
S'm for m-estimate'
p2656
I0
I0
I01
Ntp2657
asg29
(dp2658
sbsS'TImputer_defaults'
p2659
(i__main__
ClassDefinition
p2660
(dp2661
g4
I1
sg5
I0
sg6
g2659
sg7
S'TImputer'
p2662
sg9
I00
sg10
(lp2663
sg12
(lp2664
(S'TExample'
p2665
S'defaults'
p2666
g2666
S'values that are to be inserted instead of missing ones'
p2667
I0
I0
I00
Ntp2668
asg29
(dp2669
sbsS'TContingency'
p2670
(i__main__
ClassDefinition
p2671
(dp2672
g4
I1
sg5
I0
sg6
g2670
sg7
S'TOrange'
p2673
sg9
I00
sg10
(lp2674
sg12
(lp2675
g815
ag820
ag826
ag831
ag836
ag841
asg29
(dp2676
sbsS'TStringValue'
p2677
(i__main__
ClassDefinition
p2678
(dp2679
g4
I1
sg5
I0
sg6
g2677
sg7
S'TSomeValue'
p2680
sg9
I00
sg10
(lp2681
sg12
(lp2682
sg29
(dp2683
sbsS'TClassifierGenerator'
p2684
(i__main__
ClassDefinition
p2685
(dp2686
g4
I1
sg5
I0
sg6
g2684
sg7
S'TExampleGenerator'
p2687
sg9
I00
sg10
(lp2688
sg12
(lp2689
(S'TClassifier'
p2690
S'classify'
p2691
g2691
S'classifier'
p2692
I0
I0
I00
Ntp2693
ag121
ag125
asg29
(dp2694
sbsS'TRuleDataStoppingCriteria_Python'
p2695
(i__main__
ClassDefinition
p2696
(dp2697
g4
I1
sg5
I0
sg6
g2695
sg7
S'TRuleDataStoppingCriteria'
p2698
sg9
I00
sg10
(lp2699
sg12
(lp2700
sg29
(dp2701
sbsS'TTreeDescender_UnknownToCommonSelector'
p2702
(i__main__
ClassDefinition
p2703
(dp2704
g4
I1
sg5
I0
sg6
g2702
sg7
g2227
sg9
I0
sg10
(lp2705
sg12
(lp2706
sg29
(dp2707
sbsS'TPreprocessIM'
p2708
(i__main__
ClassDefinition
p2709
(dp2710
g4
I1
sg5
I0
sg6
g2708
sg7
S'TOrange'
p2711
sg9
I01
sg10
(lp2712
sg12
(lp2713
sg29
(dp2714
sbsS'TRuleEvaluator_Laplace'
p2715
(i__main__
ClassDefinition
p2716
(dp2717
g4
I1
sg5
I0
sg6
g2715
sg7
S'TRuleEvaluator'
p2718
sg9
I00
sg10
(lp2719
sg12
(lp2720
sg29
(dp2721
sbsS'TColumnAssessor_N'
p2722
(i__main__
ClassDefinition
p2723
(dp2724
g4
I1
sg5
I0
sg6
g2722
sg7
S'TColumnAssessor'
p2725
sg9
I00
sg10
(lp2726
sg12
(lp2727
sg29
(dp2728
sbsS'TRuleEvaluator_mEVC'
p2729
(i__main__
ClassDefinition
p2730
(dp2731
g4
I1
sg5
I0
sg6
g2729
sg7
S'TRuleEvaluator'
p2732
sg9
I00
sg10
(lp2733
sg12
(lp2734
(S'float'
p2735
g991
g991
S'Parameter m for m-estimate after EVC correction'
p2736
I0
I0
I01
Ntp2737
a(S'TEVDistGetter'
p2738
S'evDistGetter'
p2739
S'ev_dist_getter'
p2740
S'get EVC distribution for chi correction'
p2741
I0
I0
I00
Ntp2742
a(S'TVariable'
p2743
S'probVar'
p2744
S'prob_var'
p2745
S'probability coverage variable (meta usually)'
p2746
I0
I0
I00
Ntp2747
a(S'TRuleValidator'
p2748
S'validator'
p2749
g2749
S'rule validator for best rule'
p2750
I0
I0
I00
Ntp2751
a(S'int'
p2752
S'min_improved'
p2753
g2753
S'minimal number of improved examples'
p2754
I0
I0
I01
Ntp2755
a(S'float'
p2756
S'min_improved_perc'
p2757
g2757
S'minimal percentage of improved examples'
p2758
I0
I0
I01
Ntp2759
a(S'TRule'
p2760
S'bestRule'
p2761
S'best_rule'
p2762
S'best rule found and evaluated given conditions (min_improved, validator)'
p2763
I0
I0
I00
Ntp2764
a(S'float'
p2765
S'ruleAlpha'
p2766
S'rule_alpha'
p2767
S"minimal 'true' rule significance"
p2768
I0
I0
I01
Ntp2769
a(S'float'
p2770
S'attributeAlpha'
p2771
S'attribute_alpha'
p2772
S'minimal attribute significance'
p2773
I0
I0
I01
Ntp2774
a(S'bool'
p2775
S'returnExpectedProb'
p2776
S'return_expected_prob'
p2777
S'if true, evaluator returns expected class probability, if false, current class probability'
p2778
I0
I0
I01
Ntp2779
a(S'int'
p2780
S'optimismReduction'
p2781
S'optimism_reduction'
p2782
S'to select optimstic (0), pessimistic (1) or EVC (2) evaluation'
p2783
I0
I0
I01
Ntp2784
asg29
(dp2785
sbsS'TExample'
p2786
(i__main__
ClassDefinition
p2787
(dp2788
g4
I1
sg5
I0
sg6
g2786
sg7
S'TOrange'
p2789
sg9
I00
sg10
(lp2790
sg12
(lp2791
(S'TDomain'
p2792
S'domain'
p2793
g2793
S"Example's domain"
p2794
I01
I0
I00
Ntp2795
a(S'int'
p2796
S'id'
p2797
g2797
g1294
I0
I0
I01
Ntp2798
asg29
(dp2799
sbsS'TOrdinal2Continuous'
p2800
(i__main__
ClassDefinition
p2801
(dp2802
g4
I1
sg5
I0
sg6
g2800
sg7
S'TTransformValue'
p2803
sg9
I00
sg10
(lp2804
sg12
(lp2805
(S'float'
p2806
S'factor'
p2807
g2807
S'number of values'
p2808
I0
I0
I01
Ntp2809
ag318
asg29
(dp2810
sbsS'TExampleDistBySorting'
p2811
(i__main__
ClassDefinition
p2812
(dp2813
g4
I1
sg5
I0
sg6
g2811
sg7
S'TExampleDistConstructor'
p2814
sg9
I00
sg10
(lp2815
sg12
(lp2816
sg29
(dp2817
sbsS'TValueFilter_discrete'
p2818
(i__main__
ClassDefinition
p2819
(dp2820
g4
I1
sg5
I0
sg6
g2818
sg7
S'TValueFilter'
p2821
sg9
I00
sg10
(lp2822
sg12
(lp2823
(S'TValueList'
p2824
S'values'
p2825
g2825
S'accepted values'
p2826
I0
I0
I00
Ntp2827
a(S'bool'
p2828
S'negate'
p2829
g2829
S'negate'
p2830
I0
I0
I01
Ntp2831
a(S'int'
p2832
S'position'
p2833
g2833
S"attribute's position in domain"
p2834
I0
I0
I01
Ntp2835
a(S'int'
p2836
S'acceptSpecial'
p2837
S'accept_special'
p2838
S'tells whether a special value (DK, DC...) is accepted (1), rejected (0) or ignored (-1)'
p2839
I0
I0
I01
Ntp2840
asg29
(dp2841
sbsS'TAssociationRulesInducer'
p2842
(i__main__
ClassDefinition
p2843
(dp2844
g4
I1
sg5
I0
sg6
g2842
sg7
S'TOrange'
p2845
sg9
I00
sg10
(lp2846
sg12
(lp2847
(S'int'
p2848
S'maxItemSets'
p2849
S'max_item_sets'
p2850
S'maximal number of itemsets (increase if you want)'
p2851
I0
I0
I01
Ntp2852
a(S'float'
p2853
S'confidence'
p2854
g2854
S'required confidence'
p2855
I0
I0
I01
Ntp2856
a(S'float'
p2857
S'support'
p2858
g2858
S'required support'
p2859
I0
I0
I01
Ntp2860
a(S'bool'
p2861
S'classificationRules'
p2862
S'classification_rules'
p2863
S'if true, rules will have the class and only the class attribute on the right-hand side'
p2864
I0
I0
I01
Ntp2865
a(S'bool'
p2866
S'storeExamples'
p2867
S'store_examples'
p2868
S'if true, each rule is going to have tables with references to examples which match its left side or both sides'
p2869
I0
I0
I01
Ntp2870
asg29
(dp2871
sbsS'TPreprocessor_addMissingClasses'
p2872
(i__main__
ClassDefinition
p2873
(dp2874
g4
I1
sg5
I0
sg6
g2872
sg7
S'TPreprocessor'
p2875
sg9
I00
sg10
(lp2876
sg12
(lp2877
(S'float'
p2878
S'proportion'
p2879
g2879
S'proportion of removed class values'
p2880
I0
I0
I01
Ntp2881
a(S'int'
p2882
S'specialType'
p2883
S'special_type'
p2884
S'special value type (1=DC, 2=DK)'
p2885
I0
I0
I01
Ntp2886
a(S'TRandomGenerator'
p2887
S'randomGenerator'
p2888
S'random_generator'
p2889
S'random number generator'
p2890
I0
I0
I00
Ntp2891
asg29
(dp2892
sbsS'TBasketExampleGenerator'
p2893
(i__main__
ClassDefinition
p2894
(dp2895
g4
I1
sg5
I0
sg6
g2893
sg7
S'TFileExampleGenerator'
p2896
sg9
I00
sg10
(lp2897
sg12
(lp2898
g737
ag742
ag747
ag121
ag125
asg29
(dp2899
sbsS'TRuleEvaluator_Entropy'
p2900
(i__main__
ClassDefinition
p2901
(dp2902
g4
I1
sg5
I0
sg6
g2900
sg7
S'TRuleEvaluator'
p2903
sg9
I00
sg10
(lp2904
sg12
(lp2905
sg29
(dp2906
sbsS'TExamplesDistance_DTW'
p2907
(i__main__
ClassDefinition
p2908
(dp2909
g4
I1
sg5
I0
sg6
g2907
sg7
S'TExamplesDistance_Normalized'
p2910
sg9
I00
sg10
(lp2911
sg12
(lp2912
(S'int'
p2913
S'dtwDistance'
p2914
S'dtw_distance'
p2915
S' distance measure between individual attributes (default: square of difference)'
p2916
I0
I0
I01
S'ExamplesDistance_DTW_DistanceType'
p2917
tp2918
ag136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp2919
S'DistanceType'
p2920
(lp2921
(S'Euclidean'
p2922
I0
tp2923
a(S'Derivative'
p2924
I1
tp2925
assbsS'TTreeExampleSplitter_UnknownsToRandom'
p2926
(i__main__
ClassDefinition
p2927
(dp2928
g4
I1
sg5
I0
sg6
g2926
sg7
S'TTreeExampleSplitter'
p2929
sg9
I00
sg10
(lp2930
sg12
(lp2931
sg29
(dp2932
sbsS'TTreeSplitConstructor_Combined'
p2933
(i__main__
ClassDefinition
p2934
(dp2935
g4
I1
sg5
I0
sg6
g2933
sg7
S'TTreeSplitConstructor'
p2936
sg9
I00
sg10
(lp2937
sg12
(lp2938
(S'TTreeSplitConstructor'
p2939
S'discreteSplitConstructor'
p2940
S'discrete_split_constructor'
p2941
S'split constructor for discrete attributes'
p2942
I0
I0
I00
Ntp2943
a(S'TTreeSplitConstructor'
p2944
S'continuousSplitConstructor'
p2945
S'continuous_split_constructor'
p2946
S'split constructor for continuous attributes'
p2947
I0
I0
I00
Ntp2948
ag1707
asg29
(dp2949
sbsS'TExamplesDistanceConstructor_DTW'
p2950
(i__main__
ClassDefinition
p2951
(dp2952
g4
I1
sg5
I0
sg6
g2950
sg7
S'TExamplesDistanceConstructor_Normalized'
p2953
sg9
I00
sg10
(lp2954
sg12
(lp2955
(S'int'
p2956
S'dtwDistance'
p2957
S'dtw_distance'
p2958
S'distance measure between individual attributes (default: square of difference)'
p2959
I0
I0
I01
Ntp2960
ag96
ag101
ag106
asg29
(dp2961
sbsS'TStopIMClusteringByAssessor_n'
p2962
(i__main__
ClassDefinition
p2963
(dp2964
g4
I1
sg5
I0
sg6
g2962
sg7
S'TStopIMClusteringByAssessor'
p2965
sg9
I00
sg10
(lp2966
sg12
(lp2967
(S'int'
p2968
g385
g385
S'number of clusters'
p2969
I0
I0
I01
Ntp2970
asg29
(dp2971
sbsS'TRandomGenerator'
p2972
(i__main__
ClassDefinition
p2973
(dp2974
g4
I1
sg5
I0
sg6
g2972
sg7
S'TOrange'
p2975
sg9
I00
sg10
(lp2976
sg12
(lp2977
(S'int'
p2978
S'initseed'
p2979
g2979
S'initial random seed'
p2980
I0
I0
I01
Ntp2981
a(S'int'
p2982
S'uses'
p2983
g2983
S'#times a number was returned'
p2984
I0
I0
I01
Ntp2985
asg29
(dp2986
sbsS'TPreprocessor_imputeByLearner'
p2987
(i__main__
ClassDefinition
p2988
(dp2989
g4
I1
sg5
I0
sg6
g2987
sg7
S'TPreprocessor'
p2990
sg9
I00
sg10
(lp2991
sg12
(lp2992
(S'TLearner'
p2993
S'learner'
p2994
g2994
S'learner used for inducing a model for imputation'
p2995
I0
I0
I00
Ntp2996
asg29
(dp2997
sbsS'TLogRegLearner'
p2998
(i__main__
ClassDefinition
p2999
(dp3000
g4
I1
sg5
I0
sg6
g2998
sg7
S'TLearner'
p3001
sg9
I00
sg10
(lp3002
sg12
(lp3003
(S'TLogRegFitter'
p3004
S'fitter'
p3005
g3005
S'fits beta coefficients and calculates beta errors.'
p3006
I0
I0
I00
Ntp3007
a(S'TImputerConstructor'
p3008
S'imputerConstructor'
p3009
S'imputer_constructor'
p3010
S'if present, it constructs an imputer for unknown values'
p3011
I0
I0
I00
Ntp3012
a(S'TDomainContinuizer'
p3013
S'domainContinuizer'
p3014
S'domain_continuizer'
p3015
S'if present, it constructs continuous domain if needed; if absent, default is used'
p3016
I0
I0
I00
Ntp3017
ag47
asg29
(dp3018
sbsS'TMeasureAttribute_IM'
p3019
(i__main__
ClassDefinition
p3020
(dp3021
g4
I1
sg5
I0
sg6
g3019
sg7
S'TMeasureAttribute'
p3022
sg9
I00
sg10
(lp3023
sg12
(lp3024
(S'TIMConstructor'
p3025
S'IMconstructor'
p3026
g3026
S'incompatibility matrix constructor'
p3027
I0
I0
I00
Ntp3028
a(S'TColumnAssessor'
p3029
S'columnAssessor'
p3030
S'column_assessor'
p3031
S'column quality assessor'
p3032
I0
I0
I00
Ntp3033
ag462
ag467
ag472
ag477
asg29
(dp3034
sbsS'TRuleStoppingCriteria_Python'
p3035
(i__main__
ClassDefinition
p3036
(dp3037
g4
I1
sg5
I0
sg6
g3035
sg7
S'TRuleStoppingCriteria'
p3038
sg9
I00
sg10
(lp3039
sg12
(lp3040
sg29
(dp3041
sbsS'TRemoveUnusedValues'
p3042
(i__main__
ClassDefinition
p3043
(dp3044
g4
I1
sg5
I0
sg6
g3042
sg7
S'TOrange'
p3045
sg9
I00
sg10
(lp3046
sg12
(lp3047
(S'bool'
p3048
S'removeOneValued'
p3049
S'remove_one_valued'
p3050
S'if true (default is false), one valued attributes are also removed'
p3051
I0
I0
I01
Ntp3052
asg29
(dp3053
sbsS'TExamplesDistance_Normalized'
p3054
(i__main__
ClassDefinition
p3055
(dp3056
g4
I1
sg5
I0
sg6
g3054
sg7
S'TExamplesDistance'
p3057
sg9
I01
sg10
(lp3058
sg12
(lp3059
g136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp3060
sbsS'TPreprocessor_take'
p3061
(i__main__
ClassDefinition
p3062
(dp3063
g4
I1
sg5
I0
sg6
g3061
sg7
S'TPreprocessor'
p3064
sg9
I00
sg10
(lp3065
sg12
(lp3066
(S'TVariableFilterMap'
p3067
S'values'
p3068
g3068
S'variable-filter pairs'
p3069
I0
I0
I00
Ntp3070
a(S'bool'
p3071
S'conjunction'
p3072
g3072
S'decides whether to take conjunction or disjunction of values'
p3073
I0
I0
I01
Ntp3074
asg29
(dp3075
sbsS'TRuleFinder_Python'
p3076
(i__main__
ClassDefinition
p3077
(dp3078
g4
I1
sg5
I0
sg6
g3076
sg7
S'TRuleFinder'
p3079
sg9
I00
sg10
(lp3080
sg12
(lp3081
g1908
ag1911
asg29
(dp3082
sbsS'TTabDelimExampleGenerator'
p3083
(i__main__
ClassDefinition
p3084
(dp3085
g4
I1
sg5
I0
sg6
g3083
sg7
S'TFileExampleGenerator'
p3086
sg9
I00
sg10
(lp3087
sg12
(lp3088
(S'TIntList'
p3089
S'attributeTypes'
p3090
S'attribute_types'
p3091
S'types of attributes (-1 normal, 0 skip, <-1 = meta ID)'
p3092
I0
I0
I00
Ntp3093
a(S'int'
p3094
S'classPos'
p3095
S'class_pos'
p3096
S'position of the class attribute'
p3097
I0
I0
I01
Ntp3098
a(S'TIntList'
p3099
S'classPoses'
p3100
S'class_poses'
p3101
S'positions of class attributes if there are multiple; otherwise None'
p3102
I0
I0
I00
Ntp3103
a(S'int'
p3104
S'basketPos'
p3105
S'basket_pos'
p3106
S'position of the (virtual) basket attribute'
p3107
I0
I0
I01
Ntp3108
a(S'int'
p3109
S'headerLines'
p3110
S'header_lines'
p3111
S'number of header lines (3 for .tab, 1 for .txt)'
p3112
I0
I0
I01
Ntp3113
a(S'bool'
p3114
S'csv'
p3115
g3115
S"also allow ',' as a separator"
p3116
I0
I0
I01
Ntp3117
a(S'TBasketFeeder'
p3118
S'basketFeeder'
p3119
S'basket_feeder'
p3120
S'takes care of inserting the meta attributes from the basket if need be'
p3121
I0
I0
I00
Ntp3122
ag737
ag742
ag747
ag121
ag125
asg29
(dp3123
sbsS'TkNNLearner'
p3124
(i__main__
ClassDefinition
p3125
(dp3126
g4
I1
sg5
I0
sg6
g3124
sg7
S'TLearner'
p3127
sg9
I00
sg10
(lp3128
sg12
(lp3129
(S'float'
p3130
g987
g987
S'number of neighbours (0 for sqrt of #examples)'
p3131
I0
I0
I01
Ntp3132
a(S'bool'
p3133
S'rankWeight'
p3134
S'rank_weight'
p3135
S'enable weighting by ranks'
p3136
I0
I0
I01
Ntp3137
a(S'TExamplesDistanceConstructor'
p3138
S'distanceConstructor'
p3139
S'distance_constructor'
p3140
S'metrics'
p3141
I0
I0
I00
Ntp3142
ag47
asg29
(dp3143
sbsS'TDistributionAssessor_mf'
p3144
(i__main__
ClassDefinition
p3145
(dp3146
g4
I1
sg5
I0
sg6
g3144
sg7
S'TDistributionAssessor'
p3147
sg9
I00
sg10
(lp3148
sg12
(lp3149
(S'float'
p3150
g991
g991
S'm for m-estimate'
p3151
I0
I0
I01
Ntp3152
asg29
(dp3153
sbsS'TEFMDataDescription'
p3154
(i__main__
ClassDefinition
p3155
(dp3156
g4
I1
sg5
I0
sg6
g3154
sg7
S'TOrange'
p3157
sg9
I00
sg10
(lp3158
S'domainDistributions'
p3159
asg12
(lp3160
(S'TDomain'
p3161
S'domain'
p3162
g3162
S'domain'
p3163
I01
I0
I00
Ntp3164
asg29
(dp3165
sbsS'TClassifierFD'
p3166
(i__main__
ClassDefinition
p3167
(dp3168
g4
I1
sg5
I0
sg6
g3166
sg7
S'TClassifier'
p3169
sg9
I00
sg10
(lp3170
sg12
(lp3171
g901
ag791
ag796
asg29
(dp3172
sbsS'TTreeDescender_UnknownToCommonBranch'
p3173
(i__main__
ClassDefinition
p3174
(dp3175
g4
I1
sg5
I0
sg6
g3173
sg7
g2227
sg9
I0
sg10
(lp3176
sg12
(lp3177
sg29
(dp3178
sbsS'TStopIMClusteringByAssessor_binary'
p3179
(i__main__
ClassDefinition
p3180
(dp3181
g4
I1
sg5
I0
sg6
g3179
sg7
S'TStopIMClusteringByAssessor'
p3182
sg9
I00
sg10
(lp3183
sg12
(lp3184
sg29
(dp3185
sbsS'TExamplesDistanceConstructor'
p3186
(i__main__
ClassDefinition
p3187
(dp3188
g4
I1
sg5
I0
sg6
g3186
sg7
S'TOrange'
p3189
sg9
I01
sg10
(lp3190
sg12
(lp3191
g106
asg29
(dp3192
sbsS'TRuleBeamCandidateSelector_Python'
p3193
(i__main__
ClassDefinition
p3194
(dp3195
g4
I1
sg5
I0
sg6
g3193
sg7
S'TRuleBeamCandidateSelector'
p3196
sg9
I00
sg10
(lp3197
sg12
(lp3198
sg29
(dp3199
sbsS'TEntropyDiscretization'
p3200
(i__main__
ClassDefinition
p3201
(dp3202
g4
I1
sg5
I0
sg6
g3200
sg7
S'TDiscretization'
p3203
sg9
I00
sg10
(lp3204
sg12
(lp3205
(S'int'
p3206
S'maxNumberOfIntervals'
p3207
(g3207
g385
tp3208
S' maximal number of intervals; default = 0 (no limits)'
p3209
I0
I0
I01
Ntp3210
a(S'bool'
p3211
S'forceAttribute'
p3212
(g3212
S'forced'
p3213
tp3214
S' minimal number of intervals; default = 0 (no limits)'
p3215
I0
I0
I01
Ntp3216
asg29
(dp3217
sbsS'TIMBySorting'
p3218
(i__main__
ClassDefinition
p3219
(dp3220
g4
I1
sg5
I0
sg6
g3218
sg7
S'TIMConstructor'
p3221
sg9
I00
sg10
(lp3222
sg12
(lp3223
g2627
asg29
(dp3224
sbsS'TImputerConstructor_asValue'
p3225
(i__main__
ClassDefinition
p3226
(dp3227
g4
I1
sg5
I0
sg6
g3225
sg7
S'TImputerConstructor'
p3228
sg9
I00
sg10
(lp3229
sg12
(lp3230
g1487
asg29
(dp3231
sbsS'TExampleDistVector'
p3232
(i__main__
ClassDefinition
p3233
(dp3234
g4
I1
sg5
I0
sg6
g3232
sg7
S'TOrange'
p3235
sg9
I00
sg10
(lp3236
sg12
(lp3237
sg29
(dp3238
sbsS'TIMClustering'
p3239
(i__main__
ClassDefinition
p3240
(dp3241
g4
I1
sg5
I0
sg6
g3239
sg7
S'TOrange'
p3242
sg9
I00
sg10
(lp3243
sg12
(lp3244
(S'TIM'
p3245
S'im'
p3246
g3246
S'incompatibilty matrix'
p3247
I0
I0
I00
Ntp3248
a(S'TIntList'
p3249
S'clusters'
p3250
g3250
S'cluster index for each matrix column'
p3251
I0
I0
I00
Ntp3252
a(S'int'
p3253
S'maxCluster'
p3254
S'max_cluster'
p3255
S'the highest cluster index'
p3256
I0
I0
I01
Ntp3257
a(S'float'
p3258
S'quality'
p3259
g3259
S'cluster quality'
p3260
I0
I0
I01
Ntp3261
asg29
(dp3262
sbsS'TRuleStoppingCriteria'
p3263
(i__main__
ClassDefinition
p3264
(dp3265
g4
I1
sg5
I0
sg6
g3263
sg7
S'TOrange'
p3266
sg9
I01
sg10
(lp3267
sg12
(lp3268
sg29
(dp3269
sbsS'TImputerConstructor_model'
p3270
(i__main__
ClassDefinition
p3271
(dp3272
g4
I1
sg5
I0
sg6
g3270
sg7
S'TImputerConstructor'
p3273
sg9
I00
sg10
(lp3274
sg12
(lp3275
(S'TLearner'
p3276
S'learnerDiscrete'
p3277
S'learner_discrete'
p3278
S'learner for discrete attributes'
p3279
I0
I0
I00
Ntp3280
a(S'TLearner'
p3281
S'learnerContinuous'
p3282
S'learner_continuous'
p3283
S'learner for continuous attributes'
p3284
I0
I0
I00
Ntp3285
a(S'bool'
p3286
S'useClass'
p3287
S'use_class'
p3288
S'tells whether to use class value in imputation (default: false)'
p3289
I0
I0
I01
Ntp3290
ag1487
asg29
(dp3291
sbsS'TFindNearestConstructor_BruteForce'
p3292
(i__main__
ClassDefinition
p3293
(dp3294
g4
I1
sg5
I0
sg6
g3292
sg7
S'TFindNearestConstructor'
p3295
sg9
I00
sg10
(lp3296
sg12
(lp3297
g1035
ag1040
asg29
(dp3298
sbsS'TImputerConstructor'
p3299
(i__main__
ClassDefinition
p3300
(dp3301
g4
I1
sg5
I0
sg6
g3299
sg7
S'TOrange'
p3302
sg9
I01
sg10
(lp3303
sg12
(lp3304
g1487
asg29
(dp3305
sbsS'TDiscretizer'
p3306
(i__main__
ClassDefinition
p3307
(dp3308
g4
I1
sg5
I0
sg6
g3306
sg7
S'TTransformValue'
p3309
sg9
I01
sg10
(lp3310
sg12
(lp3311
g318
asg29
(dp3312
sbsS'TTreeStopCriteria_common'
p3313
(i__main__
ClassDefinition
p3314
(dp3315
g4
I1
sg5
I0
sg6
g3313
sg7
S'TTreeStopCriteria'
p3316
sg9
I00
sg10
(lp3317
sg12
(lp3318
(S'float'
p3319
S'maxMajority'
p3320
S'max_majority'
p3321
S'a maximal proportion of majority class for division to continue'
p3322
I0
I0
I01
Ntp3323
a(S'float'
p3324
S'minInstances'
p3325
S'min_instances'
p3326
S'a minimal number of examples for division to continue'
p3327
I0
I0
I01
Ntp3328
asg29
(dp3329
sbsS'TTreeStopCriteria_Python'
p3330
(i__main__
ClassDefinition
p3331
(dp3332
g4
I1
sg5
I0
sg6
g3330
sg7
S'TTreeStopCriteria'
p3333
sg9
I00
sg10
(lp3334
sg12
(lp3335
sg29
(dp3336
sbsS'TIGByIM'
p3337
(i__main__
ClassDefinition
p3338
(dp3339
g4
I1
sg5
I0
sg6
g3337
sg7
S'TIGConstructor'
p3340
sg9
I00
sg10
(lp3341
sg12
(lp3342
(S'TIMConstructor'
p3343
S'IMconstructor'
p3344
g3344
S'IM constructor'
p3345
I0
I0
I00
Ntp3346
asg29
(dp3347
sbsS'TRuleEvaluator_LRS'
p3348
(i__main__
ClassDefinition
p3349
(dp3350
g4
I1
sg5
I0
sg6
g3348
sg7
S'TRuleEvaluator'
p3351
sg9
I00
sg10
(lp3352
sg12
(lp3353
(S'TRuleList'
p3354
S'rules'
p3355
g3355
g1294
I0
I0
I00
Ntp3356
a(S'bool'
p3357
S'storeRules'
p3358
S'store_rules'
p3359
g1294
I0
I0
I01
Ntp3360
asg29
(dp3361
sbsS'TExampleCluster'
p3362
(i__main__
ClassDefinition
p3363
(dp3364
g4
I1
sg5
I0
sg6
g3362
sg7
S'TOrange'
p3365
sg9
I00
sg10
(lp3366
sg12
(lp3367
(S'TExampleCluster'
p3368
S'left'
p3369
g3369
S"'left' cluster"
p3370
I0
I0
I00
Ntp3371
a(S'TExampleCluster'
p3372
S'right'
p3373
g3373
S"'right' cluster"
p3374
I0
I0
I00
Ntp3375
a(S'float'
p3376
S'distance'
p3377
g3377
S'distance between the two clusters (not defined for leaves)'
p3378
I0
I0
I01
Ntp3379
a(S'TExample'
p3380
S'centroid'
p3381
g3381
S"cluster's centroid (always defined for leaves)"
p3382
I0
I0
I00
Ntp3383
asg29
(dp3384
sbsS'TClassifierByLookupTableN'
p3385
(i__main__
ClassDefinition
p3386
(dp3387
g4
I1
sg5
I0
sg6
g3385
sg7
S'TClassifierByLookupTable'
p3388
sg9
I00
sg10
(lp3389
sg12
(lp3390
(S'TVarList'
p3391
S'variables'
p3392
g3392
S'attributes'
p3393
I01
I0
I00
Ntp3394
a(S'TIntList'
p3395
S'noOfValues'
p3396
S'no_of_values'
p3397
S'number of values for each attribute'
p3398
I01
I0
I00
Ntp3399
a(S'TEFMDataDescription'
p3400
S'dataDescription'
p3401
S'data_description'
p3402
S'data description'
p3403
I0
I0
I00
Ntp3404
ag782
ag786
ag791
ag796
asg29
(dp3405
sbsS'TP2NN'
p3406
(i__main__
ClassDefinition
p3407
(dp3408
g4
I1
sg5
I0
sg6
g3406
sg7
S'TPNN'
p3409
sg9
I00
sg10
(lp3410
sg12
(lp3411
(S'int'
p3412
S'dimensions'
p3413
g3413
S'the number of dimensions'
p3414
I01
I0
I01
Ntp3415
a(S'TFloatList'
p3416
S'offsets'
p3417
g3417
S'offsets to subtract from the attribute values'
p3418
I0
I0
I00
Ntp3419
a(S'TFloatList'
p3420
S'normalizers'
p3421
g3421
S'number to divide the values by'
p3422
I0
I0
I00
Ntp3423
a(S'TFloatList'
p3424
S'averages'
p3425
g3425
S'numbers to use instead of the missing'
p3426
I0
I0
I00
Ntp3427
a(S'bool'
p3428
S'normalizeExamples'
p3429
S'normalize_examples'
p3430
S'if true, attribute values are divided to sum up to 1'
p3431
I0
I0
I01
Ntp3432
a(S'int'
p3433
S'nExamples'
p3434
S'n_examples'
p3435
S'the number of examples'
p3436
I01
I0
I01
Ntp3437
a(S'int'
p3438
S'law'
p3439
g3439
S'law'
p3440
I0
I0
I01
Ntp3441
ag901
ag791
ag796
asg29
(dp3442
sbsS'TImputerConstruct_Python'
p3443
(i__main__
ClassDefinition
p3444
(dp3445
g4
I1
sg5
I0
sg6
g3443
sg7
S'TImputerConstructor'
p3446
sg9
I00
sg10
(lp3447
sg12
(lp3448
g1487
asg29
(dp3449
sbsS'TSubsetsGenerator_withRestrictions'
p3450
(i__main__
ClassDefinition
p3451
(dp3452
g4
I1
sg5
I0
sg6
g3450
sg7
S'TSubsetsGenerator'
p3453
sg9
I00
sg10
(lp3454
sg12
(lp3455
(S'TSubsetsGenerator'
p3456
S'subGenerator'
p3457
S'sub_generator'
p3458
S'subset generator'
p3459
I0
I0
I00
Ntp3460
a(S'TVarList'
p3461
S'required'
p3462
g3462
S'set of required attributes'
p3463
I0
I0
I00
Ntp3464
a(S'TVarList'
p3465
S'forbidden'
p3466
g3466
S'set of forbidden attributes'
p3467
I0
I0
I00
Ntp3468
a(S'TVarListList'
p3469
S'forbiddenSubSubsets'
p3470
S'forbidden_sub_subsets'
p3471
S'set of forbidden subsets (attributes that must not occur together)'
p3472
I0
I0
I00
Ntp3473
ag2360
asg29
(dp3474
sbsS'TRuleBeamFilter_Python'
p3475
(i__main__
ClassDefinition
p3476
(dp3477
g4
I1
sg5
I0
sg6
g3475
sg7
S'TRuleBeamFilter'
p3478
sg9
I00
sg10
(lp3479
sg12
(lp3480
sg29
(dp3481
sbsS'TTreeExampleSplitter'
p3482
(i__main__
ClassDefinition
p3483
(dp3484
g4
I1
sg5
I0
sg6
g3482
sg7
S'TOrange'
p3485
sg9
I01
sg10
(lp3486
sg12
(lp3487
sg29
(dp3488
sbsS'TSVMClassifier'
p3489
(i__main__
ClassDefinition
p3490
(dp3491
g4
I1
sg5
I0
sg6
g3489
sg7
S'TClassifierFD'
p3492
sg9
I00
sg10
(lp3493
sg12
(lp3494
(S'TIntList'
p3495
S'nSV'
p3496
S'n_SV'
p3497
S'nSV'
p3498
I0
I0
I00
Ntp3499
a(S'TFloatList'
p3500
S'rho'
p3501
g3501
S'rho'
p3502
I0
I0
I00
Ntp3503
a(S'TFloatListList'
p3504
S'coef'
p3505
g3505
S'coef'
p3506
I0
I0
I00
Ntp3507
a(S'TFloatList'
p3508
S'probA'
p3509
S'prob_a'
p3510
S'probA - pairwise probability information'
p3511
I0
I0
I00
Ntp3512
a(S'TFloatList'
p3513
S'probB'
p3514
S'prob_b'
p3515
S'probB - pairwise probability information'
p3516
I0
I0
I00
Ntp3517
a(S'TExampleTable'
p3518
S'supportVectors'
p3519
S'support_vectors'
p3520
S'support vectors'
p3521
I0
I0
I00
Ntp3522
a(S'TExampleTable'
p3523
S'examples'
p3524
g3524
S'examples used to train the classifier'
p3525
I0
I0
I00
Ntp3526
a(S'TKernelFunc'
p3527
S'kernelFunc'
p3528
S'kernel_func'
p3529
S'custom kernel function'
p3530
I0
I0
I00
Ntp3531
a(S'int'
p3532
S'svm_type'
p3533
g3533
S'  SVM type (C_SVC=0, NU_SVC, ONE_CLASS, EPSILON_SVR=3, NU_SVR=4)'
p3534
I0
I0
I01
S'SVMLearner_SVMType'
p3535
tp3536
a(S'int'
p3537
S'kernel_type'
p3538
g3538
S'  kernel type (LINEAR=0, POLY, RBF, SIGMOID, CUSTOM=4)'
p3539
I0
I0
I01
S'SVMLearner_Kernel'
p3540
tp3541
ag901
ag791
ag796
asg29
(dp3542
sbsS'TTreeLearner'
p3543
(i__main__
ClassDefinition
p3544
(dp3545
g4
I1
sg5
I0
sg6
g3543
sg7
S'TLearner'
p3546
sg9
I00
sg10
(lp3547
sg12
(lp3548
(S'TTreeSplitConstructor'
p3549
S'split'
p3550
g3550
S'split criterion'
p3551
I0
I0
I00
Ntp3552
a(S'TTreeStopCriteria'
p3553
S'stop'
p3554
g3554
S'stop criterion'
p3555
I0
I0
I00
Ntp3556
a(S'TComputeDomainContingency'
p3557
S'contingencyComputer'
p3558
S'contingency_computer'
p3559
S'computes contingency matrix'
p3560
I0
I0
I00
Ntp3561
a(S'TLearner'
p3562
S'nodeLearner'
p3563
S'node_learner'
p3564
S'node learner'
p3565
I0
I0
I00
Ntp3566
a(S'TTreeExampleSplitter'
p3567
S'exampleSplitter'
p3568
S'example_splitter'
p3569
S'splits examples to branches'
p3570
I0
I0
I00
Ntp3571
a(S'int'
p3572
S'maxDepth'
p3573
S'max_depth'
p3574
S'maximal tree depth (0 = root only, -1 = no limit)'
p3575
I0
I0
I01
Ntp3576
a(S'bool'
p3577
S'storeExamples'
p3578
S'store_examples'
p3579
S'if true (default: false), learning examples in nodes are stored'
p3580
I0
I0
I01
Ntp3581
a(S'bool'
p3582
S'storeDistributions'
p3583
S'store_distributions'
p3584
S'if true (default), class distributions of learning examples in nodes are stored'
p3585
I0
I0
I01
Ntp3586
a(S'bool'
p3587
S'storeContingencies'
p3588
S'store_contingencies'
p3589
S'if true (default), contingency matrices for examples are stored'
p3590
I0
I0
I01
Ntp3591
a(S'bool'
p3592
S'storeNodeClassifier'
p3593
S'store_node_classifier'
p3594
S'if true (default), the internal nodes have classifiers; needed for pruning'
p3595
I0
I0
I01
Ntp3596
a(S'TTreeDescender'
p3597
S'descender'
p3598
g3598
S'descends down the tree'
p3599
I0
I0
I00
Ntp3600
ag47
asg29
(dp3601
sbsS'TPreprocessor_shuffle'
p3602
(i__main__
ClassDefinition
p3603
(dp3604
g4
I1
sg5
I0
sg6
g3602
sg7
S'TPreprocessor'
p3605
sg9
I00
sg10
(lp3606
sg12
(lp3607
(S'TVarList'
p3608
S'attributes'
p3609
g3609
S'tells which attributes to shuffle'
p3610
I0
I0
I00
Ntp3611
a(S'TRandomGenerator'
p3612
S'randomGenerator'
p3613
S'random_generator'
p3614
S'random number generator'
p3615
I0
I0
I00
Ntp3616
asg29
(dp3617
sbsS'TLearner'
p3618
(i__main__
ClassDefinition
p3619
(dp3620
g4
I1
sg5
I0
sg6
g3618
sg7
S'TOrange'
p3621
sg9
I00
sg10
(lp3622
sg12
(lp3623
g47
asg29
(dp3624
sbsS'TRuleClassifier_logit'
p3625
(i__main__
ClassDefinition
p3626
(dp3627
g4
I1
sg5
I0
sg6
g3625
sg7
S'TRuleClassifier'
p3628
sg9
I00
sg10
(lp3629
sg12
(lp3630
(S'TDistribution'
p3631
S'prior'
p3632
g3632
S'prior distribution'
p3633
I0
I0
I00
Ntp3634
a(S'TDomain'
p3635
S'domain'
p3636
g3636
S'Domain'
p3637
I0
I0
I00
Ntp3638
a(S'TFloatList'
p3639
S'ruleBetas'
p3640
S'rule_betas'
p3641
S'Rule betas'
p3642
I0
I0
I00
Ntp3643
a(S'float'
p3644
S'minSignificance'
p3645
S'min_significance'
p3646
S'minimum requested significance for betas. '
p3647
I0
I0
I01
Ntp3648
a(S'float'
p3649
S'minBeta'
p3650
S'min_beta'
p3651
S'minimum beta by rule to be included in the model. '
p3652
I0
I0
I01
Ntp3653
a(S'bool'
p3654
S'setPrefixRules'
p3655
S'set_prefix_rules'
p3656
S'should we order prefix rules ? '
p3657
I0
I0
I01
Ntp3658
a(S'bool'
p3659
S'optimizeBetasFlag'
p3660
S'optimize_betas_flag'
p3661
S'should we assign betas to rules ? '
p3662
I0
I0
I01
Ntp3663
a(S'float'
p3664
S'penalty'
p3665
g3665
g1294
I0
I0
I01
Ntp3666
a(S'TClassifier'
p3667
S'priorClassifier'
p3668
S'prior_classifier'
p3669
S'prior classifier used if provided'
p3670
I0
I0
I00
Ntp3671
a(S'TLogitClassifierState'
p3672
S'currentState'
p3673
S'current_state'
p3674
g1294
I0
I0
I00
Ntp3675
a(S'TFloatList'
p3676
S'wsd'
p3677
g3677
g1294
I0
I0
I00
Ntp3678
a(S'TFloatList'
p3679
S'wavgCov'
p3680
S'wavg_cov'
p3681
g1294
I0
I0
I00
Ntp3682
a(S'TFloatList'
p3683
S'wSatQ'
p3684
S'w_sat_q'
p3685
g1294
I0
I0
I00
Ntp3686
a(S'TFloatList'
p3687
S'wsig'
p3688
g3688
g1294
I0
I0
I00
Ntp3689
a(S'TRuleList'
p3690
S'prefixRules'
p3691
S'prefix_rules'
p3692
S'rules that trigger before logit sum.'
p3693
I0
I0
I00
Ntp3694
ag1977
ag1980
ag1984
ag791
ag796
asg29
(dp3695
sbsS'TRuleCovererAndRemover'
p3696
(i__main__
ClassDefinition
p3697
(dp3698
g4
I1
sg5
I0
sg6
g3696
sg7
S'TOrange'
p3699
sg9
I01
sg10
(lp3700
sg12
(lp3701
sg29
(dp3702
sbsS'TPythonValue'
p3703
(i__main__
ClassDefinition
p3704
(dp3705
g4
I1
sg5
I0
sg6
g3703
sg7
S'TSomeValue'
p3706
sg9
I00
sg10
(lp3707
sg12
(lp3708
sg29
(dp3709
sbsS'TMultiClassifier'
p3710
(i__main__
ClassDefinition
p3711
(dp3712
g4
I1
sg5
I0
sg6
g3710
sg7
S'TOrange'
p3713
sg9
I00
sg10
(lp3714
sg12
(lp3715
(S'TVarList'
p3716
S'classVars'
p3717
S'class_vars'
p3718
S'class variables'
p3719
I0
I0
I00
Ntp3720
a(S'TDomain'
p3721
S'domain'
p3722
g3722
S'domain'
p3723
I0
I0
I00
Ntp3724
a(S'bool'
p3725
S'computesProbabilities'
p3726
S'computes_probabilities'
p3727
S'set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)'
p3728
I0
I0
I01
Ntp3729
asg29
(dp3730
sbsS'TDistributionAssessor_Kramer'
p3731
(i__main__
ClassDefinition
p3732
(dp3733
g4
I1
sg5
I0
sg6
g3731
sg7
S'TDistributionAssessor'
p3734
sg9
I00
sg10
(lp3735
sg12
(lp3736
sg29
(dp3737
sbsS'TTreeExampleSplitter_UnknownsToBranch'
p3738
(i__main__
ClassDefinition
p3739
(dp3740
g4
I1
sg5
I0
sg6
g3738
sg7
S'TTreeExampleSplitter'
p3741
sg9
I00
sg10
(lp3742
sg12
(lp3743
sg29
(dp3744
sbsS'TMajorityLearner'
p3745
(i__main__
ClassDefinition
p3746
(dp3747
g4
I1
sg5
I0
sg6
g3745
sg7
S'TLearner'
p3748
sg9
I00
sg10
(lp3749
sg12
(lp3750
(S'TProbabilityEstimatorConstructor'
p3751
S'estimatorConstructor'
p3752
S'estimator_constructor'
p3753
S'constructs probability estimator'
p3754
I0
I0
I00
Ntp3755
a(S'TDistribution'
p3756
S'aprioriDistribution'
p3757
S'apriori_distribution'
p3758
S'apriori class distribution'
p3759
I0
I0
I00
Ntp3760
ag47
asg29
(dp3761
sbsS'TMeasureAttributeFromProbabilities'
p3762
(i__main__
ClassDefinition
p3763
(dp3764
g4
I1
sg5
I0
sg6
g3762
sg7
S'TMeasureAttribute'
p3765
sg9
I01
sg10
(lp3766
sg12
(lp3767
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp3768
sbsS'TProbabilityEstimatorConstructor_relative'
p3769
(i__main__
ClassDefinition
p3770
(dp3771
g4
I1
sg5
I0
sg6
g3769
sg7
S'TProbabilityEstimatorConstructor'
p3772
sg9
I00
sg10
(lp3773
sg12
(lp3774
sg29
(dp3775
sbsS'TClassifierByLookupTable3'
p3776
(i__main__
ClassDefinition
p3777
(dp3778
g4
I1
sg5
I0
sg6
g3776
sg7
S'TClassifierByLookupTable'
p3779
sg9
I00
sg10
(lp3780
sg12
(lp3781
(S'TVariable'
p3782
S'variable1'
p3783
g3783
S'the first attribute used for classification'
p3784
I01
I0
I00
Ntp3785
a(S'TVariable'
p3786
S'variable2'
p3787
g3787
S'the second attribute used for classification'
p3788
I01
I0
I00
Ntp3789
a(S'TVariable'
p3790
S'variable3'
p3791
g3791
S'the third attribute used for classification'
p3792
I01
I0
I00
Ntp3793
a(S'int'
p3794
S'noOfValues1'
p3795
S'no_of_values1'
p3796
S'number of values of the first attribute'
p3797
I01
I0
I01
Ntp3798
a(S'int'
p3799
S'noOfValues2'
p3800
S'no_of_values2'
p3801
S'number of values of the second attribute'
p3802
I01
I0
I01
Ntp3803
a(S'int'
p3804
S'noOfValues3'
p3805
S'no_of_values3'
p3806
S'number of values of the third attribute'
p3807
I01
I0
I01
Ntp3808
a(S'TEFMDataDescription'
p3809
S'dataDescription'
p3810
S'data_description'
p3811
S'data description'
p3812
I0
I0
I00
Ntp3813
ag782
ag786
ag791
ag796
asg29
(dp3814
sbsS'TThresholdCA'
p3815
(i__main__
ClassDefinition
p3816
(dp3817
g4
I1
sg5
I0
sg6
g3815
sg7
S'TOrange'
p3818
sg9
I00
sg10
(lp3819
sg12
(lp3820
sg29
(dp3821
sbsS'TClassifierByLookupTable1'
p3822
(i__main__
ClassDefinition
p3823
(dp3824
g4
I1
sg5
I0
sg6
g3822
sg7
S'TClassifierByLookupTable'
p3825
sg9
I00
sg10
(lp3826
sg12
(lp3827
(S'TVariable'
p3828
S'variable1'
p3829
(g3829
S'variable'
p3830
tp3831
S' attribute used for classification'
p3832
I01
I0
I00
Ntp3833
ag782
ag786
ag791
ag796
asg29
(dp3834
sbsS'TValueFilter_string'
p3835
(i__main__
ClassDefinition
p3836
(dp3837
g4
I1
sg5
I0
sg6
g3835
sg7
S'TValueFilter'
p3838
sg9
I00
sg10
(lp3839
sg12
(lp3840
(S'string'
p3841
S'min'
p3842
(g3842
S'ref'
p3843
tp3844
S' reference value (lower bound for interval operators)'
p3845
I0
I0
I01
Ntp3846
a(S'string'
p3847
S'max'
p3848
g3848
S'upper bound for interval operators'
p3849
I0
I0
I01
Ntp3850
a(S'int'
p3851
S'oper'
p3852
g3852
S' operator'
p3853
I0
I0
I01
S'ValueFilter_Operator'
p3854
tp3855
a(S'bool'
p3856
S'caseSensitive'
p3857
S'case_sensitive'
p3858
S'if true (default), the operator is case sensitive'
p3859
I0
I0
I01
Ntp3860
ag2835
ag2840
asg29
(dp3861
sbsS'TGraphAsMatrix'
p3862
(i__main__
ClassDefinition
p3863
(dp3864
g4
I1
sg5
I0
sg6
g3862
sg7
S'TGraph'
p3865
sg9
I00
sg10
(lp3866
sg12
(lp3867
g682
ag687
ag691
asg29
(dp3868
sbsS'TFilter_hasSpecial'
p3869
(i__main__
ClassDefinition
p3870
(dp3871
g4
I1
sg5
I0
sg6
g3869
sg7
S'TFilter'
p3872
sg9
I00
sg10
(lp3873
sg12
(lp3874
g259
ag263
asg29
(dp3875
sbsS'TIMByRelief'
p3876
(i__main__
ClassDefinition
p3877
(dp3878
g4
I1
sg5
I0
sg6
g3876
sg7
S'TIMConstructor'
p3879
sg9
I00
sg10
(lp3880
sg12
(lp3881
(S'TExamplesDistance_Relief'
p3882
S'distance'
p3883
g3883
S'distance measure'
p3884
I0
I0
I00
Ntp3885
a(S'float'
p3886
g987
g987
S'number of neighbours'
p3887
I0
I0
I01
Ntp3888
a(S'float'
p3889
g991
g991
S'number of reference examples'
p3890
I0
I0
I01
Ntp3891
a(S'float'
p3892
S'kFromColumns'
p3893
S'k_from_columns'
p3894
S'if positive, number of neighbours is #columns*kFromColumns'
p3895
I0
I0
I01
Ntp3896
a(S'bool'
p3897
S'ignoreSameExample'
p3898
S'ignore_same_example'
p3899
S'does not put reference example into M'
p3900
I0
I0
I01
Ntp3901
a(S'bool'
p3902
S'convertToBinary'
p3903
S'convert_to_binary'
p3904
S'convert to binary class (hit-miss)'
p3905
I0
I0
I01
Ntp3906
a(S'bool'
p3907
S'correctClassFirst'
p3908
S'correct_class_first'
p3909
S'puts the correct class proportion to the first place'
p3910
I0
I0
I01
Ntp3911
a(S'bool'
p3912
S'allExamples'
p3913
S'all_examples'
p3914
S'uses all examples for reference examples'
p3915
I0
I0
I01
Ntp3916
a(S'bool'
p3917
S'allSameNeighbours'
p3918
S'all_same_neighbours'
p3919
S'uses all the examples same to the reference as neighbours'
p3920
I0
I0
I01
Ntp3921
ag2627
asg29
(dp3922
sbsS'TPreprocessor_addGaussianNoise'
p3923
(i__main__
ClassDefinition
p3924
(dp3925
g4
I1
sg5
I0
sg6
g3923
sg7
S'TPreprocessor'
p3926
sg9
I00
sg10
(lp3927
sg12
(lp3928
(S'TVariableFloatMap'
p3929
S'deviations'
p3930
g3930
S'deviations individual attribute values'
p3931
I0
I0
I00
Ntp3932
a(S'float'
p3933
S'defaultDeviation'
p3934
S'default_deviation'
p3935
S'default deviation'
p3936
I0
I0
I01
Ntp3937
a(S'TRandomGenerator'
p3938
S'randomGenerator'
p3939
S'random_generator'
p3940
S'random number generator'
p3941
I0
I0
I00
Ntp3942
asg29
(dp3943
sbsS'TRuleStoppingCriteria_NegativeDistribution'
p3944
(i__main__
ClassDefinition
p3945
(dp3946
g4
I1
sg5
I0
sg6
g3944
sg7
S'TRuleStoppingCriteria'
p3947
sg9
I00
sg10
(lp3948
sg12
(lp3949
sg29
(dp3950
sbsS'TTreeSplitConstructor_ExhaustiveBinary'
p3951
(i__main__
ClassDefinition
p3952
(dp3953
g4
I1
sg5
I0
sg6
g3951
sg7
S'TTreeSplitConstructor_Measure'
p3954
sg9
I00
sg10
(lp3955
sg12
(lp3956
g2388
ag2393
ag1707
asg29
(dp3957
sbsS'TTreeClassifier'
p3958
(i__main__
ClassDefinition
p3959
(dp3960
g4
I1
sg5
I0
sg6
g3958
sg7
S'TClassifierFD'
p3961
sg9
I00
sg10
(lp3962
sg12
(lp3963
(S'TTreeNode'
p3964
S'tree'
p3965
g3965
S'decision tree'
p3966
I0
I0
I00
Ntp3967
a(S'TTreeDescender'
p3968
S'descender'
p3969
g3969
S'object that descends down the tree'
p3970
I0
I0
I00
Ntp3971
ag901
ag791
ag796
asg29
(dp3972
sbsS'TSomeValue'
p3973
(i__main__
ClassDefinition
p3974
(dp3975
g4
I1
sg5
I0
sg6
g3973
sg7
S'TOrange'
p3976
sg9
I01
sg10
(lp3977
sg12
(lp3978
sg29
(dp3979
sbsS'TDiscDistribution'
p3980
(i__main__
ClassDefinition
p3981
(dp3982
g4
I1
sg5
I0
sg6
g3980
sg7
S'TDistribution'
p3983
sg9
I00
sg10
(lp3984
sg12
(lp3985
(S'TFloatList'
p3986
S'variances'
p3987
g3987
S'variances'
p3988
I0
I0
I00
Ntp3989
ag2191
ag2195
ag2199
ag2203
ag2207
ag2212
ag2217
ag2222
asg29
(dp3990
sbsS'TTreeDescender_UnknownMergeAsBranchSizes'
p3991
(i__main__
ClassDefinition
p3992
(dp3993
g4
I1
sg5
I0
sg6
g3991
sg7
g2227
sg9
I0
sg10
(lp3994
sg12
(lp3995
sg29
(dp3996
sbsS'THierarchicalClusterOrdering'
p3997
(i__main__
ClassDefinition
p3998
(dp3999
g4
I1
sg5
I0
sg6
g3997
sg7
S'TOrange'
p4000
sg9
I00
sg10
(lp4001
sg12
(lp4002
(S'TProgressCallback'
p4003
S'progress_callback'
p4004
g4004
S'progress callback function'
p4005
I0
I0
I00
Ntp4006
asg29
(dp4007
sbsS'TLogitClassifierState'
p4008
(i__main__
ClassDefinition
p4009
(dp4010
g4
I1
sg5
I0
sg6
g4008
sg7
S'TOrange'
p4011
sg9
I00
sg10
(lp4012
sg12
(lp4013
(S'TRuleList'
p4014
S'rules'
p4015
g4015
g1294
I0
I0
I00
Ntp4016
a(S'TExampleTable'
p4017
S'examples'
p4018
g4018
g1294
I0
I0
I00
Ntp4019
a(S'TFloatList'
p4020
S'avgProb'
p4021
S'avg_prob'
p4022
g1294
I0
I0
I00
Ntp4023
a(S'TFloatList'
p4024
S'avgPriorProb'
p4025
S'avg_prior_prob'
p4026
g1294
I0
I0
I00
Ntp4027
a(S'TIntList'
p4028
S'prefixRules'
p4029
S'prefix_rules'
p4030
g1294
I0
I0
I00
Ntp4031
asg29
(dp4032
sbsS'TColorIG'
p4033
(i__main__
ClassDefinition
p4034
(dp4035
g4
I1
sg5
I0
sg6
g4033
sg7
S'TOrange'
p4036
sg9
I01
sg10
(lp4037
sg12
(lp4038
sg29
(dp4039
sbsS'TSimpleTreeLearner'
p4040
(i__main__
ClassDefinition
p4041
(dp4042
g4
I1
sg5
I0
sg6
g4040
sg7
S'TLearner'
p4043
sg9
I00
sg10
(lp4044
sg12
(lp4045
(S'float'
p4046
S'maxMajority'
p4047
S'max_majority'
p4048
g1294
I0
I0
I01
Ntp4049
a(S'int'
p4050
S'minInstances'
p4051
S'min_instances'
p4052
g1294
I0
I0
I01
Ntp4053
a(S'int'
p4054
S'maxDepth'
p4055
S'max_depth'
p4056
g1294
I0
I0
I01
Ntp4057
a(S'float'
p4058
S'skipProb'
p4059
S'skip_prob'
p4060
g1294
I0
I0
I01
Ntp4061
a(S'TRandomGenerator'
p4062
S'randomGenerator'
p4063
S'random_generator'
p4064
g1294
I0
I0
I00
Ntp4065
ag47
asg29
(dp4066
sbsS'TFilter_disjunction'
p4067
(i__main__
ClassDefinition
p4068
(dp4069
g4
I1
sg5
I0
sg6
g4067
sg7
S'TFilter'
p4070
sg9
I00
sg10
(lp4071
sg12
(lp4072
(S'TFilterList'
p4073
S'filters'
p4074
g4074
S'a list of filters;'
p4075
I0
I0
I00
Ntp4076
ag259
ag263
asg29
(dp4077
sbsS'TColumnAssessor'
p4078
(i__main__
ClassDefinition
p4079
(dp4080
g4
I1
sg5
I0
sg6
g4078
sg7
S'TOrange'
p4081
sg9
I01
sg10
(lp4082
sg12
(lp4083
sg29
(dp4084
sbsS'TMultiLearner'
p4085
(i__main__
ClassDefinition
p4086
(dp4087
g4
I1
sg5
I0
sg6
g4085
sg7
S'TOrange'
p4088
sg9
I00
sg10
(lp4089
sg12
(lp4090
(S'int'
p4091
S'needs'
p4092
g4092
S'the kind of data that learner needs'
p4093
I01
I0
I01
Ntp4094
a(S'TDomain'
p4095
S'domain'
p4096
g4096
S'domain'
p4097
I0
I0
I00
Ntp4098
asg29
(dp4099
sbsS'TComputeDomainContingency_Preprocessor'
p4100
(i__main__
ClassDefinition
p4101
(dp4102
g4
I1
sg5
I0
sg6
g4100
sg7
S'TComputeDomainContingency'
p4103
sg9
I00
sg10
(lp4104
sg12
(lp4105
(S'TPreprocessor'
p4106
S'preprocessor'
p4107
g4107
S'preprocesses the exmaples (see the manual for restrictions!)'
p4108
I0
I0
I00
Ntp4109
a(S'bool'
p4110
S'resultInOriginalDomain'
p4111
S'result_in_original_domain'
p4112
S'tells whether the resulting DomainContingency should consist of original attributes'
p4113
I0
I0
I01
Ntp4114
ag28
asg29
(dp4115
sbsS'TMeasureAttribute_MSE'
p4116
(i__main__
ClassDefinition
p4117
(dp4118
g4
I1
sg5
I0
sg6
g4116
sg7
S'TMeasureAttribute'
p4119
sg9
I00
sg10
(lp4120
sg12
(lp4121
(S'float'
p4122
g991
g991
S'm for m-estimate'
p4123
I0
I0
I01
Ntp4124
a(S'int'
p4125
S'unknownsTreatment'
p4126
S'unknowns_treatment'
p4127
S' treatment of unknown values'
p4128
I0
I0
I01
S'MeasureAttribute_UnknownsTreatment'
p4129
tp4130
ag462
ag467
ag472
ag477
asg29
(dp4131
sbsS'TClusteringTreeClassifier'
p4132
(i__main__
ClassDefinition
p4133
(dp4134
g4
I1
sg5
I0
sg6
g4132
sg7
S'TMultiClassifier'
p4135
sg9
I00
sg10
(lp4136
sg12
(lp4137
g3720
ag3724
ag3729
asg29
(dp4138
sbsS'TNormalizeContinuous'
p4139
(i__main__
ClassDefinition
p4140
(dp4141
g4
I1
sg5
I0
sg6
g4139
sg7
S'TTransformValue'
p4142
sg9
I00
sg10
(lp4143
sg12
(lp4144
(S'float'
p4145
S'average'
p4146
g4146
S'the average value'
p4147
I0
I0
I01
Ntp4148
a(S'float'
p4149
S'span'
p4150
g4150
S'the value span'
p4151
I0
I0
I01
Ntp4152
ag318
asg29
(dp4153
sbsS'TPNN'
p4154
(i__main__
ClassDefinition
p4155
(dp4156
g4
I1
sg5
I0
sg6
g4154
sg7
S'TClassifierFD'
p4157
sg9
I00
sg10
(lp4158
sg12
(lp4159
g3415
ag3419
ag3423
ag3427
ag3432
ag3437
ag3441
ag901
ag791
ag796
asg29
(dp4160
sbsS'TBiModalDiscretizer'
p4161
(i__main__
ClassDefinition
p4162
(dp4163
g4
I1
sg5
I0
sg6
g4161
sg7
S'TDiscretizer'
p4164
sg9
I00
sg10
(lp4165
sg12
(lp4166
(S'float'
p4167
S'low'
p4168
g4168
S'low threshold'
p4169
I0
I0
I01
Ntp4170
a(S'float'
p4171
S'high'
p4172
g4172
S'high threshold'
p4173
I0
I0
I01
Ntp4174
ag318
asg29
(dp4175
sbsS'TProbabilityEstimatorConstructor_Laplace'
p4176
(i__main__
ClassDefinition
p4177
(dp4178
g4
I1
sg5
I0
sg6
g4176
sg7
S'TProbabilityEstimatorConstructor'
p4179
sg9
I00
sg10
(lp4180
sg12
(lp4181
(S'float'
p4182
S'l'
p4183
g4183
S'number of examples added to each class (default: 1)'
p4184
I0
I0
I01
Ntp4185
a(S'bool'
p4186
S'renormalize'
p4187
g4187
S'computes the estimate on the original (not the normalized) distribution'
p4188
I0
I0
I01
Ntp4189
asg29
(dp4190
sbsS'TEnumVariable'
p4191
(i__main__
ClassDefinition
p4192
(dp4193
g4
I1
sg5
I0
sg6
g4191
sg7
S'TVariable'
p4194
sg9
I00
sg10
(lp4195
sg12
(lp4196
(S'TStringList'
p4197
S'values'
p4198
g4198
S"attribute's values"
p4199
I0
I0
I00
Ntp4200
a(S'int'
p4201
S'baseValue'
p4202
S'base_value'
p4203
S'the index of the base value'
p4204
I0
I0
I01
Ntp4205
ag642
ag646
ag650
ag655
ag660
ag665
ag670
asg29
(dp4206
sbsS'TExamplesDistanceConstructor_Manhattan'
p4207
(i__main__
ClassDefinition
p4208
(dp4209
g4
I1
sg5
I0
sg6
g4207
sg7
S'TExamplesDistanceConstructor_Normalized'
p4210
sg9
I00
sg10
(lp4211
sg12
(lp4212
g96
ag101
ag106
asg29
(dp4213
sbsS'TC45Learner'
p4214
(i__main__
ClassDefinition
p4215
(dp4216
g4
I1
sg5
I0
sg6
g4214
sg7
S'TLearner'
p4217
sg9
I00
sg10
(lp4218
sg12
(lp4219
(S'bool'
p4220
S'gainRatio'
p4221
(g4221
S'g'
p4222
tp4223
S' use gain ratio (instead of information gain)'
p4224
I0
I0
I01
Ntp4225
a(S'bool'
p4226
S'subset'
p4227
(g4227
S's'
p4228
tp4229
S' use subsetting'
p4230
I0
I0
I01
Ntp4231
a(S'bool'
p4232
S'batch'
p4233
(g4233
S'b'
p4234
tp4235
S' batch'
p4236
I0
I0
I01
Ntp4237
a(S'bool'
p4238
S'probThresh'
p4239
(g4239
g91
tp4240
S' probability threshold'
p4241
I0
I0
I01
Ntp4242
a(S'int'
p4243
S'minObjs'
p4244
(g4244
g991
tp4245
S' minimal number of objects (examples) in leaves'
p4246
I0
I0
I01
Ntp4247
a(S'int'
p4248
S'window'
p4249
(g4249
S'w'
p4250
tp4251
S' window'
p4252
I0
I0
I01
Ntp4253
a(S'int'
p4254
S'increment'
p4255
(g4255
S'i'
p4256
tp4257
S' increment'
p4258
I0
I0
I01
Ntp4259
a(S'float'
p4260
S'cf'
p4261
(g4261
S'c'
p4262
tp4263
S' cf'
p4264
I0
I0
I01
Ntp4265
a(S'int'
p4266
S'trials'
p4267
(g4267
g1850
tp4268
S' trials'
p4269
I0
I0
I01
Ntp4270
a(S'bool'
p4271
S'prune'
p4272
g4272
S'return pruned tree'
p4273
I0
I0
I01
Ntp4274
a(S'bool'
p4275
S'convertToOrange'
p4276
S'convert_to_orange'
p4277
S'return TreeClassifier instead of C45TreeClassifier'
p4278
I0
I0
I01
Ntp4279
a(S'bool'
p4280
S'storeExamples'
p4281
S'store_examples'
p4282
S'stores examples when (if) converting to TreeClassifier'
p4283
I0
I0
I01
Ntp4284
a(S'bool'
p4285
S'storeContingencies'
p4286
S'store_contingencies'
p4287
S'stores contingencies when (if) converting to TreeClassifier'
p4288
I0
I0
I01
Ntp4289
ag47
asg29
(dp4290
sbsS'TExamplesDistance_Python'
p4291
(i__main__
ClassDefinition
p4292
(dp4293
g4
I1
sg5
I0
sg6
g4291
sg7
S'TExamplesDistance'
p4294
sg9
I00
sg10
(lp4295
sg12
(lp4296
sg29
(dp4297
sbsS'TTreeStopCriteria'
p4298
(i__main__
ClassDefinition
p4299
(dp4300
g4
I1
sg5
I0
sg6
g4298
sg7
S'TOrange'
p4301
sg9
I00
sg10
(lp4302
sg12
(lp4303
sg29
(dp4304
sbsS'TExamplesDistanceConstructor_Relief'
p4305
(i__main__
ClassDefinition
p4306
(dp4307
g4
I1
sg5
I0
sg6
g4305
sg7
S'TExamplesDistanceConstructor'
p4308
sg9
I00
sg10
(lp4309
sg12
(lp4310
g106
asg29
(dp4311
sbsS'TMissValuesGenerator'
p4312
(i__main__
ClassDefinition
p4313
(dp4314
g4
I1
sg5
I0
sg6
g4312
sg7
S'TChangeExampleGenerator'
p4315
sg9
I00
sg10
(lp4316
sg12
(lp4317
(S'TIntFloatList'
p4318
S'replaceProbabilities'
p4319
S'replace_probabilities'
p4320
S"probabilities for replacing attributes' values"
p4321
I0
I0
I00
Ntp4322
a(S'TRandomGenerator'
p4323
S'randomGenerator'
p4324
S'random_generator'
p4325
S'random generator'
p4326
I0
I0
I00
Ntp4327
ag121
ag125
asg29
(dp4328
sbsS'TRuleValidator_Python'
p4329
(i__main__
ClassDefinition
p4330
(dp4331
g4
I1
sg5
I0
sg6
g4329
sg7
S'TRuleValidator'
p4332
sg9
I00
sg10
(lp4333
sg12
(lp4334
sg29
(dp4335
sbsS'TSubsetsGenerator_constSize_iterator'
p4336
(i__main__
ClassDefinition
p4337
(dp4338
g4
I1
sg5
I0
sg6
g4336
sg7
S'TSubsetsGenerator_iterator'
p4339
sg9
I00
sg10
(lp4340
sg12
(lp4341
(S'bool'
p4342
S'moreToCome'
p4343
S'more_to_come'
p4344
g1294
I01
I0
I01
Ntp4345
ag192
asg29
(dp4346
sbsS'TRuleClassifier_firstRule'
p4347
(i__main__
ClassDefinition
p4348
(dp4349
g4
I1
sg5
I0
sg6
g4347
sg7
S'TRuleClassifier'
p4350
sg9
I00
sg10
(lp4351
sg12
(lp4352
(S'TDistribution'
p4353
S'prior'
p4354
g4354
S'prior distribution'
p4355
I0
I0
I00
Ntp4356
ag1977
ag1980
ag1984
ag791
ag796
asg29
(dp4357
sbsS'TEVDist'
p4358
(i__main__
ClassDefinition
p4359
(dp4360
g4
I1
sg5
I0
sg6
g4358
sg7
S'TOrange'
p4361
sg9
I00
sg10
(lp4362
sg12
(lp4363
(S'float'
p4364
S'mu'
p4365
g4365
S'mu of Fisher-Tippett distribution'
p4366
I0
I0
I01
Ntp4367
a(S'float'
p4368
S'beta'
p4369
g4369
S'beta of Fisher-Tippett distribution'
p4370
I0
I0
I01
Ntp4371
a(S'TFloatList'
p4372
S'percentiles'
p4373
g4373
S'usually 10 values - 0 = 5th percentile, 1 = 15th percentile, 9 = 95th percentile, change maxPercentile and step for other settings'
p4374
I0
I0
I00
Ntp4375
a(S'float'
p4376
S'maxPercentile'
p4377
S'max_percentile'
p4378
S'maxPercentile Value, default 0.95'
p4379
I0
I0
I01
Ntp4380
a(S'float'
p4381
S'step'
p4382
g4382
S'step of percentiles, default 0.1'
p4383
I0
I0
I01
Ntp4384
asg29
(dp4385
sbsS'TAssociationLearner'
p4386
(i__main__
ClassDefinition
p4387
(dp4388
g4
I1
sg5
I0
sg6
g4386
sg7
S'TLearner'
p4389
sg9
I00
sg10
(lp4390
sg12
(lp4391
(S'float'
p4392
S'confidence'
p4393
g4393
S'required confidence'
p4394
I0
I0
I01
Ntp4395
a(S'float'
p4396
S'support'
p4397
g4397
S'required support'
p4398
I0
I0
I01
Ntp4399
a(S'int'
p4400
S'voteWeight'
p4401
S'vote_weight'
p4402
S'vote weight (s=support, c=confidence, p=product)'
p4403
I0
I0
I01
Ntp4404
a(S'int'
p4405
S'maxItemSets'
p4406
S'max_item_sets'
p4407
S'maximal number of itemsets (increase if you want)'
p4408
I0
I0
I01
Ntp4409
ag47
asg29
(dp4410
sbsS'TDistributionAssessor'
p4411
(i__main__
ClassDefinition
p4412
(dp4413
g4
I1
sg5
I0
sg6
g4411
sg7
S'TOrange'
p4414
sg9
I01
sg10
(lp4415
sg12
(lp4416
sg29
(dp4417
sbsS'TEquiDistDiscretization'
p4418
(i__main__
ClassDefinition
p4419
(dp4420
g4
I1
sg5
I0
sg6
g4418
sg7
S'TDiscretization'
p4421
sg9
I00
sg10
(lp4422
sg12
(lp4423
(S'int'
p4424
S'numberOfIntervals'
p4425
(g4425
g385
tp4426
S' number of intervals'
p4427
I0
I0
I01
Ntp4428
asg29
(dp4429
sbsS'TConditionalProbabilityEstimatorConstructor_ByRows'
p4430
(i__main__
ClassDefinition
p4431
(dp4432
g4
I1
sg5
I0
sg6
g4430
sg7
S'TConditionalProbabilityEstimatorConstructor'
p4433
sg9
I00
sg10
(lp4434
sg12
(lp4435
(S'TProbabilityEstimatorConstructor'
p4436
S'estimatorConstructor'
p4437
S'estimator_constructor'
p4438
S'ProbabilityEstimator to be used '
p4439
I0
I0
I00
Ntp4440
asg29
(dp4441
sbsS'TTreeSplitConstructor'
p4442
(i__main__
ClassDefinition
p4443
(dp4444
g4
I1
sg5
I0
sg6
g4442
sg7
S'TOrange'
p4445
sg9
I01
sg10
(lp4446
sg12
(lp4447
g1707
asg29
(dp4448
sbsS'TSubsetsGenerator_constSize'
p4449
(i__main__
ClassDefinition
p4450
(dp4451
g4
I1
sg5
I0
sg6
g4449
sg7
S'TSubsetsGenerator'
p4452
sg9
I00
sg10
(lp4453
sg12
(lp4454
(S'int'
p4455
S'B'
p4456
g4456
S'subset size'
p4457
I0
I0
I01
Ntp4458
ag2360
asg29
(dp4459
sbsS'TColorIG_MCF'
p4460
(i__main__
ClassDefinition
p4461
(dp4462
g4
I1
sg5
I0
sg6
g4460
sg7
S'TColorIG'
p4463
sg9
I00
sg10
(lp4464
sg12
(lp4465
sg29
(dp4466
sbsS'TSVMClassifierSparse'
p4467
(i__main__
ClassDefinition
p4468
(dp4469
g4
I1
sg5
I0
sg6
g4467
sg7
S'TSVMClassifier'
p4470
sg9
I00
sg10
(lp4471
sg12
(lp4472
(S'bool'
p4473
S'useNonMeta'
p4474
S'use_non_meta'
p4475
S'include non meta attributes'
p4476
I0
I0
I01
Ntp4477
ag3499
ag3503
ag3507
ag3512
ag3517
ag3522
ag3526
ag3531
ag3536
ag3541
ag901
ag791
ag796
asg29
(dp4478
sbsS'TRuleBeamFilter'
p4479
(i__main__
ClassDefinition
p4480
(dp4481
g4
I1
sg5
I0
sg6
g4479
sg7
S'TOrange'
p4482
sg9
I01
sg10
(lp4483
sg12
(lp4484
sg29
(dp4485
sbsS'TPreprocessor_addClassWeight'
p4486
(i__main__
ClassDefinition
p4487
(dp4488
g4
I1
sg5
I0
sg6
g4486
sg7
S'TPreprocessor'
p4489
sg9
I00
sg10
(lp4490
sg12
(lp4491
(S'TFloatList'
p4492
S'classWeights'
p4493
S'class_weights'
p4494
S'weights of examples of particular classes'
p4495
I0
I0
I00
Ntp4496
a(S'bool'
p4497
S'equalize'
p4498
g4498
S'reweight examples to equalize class proportions'
p4499
I0
I0
I01
Ntp4500
a(S'TRandomGenerator'
p4501
S'randomGenerator'
p4502
S'random_generator'
p4503
S'random number generator'
p4504
I0
I0
I00
Ntp4505
asg29
(dp4506
sbsS'TValueFilter_continuous'
p4507
(i__main__
ClassDefinition
p4508
(dp4509
g4
I1
sg5
I0
sg6
g4507
sg7
S'TValueFilter'
p4510
sg9
I00
sg10
(lp4511
sg12
(lp4512
(S'float'
p4513
S'min'
p4514
(g4514
S'ref'
p4515
tp4516
S' reference value (lower bound for interval operators)'
p4517
I0
I0
I01
Ntp4518
a(S'float'
p4519
S'max'
p4520
g4520
S'upper bound for interval operators'
p4521
I0
I0
I01
Ntp4522
a(S'bool'
p4523
S'outside'
p4524
g4524
S'obsolete: if true, the filter accepts the values outside the interval, not inside'
p4525
I0
I0
I01
Ntp4526
a(S'int'
p4527
S'oper'
p4528
g4528
S' operator'
p4529
I0
I0
I01
S'ValueFilter_Operator'
p4530
tp4531
ag2835
ag2840
asg29
(dp4532
sbsS'TAssociationRule'
p4533
(i__main__
ClassDefinition
p4534
(dp4535
g4
I1
sg5
I0
sg6
g4533
sg7
S'TOrange'
p4536
sg9
I00
sg10
(lp4537
sg12
(lp4538
(S'TExample'
p4539
S'left'
p4540
g4540
S'left side of the rule'
p4541
I01
I0
I00
Ntp4542
a(S'TExample'
p4543
S'right'
p4544
g4544
S'right side of the rule'
p4545
I01
I0
I00
Ntp4546
a(S'float'
p4547
S'support'
p4548
g4548
S'support for the rule'
p4549
I0
I0
I01
Ntp4550
a(S'float'
p4551
S'confidence'
p4552
g4552
S'confidence of the rule'
p4553
I0
I0
I01
Ntp4554
a(S'float'
p4555
S'coverage'
p4556
g4556
S"rule's coverage"
p4557
I0
I0
I01
Ntp4558
a(S'float'
p4559
S'strength'
p4560
g4560
S"rule's strength"
p4561
I0
I0
I01
Ntp4562
a(S'float'
p4563
S'lift'
p4564
g4564
S"rule's lift"
p4565
I0
I0
I01
Ntp4566
a(S'float'
p4567
S'leverage'
p4568
g4568
S"rule's leverage"
p4569
I0
I0
I01
Ntp4570
a(S'float'
p4571
S'nAppliesLeft'
p4572
S'n_applies_left'
p4573
S"number of examples covered by the rule's left side"
p4574
I0
I0
I01
Ntp4575
a(S'float'
p4576
S'nAppliesRight'
p4577
S'n_applies_right'
p4578
S"number of examples covered by the rule's right side"
p4579
I0
I0
I01
Ntp4580
a(S'float'
p4581
S'nAppliesBoth'
p4582
S'n_applies_both'
p4583
S'number of examples covered by the rule'
p4584
I0
I0
I01
Ntp4585
a(S'float'
p4586
S'nExamples'
p4587
S'n_examples'
p4588
S'number of learning examples'
p4589
I0
I0
I01
Ntp4590
a(S'int'
p4591
S'nLeft'
p4592
S'n_left'
p4593
S"number of items on the rule's left side"
p4594
I01
I0
I01
Ntp4595
a(S'int'
p4596
S'nRight'
p4597
S'n_right'
p4598
S"number of items on the rule's right side"
p4599
I01
I0
I01
Ntp4600
a(S'TExampleTable'
p4601
S'examples'
p4602
g4602
S'examples which the rule was built from'
p4603
I01
I0
I00
Ntp4604
a(S'TIntList'
p4605
S'matchLeft'
p4606
S'match_left'
p4607
S'indices of examples that match the left side of the rule'
p4608
I01
I0
I00
Ntp4609
a(S'TIntList'
p4610
S'matchBoth'
p4611
S'match_both'
p4612
S'indices to examples that match both sides of the rule'
p4613
I01
I0
I00
Ntp4614
asg29
(dp4615
sbsS'TValueFilter'
p4616
(i__main__
ClassDefinition
p4617
(dp4618
g4
I1
sg5
I0
sg6
g4616
sg7
S'TOrange'
p4619
sg9
I01
sg10
(lp4620
sg12
(lp4621
g2835
ag2840
asg29
(dp4622
S'Operator'
p4623
(lp4624
(S'None'
p4625
I0
tp4626
a(S'Equal'
p4627
I1
tp4628
a(S'NotEqual'
p4629
I2
tp4630
a(S'Less'
p4631
I3
tp4632
a(S'LessEqual'
p4633
I4
tp4634
a(S'Greater'
p4635
I5
tp4636
a(S'GreaterEqual'
p4637
I6
tp4638
a(S'Between'
p4639
I7
tp4640
a(S'Outside'
p4641
I8
tp4642
a(S'Contains'
p4643
I9
tp4644
a(S'NotContains'
p4645
I10
tp4646
a(S'BeginsWith'
p4647
I11
tp4648
a(S'EndsWith'
p4649
I12
tp4650
a(S'Listed'
p4651
I13
tp4652
assbsS'TNoiseValuesGenerator'
p4653
(i__main__
ClassDefinition
p4654
(dp4655
g4
I1
sg5
I0
sg6
g4653
sg7
S'TChangeExampleGenerator'
p4656
sg9
I00
sg10
(lp4657
sg12
(lp4658
(S'TIntFloatList'
p4659
S'replaceProbabilities'
p4660
S'replace_probabilities'
p4661
S"probabilities for replacing attributes' values"
p4662
I0
I0
I00
Ntp4663
a(S'TRandomGenerator'
p4664
S'randomGenerator'
p4665
S'random_generator'
p4666
S'random generator'
p4667
I0
I0
I00
Ntp4668
ag121
ag125
asg29
(dp4669
sbsS'TTreeExampleSplitter_UnknownsToAll'
p4670
(i__main__
ClassDefinition
p4671
(dp4672
g4
I1
sg5
I0
sg6
g4670
sg7
S'TTreeExampleSplitter'
p4673
sg9
I00
sg10
(lp4674
sg12
(lp4675
sg29
(dp4676
sbsS'TEquiNDiscretization'
p4677
(i__main__
ClassDefinition
p4678
(dp4679
g4
I1
sg5
I0
sg6
g4677
sg7
S'TDiscretization'
p4680
sg9
I00
sg10
(lp4681
sg12
(lp4682
(S'int'
p4683
S'numberOfIntervals'
p4684
(g4684
g385
tp4685
S' number of intervals'
p4686
I0
I0
I01
Ntp4687
a(S'bool'
p4688
S'recursiveDivision'
p4689
S'recursive_division'
p4690
S'find cut-off points by recursive division (default = true)'
p4691
I0
I0
I01
Ntp4692
asg29
(dp4693
sbsS'TDomainBasicAttrStat'
p4694
(i__main__
ClassDefinition
p4695
(dp4696
g4
I1
sg5
I0
sg6
g4694
sg7
g2579
sg9
I00
sg10
(lp4697
sg12
(lp4698
(S'bool'
p4699
S'hasClassVar'
p4700
S'has_class_var'
p4701
S'has class var'
p4702
I0
I0
I01
Ntp4703
asg29
(dp4704
sbsS'TBayesClassifier'
p4705
(i__main__
ClassDefinition
p4706
(dp4707
g4
I1
sg5
I0
sg6
g4705
sg7
S'TClassifierFD'
p4708
sg9
I00
sg10
(lp4709
sg12
(lp4710
(S'TDistribution'
p4711
S'distribution'
p4712
g4712
S'class distributions (P(C))'
p4713
I0
I0
I00
Ntp4714
a(S'TDomainContingency'
p4715
S'conditionalDistributions'
p4716
S'conditional_distributions'
p4717
S'conditional distributions, P(C|A)'
p4718
I0
I0
I00
Ntp4719
a(S'TProbabilityEstimator'
p4720
S'estimator'
p4721
g4721
S'a probability estimator for P(C)'
p4722
I0
I0
I00
Ntp4723
a(S'TConditionalProbabilityEstimatorList'
p4724
S'conditionalEstimators'
p4725
S'conditional_estimators'
p4726
S'a probability estimator for P(C|A)'
p4727
I0
I0
I00
Ntp4728
a(S'bool'
p4729
S'normalizePredictions'
p4730
S'normalize_predictions'
p4731
S'if true, classifier will normalize predictions'
p4732
I0
I0
I01
Ntp4733
a(S'float'
p4734
S'threshold'
p4735
g4735
S'threshold probability for class 1 (for binary classes only)'
p4736
I0
I0
I01
Ntp4737
ag901
ag791
ag796
asg29
(dp4738
sbsS'TCostWrapperClassifier'
p4739
(i__main__
ClassDefinition
p4740
(dp4741
g4
I1
sg5
I0
sg6
g4739
sg7
S'TClassifier'
p4742
sg9
I00
sg10
(lp4743
sg12
(lp4744
(S'TClassifier'
p4745
S'classifier'
p4746
g4746
S'basic classifier'
p4747
I0
I0
I00
Ntp4748
a(S'TCostMatrix'
p4749
S'costMatrix'
p4750
S'cost_matrix'
p4751
S'cost matrix'
p4752
I0
I0
I00
Ntp4753
ag791
ag796
asg29
(dp4754
sbsS'TPreprocessor_ignore'
p4755
(i__main__
ClassDefinition
p4756
(dp4757
g4
I1
sg5
I0
sg6
g4755
sg7
S'TPreprocessor'
p4758
sg9
I00
sg10
(lp4759
sg12
(lp4760
(S'TVarList'
p4761
S'attributes'
p4762
g4762
S'tells which attributes to remove'
p4763
I0
I0
I00
Ntp4764
asg29
(dp4765
sbsS'TC45TreeNode'
p4766
(i__main__
ClassDefinition
p4767
(dp4768
g4
I1
sg5
I0
sg6
g4766
sg7
S'TOrange'
p4769
sg9
I00
sg10
(lp4770
sg12
(lp4771
(S'int'
p4772
S'nodeType'
p4773
S'node_type'
p4774
S' 0 = leaf,  1 = branch,  2 = cut,  3 = subset'
p4775
I0
I0
I01
S'C45TreeNode_NodeType'
p4776
tp4777
a(S'TValue'
p4778
S'leaf'
p4779
g4779
S'most frequent class at this node'
p4780
I0
I0
I01
Ntp4781
a(S'float'
p4782
S'items'
p4783
g4783
S'no of items at this node'
p4784
I0
I0
I01
Ntp4785
a(S'TDiscDistribution'
p4786
S'classDist'
p4787
S'class_dist'
p4788
S'class distribution of items'
p4789
I0
I0
I00
Ntp4790
a(S'TVariable'
p4791
S'tested'
p4792
g4792
S'attribute referenced in test'
p4793
I0
I0
I00
Ntp4794
a(S'float'
p4795
S'cut'
p4796
g4796
S'threshold for continuous attribute'
p4797
I0
I0
I01
Ntp4798
a(S'float'
p4799
S'lower'
p4800
g4800
S'lower limit of soft threshold'
p4801
I0
I0
I01
Ntp4802
a(S'float'
p4803
S'upper'
p4804
g4804
S'upper limit of soft threshold'
p4805
I0
I0
I01
Ntp4806
a(S'TIntList'
p4807
S'mapping'
p4808
g4808
S'mapping for discrete value'
p4809
I0
I0
I00
Ntp4810
a(S'TC45TreeNodeList'
p4811
S'branch'
p4812
g4812
S'branch[x] = (sub)tree for outcome x */'
p4813
I0
I0
I00
Ntp4814
asg29
(dp4815
S'NodeType'
p4816
(lp4817
(S'Leaf'
p4818
S'0'
p4819
tp4820
a(S'Branch'
p4821
I1
tp4822
a(S'Cut'
p4823
I2
tp4824
a(S'Subset'
p4825
I3
tp4826
assbsS'TMeasureAttribute_Python'
p4827
(i__main__
ClassDefinition
p4828
(dp4829
g4
I1
sg5
I0
sg6
g4827
sg7
S'TMeasureAttribute'
p4830
sg9
I00
sg10
(lp4831
sg12
(lp4832
g462
ag467
ag472
ag477
asg29
(dp4833
sbsS'TDistributionAssessor_Measure'
p4834
(i__main__
ClassDefinition
p4835
(dp4836
g4
I1
sg5
I0
sg6
g4834
sg7
S'TDistributionAssessor'
p4837
sg9
I00
sg10
(lp4838
sg12
(lp4839
(S'TMeasureAttribute'
p4840
S'measure'
p4841
g4841
S'attribute quality measure'
p4842
I0
I0
I00
Ntp4843
asg29
(dp4844
sbsS'TDistributionAssessor_m'
p4845
(i__main__
ClassDefinition
p4846
(dp4847
g4
I1
sg5
I0
sg6
g4845
sg7
S'TDistributionAssessor'
p4848
sg9
I00
sg10
(lp4849
sg12
(lp4850
(S'float'
p4851
g991
g991
S'm for m-estimate'
p4852
I0
I0
I01
Ntp4853
asg29
(dp4854
sbsS'TEVDistGetter'
p4855
(i__main__
ClassDefinition
p4856
(dp4857
g4
I1
sg5
I0
sg6
g4855
sg7
S'TOrange'
p4858
sg9
I01
sg10
(lp4859
sg12
(lp4860
sg29
(dp4861
sbsS'TStopDistributionClustering_n'
p4862
(i__main__
ClassDefinition
p4863
(dp4864
g4
I1
sg5
I0
sg6
g4862
sg7
S'TStopDistributionClustering'
p4865
sg9
I00
sg10
(lp4866
sg12
(lp4867
(S'int'
p4868
g385
g385
S'number of clusters'
p4869
I0
I0
I01
Ntp4870
asg29
(dp4871
sbsS'TTreeExampleSplitter_UnknownsAsSelector'
p4872
(i__main__
ClassDefinition
p4873
(dp4874
g4
I1
sg5
I0
sg6
g4872
sg7
S'TTreeExampleSplitter'
p4875
sg9
I00
sg10
(lp4876
sg12
(lp4877
sg29
(dp4878
sbsS'TClassifier_Python'
p4879
(i__main__
ClassDefinition
p4880
(dp4881
g4
I1
sg5
I0
sg6
g4879
sg7
S'TClassifier'
p4882
sg9
I00
sg10
(lp4883
sg12
(lp4884
g791
ag796
asg29
(dp4885
sbsS'TFilter_isDefined'
p4886
(i__main__
ClassDefinition
p4887
(dp4888
g4
I1
sg5
I0
sg6
g4886
sg7
S'TFilter'
p4889
sg9
I00
sg10
(lp4890
sg12
(lp4891
(S'TAttributedBoolList'
p4892
S'check'
p4893
g4893
S'tells which attributes to check; checks all if the list is empty'
p4894
I0
I0
I00
Ntp4895
ag259
ag263
asg29
(dp4896
sbsS'TProbabilityEstimatorConstructor_m'
p4897
(i__main__
ClassDefinition
p4898
(dp4899
g4
I1
sg5
I0
sg6
g4897
sg7
S'TProbabilityEstimatorConstructor'
p4900
sg9
I00
sg10
(lp4901
sg12
(lp4902
(S'float'
p4903
g991
g991
S'parameter m for m-estimation'
p4904
I0
I0
I01
Ntp4905
a(S'bool'
p4906
S'renormalize'
p4907
g4907
S'computes the estimate on the original (not the normalized) distribution'
p4908
I0
I0
I01
Ntp4909
asg29
(dp4910
sbsS'TStopDistributionClustering_noBigChange'
p4911
(i__main__
ClassDefinition
p4912
(dp4913
g4
I1
sg5
I0
sg6
g4911
sg7
S'TStopDistributionClustering'
p4914
sg9
I00
sg10
(lp4915
sg12
(lp4916
sg29
(dp4917
sbsS'TRuleLearner'
p4918
(i__main__
ClassDefinition
p4919
(dp4920
g4
I1
sg5
I0
sg6
g4918
sg7
S'TLearner'
p4921
sg9
I00
sg10
(lp4922
sg12
(lp4923
(S'TRuleDataStoppingCriteria'
p4924
S'dataStopping'
p4925
S'data_stopping'
p4926
g1294
I0
I0
I00
Ntp4927
a(S'TRuleStoppingCriteria'
p4928
S'ruleStopping'
p4929
S'rule_stopping'
p4930
g1294
I0
I0
I00
Ntp4931
a(S'TRuleCovererAndRemover'
p4932
S'coverAndRemove'
p4933
S'cover_and_remove'
p4934
g1294
I0
I0
I00
Ntp4935
a(S'TRuleFinder'
p4936
S'ruleFinder'
p4937
S'rule_finder'
p4938
g1294
I0
I0
I00
Ntp4939
a(S'TRuleClassifierConstructor'
p4940
S'classifierConstructor'
p4941
S'classifier_constructor'
p4942
S'classifier'
p4943
I0
I0
I00
Ntp4944
a(S'TProgressCallback'
p4945
S'progressCallback'
p4946
S'progress_callback'
p4947
S'progress callback function'
p4948
I0
I0
I00
Ntp4949
a(S'bool'
p4950
S'storeExamples'
p4951
S'store_examples'
p4952
g1294
I0
I0
I01
Ntp4953
a(S'int'
p4954
S'targetClass'
p4955
S'target_class'
p4956
g1294
I0
I0
I01
Ntp4957
a(S'TRuleList'
p4958
S'baseRules'
p4959
S'base_rules'
p4960
g1294
I0
I0
I00
Ntp4961
ag47
asg29
(dp4962
sbsS'TLinearLearner'
p4963
(i__main__
ClassDefinition
p4964
(dp4965
g4
I1
sg5
I0
sg6
g4963
sg7
S'TLearner'
p4966
sg9
I00
sg10
(lp4967
sg12
(lp4968
(S'int'
p4969
S'solver_type'
p4970
g4970
S' Solver type (loss function1)'
p4971
I0
I0
I01
S'LinearLearner_Lossfunction1'
p4972
tp4973
a(S'float'
p4974
S'eps'
p4975
g4975
S'Stopping criteria'
p4976
I0
I0
I01
Ntp4977
a(S'float'
p4978
g2052
g2052
S'Regularization parameter'
p4979
I0
I0
I01
Ntp4980
a(S'float'
p4981
S'bias'
p4982
g4982
S'bias parameter (default -1.0 - no bias)'
p4983
I0
I0
I01
Ntp4984
ag47
asg29
(dp4985
S'LIBLINEAR_VERSION'
p4986
(lp4987
(S'VERSION'
p4988
S'180'
p4989
tp4990
asS'Lossfunction1'
p4991
(lp4992
(S'L2R_LR'
p4993
I0
tp4994
a(S'L2R_L2Loss_SVC_Dual'
p4995
I1
tp4996
a(S'L2R_L2Loss_SVC'
p4997
I2
tp4998
a(S'L2R_L1Loss_SVC_Dual'
p4999
I3
tp5000
a(S'MCSVM_CS'
p5001
I4
tp5002
a(S'L1R_L2Loss_SVC'
p5003
I5
tp5004
a(S'L1R_LR'
p5005
I6
tp5006
a(S'L2R_LR_Dual'
p5007
I7
tp5008
asS'Lossfunction1_old_'
p5009
(lp5010
(S'L2_LR'
p5011
I0
tp5012
a(S'L2Loss_SVM_Dual'
p5013
I1
tp5014
a(S'L2Loss_SVM'
p5015
I2
tp5016
a(S'L1Loss_SVM_Dual'
p5017
I3
tp5018
assbsS'TImputer'
p5019
(i__main__
ClassDefinition
p5020
(dp5021
g4
I1
sg5
I0
sg6
g5019
sg7
S'TOrange'
p5022
sg9
I01
sg10
(lp5023
sg12
(lp5024
sg29
(dp5025
sbsS'TTransformValue_Python'
p5026
(i__main__
ClassDefinition
p5027
(dp5028
g4
I1
sg5
I0
sg6
g5026
sg7
S'TTransformValue'
p5029
sg9
I00
sg10
(lp5030
sg12
(lp5031
g318
asg29
(dp5032
sbsS'TStopIMClusteringByAssessor_noProfit'
p5033
(i__main__
ClassDefinition
p5034
(dp5035
g4
I1
sg5
I0
sg6
g5033
sg7
S'TStopIMClusteringByAssessor'
p5036
sg9
I00
sg10
(lp5037
sg12
(lp5038
(S'float'
p5039
S'minProfitProportion'
p5040
S'min_profit_proportion'
p5041
S'minimal allowable profit proportion'
p5042
I0
I0
I01
Ntp5043
asg29
(dp5044
sbsS'TRuleBeamFilter_Width'
p5045
(i__main__
ClassDefinition
p5046
(dp5047
g4
I1
sg5
I0
sg6
g5045
sg7
S'TRuleBeamFilter'
p5048
sg9
I00
sg10
(lp5049
sg12
(lp5050
(S'int'
p5051
S'width'
p5052
g5052
g1294
I0
I0
I01
Ntp5053
asg29
(dp5054
sbsS'TRandomClassifier'
p5055
(i__main__
ClassDefinition
p5056
(dp5057
g4
I1
sg5
I0
sg6
g5055
sg7
S'TClassifier'
p5058
sg9
I00
sg10
(lp5059
sg12
(lp5060
(S'TDistribution'
p5061
S'probabilities'
p5062
g5062
S'probabilities of predictions'
p5063
I0
I0
I00
Ntp5064
ag791
ag796
asg29
(dp5065
sbsS'TFindNearest'
p5066
(i__main__
ClassDefinition
p5067
(dp5068
g4
I1
sg5
I0
sg6
g5066
sg7
S'TOrange'
p5069
sg9
I01
sg10
(lp5070
sg12
(lp5071
g422
ag427
asg29
(dp5072
sbsS'TLogRegFitter_Cholesky'
p5073
(i__main__
ClassDefinition
p5074
(dp5075
g4
I1
sg5
I0
sg6
g5073
sg7
S'TLogRegFitter'
p5076
sg9
I00
sg10
(lp5077
sg12
(lp5078
sg29
(dp5079
sbsS'TClassifierFromVar'
p5080
(i__main__
ClassDefinition
p5081
(dp5082
g4
I1
sg5
I0
sg6
g5080
sg7
S'TClassifier'
p5083
sg9
I00
sg10
(lp5084
sg12
(lp5085
(S'TVariable'
p5086
S'whichVar'
p5087
(g5087
S'variable'
p5088
tp5089
S' variable'
p5090
I0
I0
I00
Ntp5091
a(S'TTransformValue'
p5092
S'transformer'
p5093
g5093
S'transformer'
p5094
I0
I0
I00
Ntp5095
a(S'TDistribution'
p5096
S'distributionForUnknown'
p5097
S'distribution_for_unknown'
p5098
S'distribution for unknown value'
p5099
I0
I0
I00
Ntp5100
a(S'bool'
p5101
S'transformUnknowns'
p5102
S'transform_unknowns'
p5103
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p5104
I0
I0
I01
Ntp5105
ag791
ag796
asg29
(dp5106
sbsS'TIM'
p5107
(i__main__
ClassDefinition
p5108
(dp5109
g4
I1
sg5
I0
sg6
g5107
sg7
S'TOrange'
p5110
sg9
I00
sg10
(lp5111
sg12
(lp5112
(S'int'
p5113
S'varType'
p5114
S'var_type'
p5115
S' class variable type'
p5116
I0
I0
I01
S'Variable_Type'
p5117
tp5118
a(S'TExampleTable'
p5119
S'rowExamples'
p5120
S'row_examples'
p5121
S'examples with free attributes for each row'
p5122
I0
I0
I00
Ntp5123
asg29
(dp5124
sbsS'TTreeSplitConstructor_OneAgainstOthers'
p5125
(i__main__
ClassDefinition
p5126
(dp5127
g4
I1
sg5
I0
sg6
g5125
sg7
S'TTreeSplitConstructor_Measure'
p5128
sg9
I00
sg10
(lp5129
sg12
(lp5130
g2388
ag2393
ag1707
asg29
(dp5131
sbsS'TClassifier'
p5132
(i__main__
ClassDefinition
p5133
(dp5134
g4
I1
sg5
I0
sg6
g5132
sg7
S'TOrange'
p5135
sg9
I00
sg10
(lp5136
sg12
(lp5137
g791
ag796
asg29
(dp5138
sbsS'TIG'
p5139
(i__main__
ClassDefinition
p5140
(dp5141
g4
I1
sg5
I0
sg6
g5139
sg7
S'TOrange'
p5142
sg9
I00
sg10
(lp5143
sg12
(lp5144
sg29
(dp5145
sbsS'TMeasureAttribute_relief'
p5146
(i__main__
ClassDefinition
p5147
(dp5148
g4
I1
sg5
I0
sg6
g5146
sg7
S'TMeasureAttribute'
p5149
sg9
I00
sg10
(lp5150
sg12
(lp5151
(S'float'
p5152
g987
g987
S'number of neighbours'
p5153
I0
I0
I01
Ntp5154
a(S'float'
p5155
g991
g991
S'number of reference examples'
p5156
I0
I0
I01
Ntp5157
a(S'bool'
p5158
S'checkCachedData'
p5159
S'check_cached_data'
p5160
S'tells whether to check the checksum of the data before reusing the cached neighbours'
p5161
I0
I0
I01
Ntp5162
ag462
ag467
ag472
ag477
asg29
(dp5163
sbsS'TMeasureAttribute_logOddsRatio'
p5164
(i__main__
ClassDefinition
p5165
(dp5166
g4
I1
sg5
I0
sg6
g5164
sg7
S'TMeasureAttributeFromProbabilities'
p5167
sg9
I00
sg10
(lp5168
sg12
(lp5169
g446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp5170
sbsS'TTreeExampleSplitter_Python'
p5171
(i__main__
ClassDefinition
p5172
(dp5173
g4
I1
sg5
I0
sg6
g5171
sg7
S'TTreeExampleSplitter'
p5174
sg9
I00
sg10
(lp5175
sg12
(lp5176
sg29
(dp5177
sbsS'TFilter_random'
p5178
(i__main__
ClassDefinition
p5179
(dp5180
g4
I1
sg5
I0
sg6
g5178
sg7
S'TFilter'
p5181
sg9
I00
sg10
(lp5182
sg12
(lp5183
(S'float'
p5184
S'prob'
p5185
g5185
S'probability of selecting an example'
p5186
I0
I0
I01
Ntp5187
a(S'TRandomGenerator'
p5188
S'randomGenerator'
p5189
S'random_generator'
p5190
S'random generator'
p5191
I0
I0
I00
Ntp5192
ag259
ag263
asg29
(dp5193
sbsS'TC45ExampleGenerator'
p5194
(i__main__
ClassDefinition
p5195
(dp5196
g4
I1
sg5
I0
sg6
g5194
sg7
S'TFileExampleGenerator'
p5197
sg9
I00
sg10
(lp5198
sg12
(lp5199
(S'TBoolList'
p5200
S'skip'
p5201
g5201
S'a boolean list, one element per attribute, denoting which attributes to skip'
p5202
I0
I0
I00
Ntp5203
ag737
ag742
ag747
ag121
ag125
asg29
(dp5204
sbsS'TProbabilityEstimatorConstructor_loess'
p5205
(i__main__
ClassDefinition
p5206
(dp5207
g4
I1
sg5
I0
sg6
g5205
sg7
S'TProbabilityEstimatorConstructor'
p5208
sg9
I00
sg10
(lp5209
sg12
(lp5210
(S'float'
p5211
S'windowProportion'
p5212
S'window_proportion'
p5213
S'The proportion of points in a window for LR'
p5214
I0
I0
I01
Ntp5215
a(S'int'
p5216
S'nPoints'
p5217
S'n_points'
p5218
S'The number of points on curve (negative means the given number of points is inserted in each interval)'
p5219
I0
I0
I01
Ntp5220
a(S'int'
p5221
S'distributionMethod'
p5222
S'distribution_method'
p5223
S" Meaning of the 'nPoints'"
p5224
I0
I0
I01
S'ProbabilityEstimatorConstructor_loess_DistributionMethod'
p5225
tp5226
asg29
(dp5227
S'DistributionMethod'
p5228
(lp5229
(S'Minimal'
p5230
S'DISTRIBUTE_MINIMAL'
p5231
tp5232
a(S'Factor'
p5233
S'DISTRIBUTE_FACTOR'
p5234
tp5235
a(S'Fixed'
p5236
S'DISTRIBUTE_FIXED'
p5237
tp5238
a(S'Uniform'
p5239
S'DISTRIBUTE_UNIFORM'
p5240
tp5241
a(S'Maximal'
p5242
S'DISTRIBUTE_MAXIMAL'
p5243
tp5244
assbsS'TLogRegFitter'
p5245
(i__main__
ClassDefinition
p5246
(dp5247
g4
I1
sg5
I0
sg6
g5245
sg7
S'TOrange'
p5248
sg9
I01
sg10
(lp5249
sg12
(lp5250
sg29
(dp5251
S'ErrorCode'
p5252
(lp5253
(S'OK'
p5254
I0
tp5255
a(S'Infinity'
p5256
I1
tp5257
a(S'Divergence'
p5258
I2
tp5259
a(S'Constant'
p5260
I3
tp5261
a(S'Singularity'
p5262
I4
tp5263
assbsS'TStopIMClusteringByAssessor_noBigChange'
p5264
(i__main__
ClassDefinition
p5265
(dp5266
g4
I1
sg5
I0
sg6
g5264
sg7
S'TStopIMClusteringByAssessor'
p5267
sg9
I00
sg10
(lp5268
sg12
(lp5269
sg29
(dp5270
sbsS'TImputerConstructor_random'
p5271
(i__main__
ClassDefinition
p5272
(dp5273
g4
I1
sg5
I0
sg6
g5271
sg7
S'TImputerConstructor'
p5274
sg9
I00
sg10
(lp5275
sg12
(lp5276
(S'bool'
p5277
S'deterministic'
p5278
g5278
S"tells whether to initialize random by example's CRC (default: false)"
p5279
I0
I0
I01
Ntp5280
ag1487
asg29
(dp5281
sbsS'TRandomLearner'
p5282
(i__main__
ClassDefinition
p5283
(dp5284
g4
I1
sg5
I0
sg6
g5282
sg7
S'TLearner'
p5285
sg9
I00
sg10
(lp5286
sg12
(lp5287
(S'TDistribution'
p5288
S'probabilities'
p5289
g5289
S'probabilities of predictions'
p5290
I0
I0
I00
Ntp5291
ag47
asg29
(dp5292
sbsS'TItemsetsSparseInducer'
p5293
(i__main__
ClassDefinition
p5294
(dp5295
g4
I1
sg5
I0
sg6
g5293
sg7
S'TOrange'
p5296
sg9
I00
sg10
(lp5297
sg12
(lp5298
(S'int'
p5299
S'maxItemSets'
p5300
S'max_item_sets'
p5301
S'maximal number of itemsets (increase if you want)'
p5302
I0
I0
I01
Ntp5303
a(S'float'
p5304
S'support'
p5305
g5305
S'required support'
p5306
I0
I0
I01
Ntp5307
a(S'bool'
p5308
S'storeExamples'
p5309
S'store_examples'
p5310
S'stores examples corresponding to itemsets'
p5311
I0
I0
I01
Ntp5312
asg29
(dp5313
sbsS'TRuleBeamInitializer_Default'
p5314
(i__main__
ClassDefinition
p5315
(dp5316
g4
I1
sg5
I0
sg6
g5314
sg7
S'TRuleBeamInitializer'
p5317
sg9
I00
sg10
(lp5318
sg12
(lp5319
sg29
(dp5320
sbsS'TImputerConstructor_minimal'
p5321
(i__main__
ClassDefinition
p5322
(dp5323
g4
I1
sg5
I0
sg6
g5321
sg7
S'TImputerConstructor'
p5324
sg9
I00
sg10
(lp5325
sg12
(lp5326
g1487
asg29
(dp5327
sbsS'TMeasureAttribute_cost'
p5328
(i__main__
ClassDefinition
p5329
(dp5330
g4
I1
sg5
I0
sg6
g5328
sg7
S'TMeasureAttributeFromProbabilities'
p5331
sg9
I00
sg10
(lp5332
sg12
(lp5333
(S'TCostMatrix'
p5334
S'cost'
p5335
g5335
S'cost matrix'
p5336
I0
I0
I00
Ntp5337
ag446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp5338
sbsS'TClustersFromIM'
p5339
(i__main__
ClassDefinition
p5340
(dp5341
g4
I1
sg5
I0
sg6
g5339
sg7
S'TOrange'
p5342
sg9
I01
sg10
(lp5343
sg12
(lp5344
sg29
(dp5345
sbsS'TRuleCovererAndRemover_Default'
p5346
(i__main__
ClassDefinition
p5347
(dp5348
g4
I1
sg5
I0
sg6
g5346
sg7
S'TRuleCovererAndRemover'
p5349
sg9
I00
sg10
(lp5350
sg12
(lp5351
sg29
(dp5352
sbsS'TClustersFromIMByAssessor'
p5353
(i__main__
ClassDefinition
p5354
(dp5355
g4
I1
sg5
I0
sg6
g5353
sg7
S'TClustersFromIM'
p5356
sg9
I00
sg10
(lp5357
sg12
(lp5358
(S'TColumnAssessor'
p5359
S'columnAssessor'
p5360
S'column_assessor'
p5361
S'column quality assessor'
p5362
I0
I0
I00
Ntp5363
a(S'TStopIMClusteringByAssessor'
p5364
S'stopCriterion'
p5365
S'stop_criterion'
p5366
S'stop criterion'
p5367
I0
I0
I00
Ntp5368
asg29
(dp5369
sbsS'TDomainContingency'
p5370
(i__main__
ClassDefinition
p5371
(dp5372
g4
I1
sg5
I0
sg6
g5370
sg7
g2579
sg9
I00
sg10
(lp5373
sg12
(lp5374
(S'TDistribution'
p5375
S'classes'
p5376
g5376
S'distribution of class values'
p5377
I0
I0
I00
Ntp5378
a(S'bool'
p5379
S'classIsOuter'
p5380
S'class_is_outer'
p5381
S'tells whether the class is the outer variable'
p5382
I0
I0
I01
Ntp5383
asg29
(dp5384
sbsS'TEarthClassifier'
p5385
(i__main__
ClassDefinition
p5386
(dp5387
g4
I1
sg5
I0
sg6
g5385
sg7
S'TClassifierFD'
p5388
sg9
I00
sg10
(lp5389
sg12
(lp5390
(S'int'
p5391
S'num_preds'
p5392
g5392
S'Number of predictor variables'
p5393
I0
I0
I01
Ntp5394
a(S'int'
p5395
S'num_terms'
p5396
g5396
S'Number of used terms'
p5397
I0
I0
I01
Ntp5398
a(S'int'
p5399
S'max_terms'
p5400
g5400
S'Maximum number of terms'
p5401
I0
I0
I01
Ntp5402
a(S'int'
p5403
S'num_responses'
p5404
g5404
S'Number of response variables'
p5405
I0
I0
I01
Ntp5406
a(S'TBoolList'
p5407
S'best_set'
p5408
g5408
S'Used terms.'
p5409
I0
I0
I00
Ntp5410
a(S'TFloatListList'
p5411
S'dirs'
p5412
g5412
S'max_preds x num_preds matrix'
p5413
I0
I0
I00
Ntp5414
a(S'TFloatListList'
p5415
S'cuts'
p5416
g5416
S'max_preds x num_preds matrix of cuts'
p5417
I0
I0
I00
Ntp5418
a(S'TFloatList'
p5419
S'betas'
p5420
g5420
S'Term coefficients;'
p5421
I0
I0
I00
Ntp5422
ag901
ag791
ag796
asg29
(dp5423
sbsS'TValueList'
p5424
(i__main__
ClassDefinition
p5425
(dp5426
g4
I1
sg5
I0
sg6
g5424
sg7
g2579
sg9
I00
sg10
(lp5427
sg12
(lp5428
(S'TVariable'
p5429
S'variable'
p5430
g5430
S'the variable to which the list applies'
p5431
I0
I0
I00
Ntp5432
asg29
(dp5433
sbsS'TTreeExampleSplitter_UnknownsToCommon'
p5434
(i__main__
ClassDefinition
p5435
(dp5436
g4
I1
sg5
I0
sg6
g5434
sg7
S'TTreeExampleSplitter'
p5437
sg9
I00
sg10
(lp5438
sg12
(lp5439
sg29
(dp5440
sbsS'TDomainTransformerConstructor'
p5441
(i__main__
ClassDefinition
p5442
(dp5443
g4
I1
sg5
I0
sg6
g5441
sg7
S'TOrange'
p5444
sg9
I01
sg10
(lp5445
sg12
(lp5446
(S'bool'
p5447
S'preservesOrder'
p5448
S'preserves_order'
p5449
S'a flag telling that original attributes have corresponding attribute in the same order'
p5450
I01
I0
I01
Ntp5451
a(S'bool'
p5452
S'preservesAttributes'
p5453
S'preserves_attributes'
p5454
S'a flag telling whether each original has a corresponding new attribute'
p5455
I01
I0
I01
Ntp5456
asg29
(dp5457
sbsS'TIGConstructor'
p5458
(i__main__
ClassDefinition
p5459
(dp5460
g4
I1
sg5
I0
sg6
g5458
sg7
S'TOrange'
p5461
sg9
I01
sg10
(lp5462
sg12
(lp5463
sg29
(dp5464
sbsS'TTreeDescender_UnknownToNode'
p5465
(i__main__
ClassDefinition
p5466
(dp5467
g4
I1
sg5
I0
sg6
g5465
sg7
g2227
sg9
I0
sg10
(lp5468
sg12
(lp5469
sg29
(dp5470
sbsS'TMakeRandomIndices'
p5471
(i__main__
ClassDefinition
p5472
(dp5473
g4
I1
sg5
I0
sg6
g5471
sg7
S'TOrange'
p5474
sg9
I00
sg10
(lp5475
sg12
(lp5476
g282
ag286
ag291
asg29
(dp5477
S'Stratification'
p5478
(lp5479
(S'StratifiedIfPossible'
p5480
S'-1'
p5481
tp5482
a(S'NotStratified'
p5483
I0
tp5484
a(S'Stratified'
p5485
I1
tp5486
assbsS'TFilter_Python'
p5487
(i__main__
ClassDefinition
p5488
(dp5489
g4
I1
sg5
I0
sg6
g5487
sg7
S'TFilter'
p5490
sg9
I00
sg10
(lp5491
sg12
(lp5492
g259
ag263
asg29
(dp5493
sbsS'TExamplesDistanceConstructor_Maximal'
p5494
(i__main__
ClassDefinition
p5495
(dp5496
g4
I1
sg5
I0
sg6
g5494
sg7
S'TExamplesDistanceConstructor_Normalized'
p5497
sg9
I00
sg10
(lp5498
sg12
(lp5499
g96
ag101
ag106
asg29
(dp5500
sbsS'TExamplesDistanceConstructor_Python'
p5501
(i__main__
ClassDefinition
p5502
(dp5503
g4
I1
sg5
I0
sg6
g5501
sg7
S'TExamplesDistanceConstructor'
p5504
sg9
I00
sg10
(lp5505
sg12
(lp5506
g106
asg29
(dp5507
sbsS'TPythonVariable'
p5508
(i__main__
ClassDefinition
p5509
(dp5510
g4
I1
sg5
I0
sg6
g5508
sg7
S'TVariable'
p5511
sg9
I00
sg10
(lp5512
sg12
(lp5513
(S'bool'
p5514
S'usePickle'
p5515
S'use_pickle'
p5516
S'tells whether to use pickle for saving to/loading from files'
p5517
I0
I0
I01
Ntp5518
a(S'bool'
p5519
S'useSomeValue'
p5520
S'use_some_value'
p5521
S'tells whether the Variable will operate on Value or SomeValue (default)'
p5522
I0
I0
I01
Ntp5523
ag642
ag646
ag650
ag655
ag660
ag665
ag670
asg29
(dp5524
sbsS'TGaussianNoiseGenerator'
p5525
(i__main__
ClassDefinition
p5526
(dp5527
g4
I1
sg5
I0
sg6
g5525
sg7
S'TChangeExampleGenerator'
p5528
sg9
I00
sg10
(lp5529
sg12
(lp5530
(S'TIntFloatList'
p5531
S'deviations'
p5532
g5532
S"deviations for attributes' values"
p5533
I0
I0
I00
Ntp5534
a(S'TRandomGenerator'
p5535
S'randomGenerator'
p5536
S'random_generator'
p5537
S'random generator'
p5538
I0
I0
I00
Ntp5539
ag121
ag125
asg29
(dp5540
sbsS'TClustersFromDistributionsByAssessor'
p5541
(i__main__
ClassDefinition
p5542
(dp5543
g4
I1
sg5
I0
sg6
g5541
sg7
S'TClustersFromDistributions'
p5544
sg9
I00
sg10
(lp5545
sg12
(lp5546
(S'TDistributionAssessor'
p5547
S'distributionAssessor'
p5548
S'distribution_assessor'
p5549
S'column quality assessor'
p5550
I0
I0
I00
Ntp5551
a(S'TStopDistributionClustering'
p5552
S'stopCriterion'
p5553
S'stop_criterion'
p5554
S'stop criterion'
p5555
I0
I0
I00
Ntp5556
a(S'float'
p5557
S'minProfitProportion'
p5558
S'min_profit_proportion'
p5559
S'minimal merge profit'
p5560
I0
I0
I01
Ntp5561
asg29
(dp5562
sbsS'TExamplesDistance_Hamming'
p5563
(i__main__
ClassDefinition
p5564
(dp5565
g4
I1
sg5
I0
sg6
g5563
sg7
S'TExamplesDistance'
p5566
sg9
I00
sg10
(lp5567
sg12
(lp5568
(S'bool'
p5569
S'ignoreClass'
p5570
S'ignore_class'
p5571
S'if true (default), class value is ignored when computing distances'
p5572
I0
I0
I01
Ntp5573
a(S'bool'
p5574
S'ignoreUnknowns'
p5575
S'ignore_unknowns'
p5576
S'if true (default: false) unknown values are ignored in computation'
p5577
I0
I0
I01
Ntp5578
asg29
(dp5579
sbsS'TColumnAssessor_Kramer'
p5580
(i__main__
ClassDefinition
p5581
(dp5582
g4
I1
sg5
I0
sg6
g5580
sg7
S'TColumnAssessor'
p5583
sg9
I00
sg10
(lp5584
sg12
(lp5585
sg29
(dp5586
sbsS'TEVDistGetter_Python'
p5587
(i__main__
ClassDefinition
p5588
(dp5589
g4
I1
sg5
I0
sg6
g5587
sg7
S'TEVDistGetter'
p5590
sg9
I00
sg10
(lp5591
sg12
(lp5592
sg29
(dp5593
sbsS'TDiscretization'
p5594
(i__main__
ClassDefinition
p5595
(dp5596
g4
I1
sg5
I0
sg6
g5594
sg7
S'TOrange'
p5597
sg9
I01
sg10
(lp5598
sg12
(lp5599
sg29
(dp5600
sbsS'TIMByRows'
p5601
(i__main__
ClassDefinition
p5602
(dp5603
g4
I1
sg5
I0
sg6
g5601
sg7
S'TOrange'
p5604
sg9
I00
sg10
(lp5605
sg12
(lp5606
(S'int'
p5607
S'varType'
p5608
S'var_type'
p5609
S' class variable type'
p5610
I0
I0
I01
S'Variable_Type'
p5611
tp5612
asg29
(dp5613
sbsS'TAssessIMQuality'
p5614
(i__main__
ClassDefinition
p5615
(dp5616
g4
I1
sg5
I0
sg6
g5614
sg7
S'TOrange'
p5617
sg9
I00
sg10
(lp5618
sg12
(lp5619
(S'TColumnAssessor'
p5620
S'columnAssessor'
p5621
S'column_assessor'
p5622
S'column quality assessor'
p5623
I0
I0
I00
Ntp5624
asg29
(dp5625
sbsS'TRule'
p5626
(i__main__
ClassDefinition
p5627
(dp5628
g4
I1
sg5
I0
sg6
g5626
sg7
S'TOrange'
p5629
sg9
I00
sg10
(lp5630
sg12
(lp5631
(S'TFilter'
p5632
S'filter'
p5633
g5633
S'stored filter for this rule'
p5634
I0
I0
I00
Ntp5635
a(S'TFilter'
p5636
S'valuesFilter'
p5637
S'values_filter'
p5638
S'Filter_values representation of main filter (sometimes needed)'
p5639
I0
I0
I00
Ntp5640
a(S'TClassifier'
p5641
S'classifier'
p5642
g5642
S'classifies an example'
p5643
I0
I0
I00
Ntp5644
a(S'TLearner'
p5645
S'learner'
p5646
g5646
S'learns a classifier from data'
p5647
I0
I0
I00
Ntp5648
a(S'TRule'
p5649
S'parentRule'
p5650
S'parent_rule'
p5651
g1294
I0
I0
I00
Ntp5652
a(S'TDistribution'
p5653
S'baseDist'
p5654
S'base_dist'
p5655
S'initial distribution'
p5656
I0
I0
I00
Ntp5657
a(S'TDistribution'
p5658
S'classDistribution'
p5659
S'class_distribution'
p5660
S'distribution of classes covered by the rule'
p5661
I0
I0
I00
Ntp5662
a(S'TExampleTable'
p5663
S'examples'
p5664
g5664
S'covered examples'
p5665
I0
I0
I00
Ntp5666
a(S'int'
p5667
S'weightID'
p5668
S'weight_ID'
p5669
S'weight for the stored examples'
p5670
I0
I0
I01
Ntp5671
a(S'float'
p5672
S'quality'
p5673
g5673
S'some measure of rule quality'
p5674
I0
I0
I01
Ntp5675
a(S'int'
p5676
S'complexity'
p5677
g5677
g1294
I0
I0
I01
Ntp5678
a(S'float'
p5679
S'chi'
p5680
g5680
g1294
I0
I0
I01
Ntp5681
a(S'int'
p5682
S'requiredConditions'
p5683
S'required_conditions'
p5684
S'conditions that are mandatory in rule - rule attribute significance avoids these'
p5685
I0
I0
I01
Ntp5686
asg29
(dp5687
sbsS'TPreprocessor_addClassNoise'
p5688
(i__main__
ClassDefinition
p5689
(dp5690
g4
I1
sg5
I0
sg6
g5688
sg7
S'TPreprocessor'
p5691
sg9
I00
sg10
(lp5692
sg12
(lp5693
(S'float'
p5694
S'proportion'
p5695
g5695
S'proportion of changed class values'
p5696
I0
I0
I01
Ntp5697
a(S'TRandomGenerator'
p5698
S'randomGenerator'
p5699
S'random_generator'
p5700
S'random number generator'
p5701
I0
I0
I00
Ntp5702
asg29
(dp5703
sbsS'TFilter'
p5704
(i__main__
ClassDefinition
p5705
(dp5706
g4
I1
sg5
I0
sg6
g5704
sg7
S'TOrange'
p5707
sg9
I01
sg10
(lp5708
sg12
(lp5709
g259
ag263
asg29
(dp5710
sbsS'TRuleBeamCandidateSelector_TakeAll'
p5711
(i__main__
ClassDefinition
p5712
(dp5713
g4
I1
sg5
I0
sg6
g5711
sg7
S'TRuleBeamCandidateSelector'
p5714
sg9
I00
sg10
(lp5715
sg12
(lp5716
sg29
(dp5717
sbsS'TPreprocessor_addMissing'
p5718
(i__main__
ClassDefinition
p5719
(dp5720
g4
I1
sg5
I0
sg6
g5718
sg7
S'TPreprocessor'
p5721
sg9
I00
sg10
(lp5722
sg12
(lp5723
(S'TVariableFloatMap'
p5724
S'proportions'
p5725
g5725
S'proportion of removed values for individual values'
p5726
I0
I0
I00
Ntp5727
a(S'float'
p5728
S'defaultProportion'
p5729
S'default_proportion'
p5730
S'default proportion of removed values (for attributes not specified above)'
p5731
I0
I0
I01
Ntp5732
a(S'int'
p5733
S'specialType'
p5734
S'special_type'
p5735
S'special value type (1=DC, 2=DK)'
p5736
I0
I0
I01
Ntp5737
a(S'TRandomGenerator'
p5738
S'randomGenerator'
p5739
S'random_generator'
p5740
S'random number generator'
p5741
I0
I0
I00
Ntp5742
asg29
(dp5743
sbsS'TThresholdDiscretizer'
p5744
(i__main__
ClassDefinition
p5745
(dp5746
g4
I1
sg5
I0
sg6
g5744
sg7
S'TDiscretizer'
p5747
sg9
I00
sg10
(lp5748
sg12
(lp5749
(S'float'
p5750
S'threshold'
p5751
g5751
S'threshold'
p5752
I0
I0
I01
Ntp5753
ag318
asg29
(dp5754
sbsS'TClusteringTreeLearner'
p5755
(i__main__
ClassDefinition
p5756
(dp5757
g4
I1
sg5
I0
sg6
g5755
sg7
S'TMultiLearner'
p5758
sg9
I00
sg10
(lp5759
sg12
(lp5760
(S'float'
p5761
S'minMajority'
p5762
S'min_majority'
p5763
S'the minimal majority each class variable must exceed to stop building'
p5764
I0
I0
I01
Ntp5765
a(S'float'
p5766
S'minMSE'
p5767
S'min_MSE'
p5768
S'the minimal MSE each class variable must be lower than to stop building'
p5769
I0
I0
I01
Ntp5770
a(S'int'
p5771
S'minInstances'
p5772
S'min_instances'
p5773
S'the minimal number of examples for division to continue'
p5774
I0
I0
I01
Ntp5775
a(S'int'
p5776
S'maxDepth'
p5777
S'max_depth'
p5778
S'the maximal depth a tree can reach'
p5779
I0
I0
I01
Ntp5780
a(S'int'
p5781
S'method'
p5782
g5782
g1294
I0
I0
I01
Ntp5783
a(S'float'
p5784
S'skipProb'
p5785
S'skip_prob'
p5786
g1294
I0
I0
I01
Ntp5787
a(S'TRandomGenerator'
p5788
S'randomGenerator'
p5789
S'random_generator'
p5790
g1294
I0
I0
I00
Ntp5791
ag4094
ag4098
asg29
(dp5792
sbsS'TValueFilter_stringList'
p5793
(i__main__
ClassDefinition
p5794
(dp5795
g4
I1
sg5
I0
sg6
g5793
sg7
S'TValueFilter'
p5796
sg9
I00
sg10
(lp5797
sg12
(lp5798
(S'TStringList'
p5799
S'values'
p5800
g5800
S'accepted values'
p5801
I0
I0
I00
Ntp5802
a(S'bool'
p5803
S'caseSensitive'
p5804
S'case_sensitive'
p5805
S'if true (default), the comparison is case sensitive'
p5806
I0
I0
I01
Ntp5807
ag2835
ag2840
asg29
(dp5808
sbsS'TDomain'
p5809
(i__main__
ClassDefinition
p5810
(dp5811
g4
I1
sg5
I0
sg6
g5809
sg7
S'TOrange'
p5812
sg9
I00
sg10
(lp5813
sg12
(lp5814
(S'TVariable'
p5815
S'classVar'
p5816
S'class_var'
p5817
S'class variable'
p5818
I01
I0
I00
Ntp5819
a(S'TVarList'
p5820
S'attributes'
p5821
(g5821
S'features'
p5822
tp5823
S' list of attributes, excluding the class'
p5824
I01
I0
I00
Ntp5825
a(S'TVarList'
p5826
S'variables'
p5827
g5827
S'list of attributes, including the class at the end of the list'
p5828
I01
I0
I00
Ntp5829
a(S'TVarList'
p5830
S'classVars'
p5831
S'class_vars'
p5832
S'list of class variables, if multiple; else None'
p5833
I01
I0
I00
Ntp5834
a(S'int'
p5835
S'version'
p5836
g5836
S"unique version identifier; it's changed each time a domain is changed"
p5837
I01
I0
I01
Ntp5838
asg29
(dp5839
sbsS'TTreePruner_SameMajority'
p5840
(i__main__
ClassDefinition
p5841
(dp5842
g4
I1
sg5
I0
sg6
g5840
sg7
S'TTreePruner'
p5843
sg9
I00
sg10
(lp5844
sg12
(lp5845
sg29
(dp5846
sbsS'TDomainDiscretization'
p5847
(i__main__
ClassDefinition
p5848
(dp5849
g4
I1
sg5
I0
sg6
g5847
sg7
S'TOrange'
p5850
sg9
I00
sg10
(lp5851
sg12
(lp5852
(S'TDiscretization'
p5853
S'discretization'
p5854
g5854
S'discretization'
p5855
I0
I0
I00
Ntp5856
asg29
(dp5857
sbsS'TTreeDescender_Python'
p5858
(i__main__
ClassDefinition
p5859
(dp5860
g4
I1
sg5
I0
sg6
g5858
sg7
S'TTreeDescender'
p5861
sg9
I00
sg10
(lp5862
sg12
(lp5863
sg29
(dp5864
sbsS'TKernelFunc'
p5865
(i__main__
ClassDefinition
p5866
(dp5867
g4
I1
sg5
I0
sg6
g5865
sg7
S'TOrange'
p5868
sg9
I01
sg10
(lp5869
sg12
(lp5870
sg29
(dp5871
sbsS'TRuleClassifierConstructor_Python'
p5872
(i__main__
ClassDefinition
p5873
(dp5874
g4
I1
sg5
I0
sg6
g5872
sg7
S'TRuleClassifierConstructor'
p5875
sg9
I00
sg10
(lp5876
sg12
(lp5877
sg29
(dp5878
sbsS'THierarchicalCluster'
p5879
(i__main__
ClassDefinition
p5880
(dp5881
g4
I1
sg5
I0
sg6
g5879
sg7
S'TOrange'
p5882
sg9
I00
sg10
(lp5883
sg12
(lp5884
(S'THierarchicalClusterList'
p5885
S'branches'
p5886
g5886
S'subclusters'
p5887
I0
I0
I00
Ntp5888
a(S'float'
p5889
S'height'
p5890
g5890
S'height'
p5891
I0
I0
I01
Ntp5892
a(S'TIntList'
p5893
S'mapping'
p5894
g5894
S'indices to the list of all elements in the clustering'
p5895
I0
I0
I00
Ntp5896
a(S'int'
p5897
S'first'
p5898
g5898
S"the index into 'elements' to the first element of the cluster"
p5899
I0
I0
I01
Ntp5900
a(S'int'
p5901
S'last'
p5902
g5902
S"the index into 'elements' to the one after the last element of the cluster"
p5903
I0
I0
I01
Ntp5904
asg29
(dp5905
sbsS'TBasketFeeder'
p5906
(i__main__
ClassDefinition
p5907
(dp5908
g4
I1
sg5
I0
sg6
g5906
sg7
S'TOrange'
p5909
sg9
I00
sg10
(lp5910
sg12
(lp5911
(S'bool'
p5912
S'dontStore'
p5913
S'dont_store'
p5914
S'disables items storing'
p5915
I0
I0
I01
Ntp5916
a(S'bool'
p5917
S'dontCheckStored'
p5918
S'dont_check_stored'
p5919
S'disables items lookup in the global cache'
p5920
I0
I0
I01
Ntp5921
a(S'TDomain'
p5922
S'domain'
p5923
g5923
S'domain where the meta attributes are stored'
p5924
I0
I0
I00
Ntp5925
a(S'TDomain'
p5926
S'sourceDomain'
p5927
S'source_domain'
p5928
S'domain with items that can be reused'
p5929
I0
I0
I00
Ntp5930
asg29
(dp5931
sbsS'TSubsetsGenerator_minMaxSize_iterator'
p5932
(i__main__
ClassDefinition
p5933
(dp5934
g4
I1
sg5
I0
sg6
g5932
sg7
S'TSubsetsGenerator_iterator'
p5935
sg9
I00
sg10
(lp5936
sg12
(lp5937
(S'int'
p5938
g4456
g4456
g1294
I01
I0
I01
Ntp5939
a(S'int'
p5940
S'max'
p5941
g5941
S'maximal subset size'
p5942
I0
I0
I01
Ntp5943
a(S'bool'
p5944
S'moreToCome'
p5945
S'more_to_come'
p5946
g1294
I01
I0
I01
Ntp5947
ag192
asg29
(dp5948
sbsS'TPreprocessor_dropMissing'
p5949
(i__main__
ClassDefinition
p5950
(dp5951
g4
I1
sg5
I0
sg6
g5949
sg7
S'TPreprocessor'
p5952
sg9
I00
sg10
(lp5953
sg12
(lp5954
sg29
(dp5955
sbsS'TComputeDomainContingency'
p5956
(i__main__
ClassDefinition
p5957
(dp5958
g4
I1
sg5
I0
sg6
g5956
sg7
S'TOrange'
p5959
sg9
I00
sg10
(lp5960
sg12
(lp5961
g28
asg29
(dp5962
sbsS'TFixedDiscretization'
p5963
(i__main__
ClassDefinition
p5964
(dp5965
g4
I1
sg5
I0
sg6
g5963
sg7
S'TDiscretization'
p5966
sg9
I00
sg10
(lp5967
sg12
(lp5968
(S'TFloatList'
p5969
S'points'
p5970
g5970
S'cut-off points'
p5971
I0
I0
I00
Ntp5972
asg29
(dp5973
sbsS'TExampleClusters'
p5974
(i__main__
ClassDefinition
p5975
(dp5976
g4
I1
sg5
I0
sg6
g5974
sg7
S'TGeneralExampleClustering'
p5977
sg9
I00
sg10
(lp5978
sg12
(lp5979
(S'TExampleCluster'
p5980
S'root'
p5981
g5981
S'root of cluster hierarchy'
p5982
I0
I0
I00
Ntp5983
a(S'float'
p5984
S'quality'
p5985
g5985
S"'quality' of clustering"
p5986
I0
I0
I01
Ntp5987
asg29
(dp5988
sbsS'TRuleDataStoppingCriteria'
p5989
(i__main__
ClassDefinition
p5990
(dp5991
g4
I1
sg5
I0
sg6
g5989
sg7
S'TOrange'
p5992
sg9
I01
sg10
(lp5993
sg12
(lp5994
sg29
(dp5995
sbsS'TPreprocessor_filter'
p5996
(i__main__
ClassDefinition
p5997
(dp5998
g4
I1
sg5
I0
sg6
g5996
sg7
S'TPreprocessor'
p5999
sg9
I00
sg10
(lp6000
sg12
(lp6001
(S'TFilter'
p6002
S'filter'
p6003
g6003
S'filter'
p6004
I0
I0
I00
Ntp6005
asg29
(dp6006
sbsS'TMakeRandomIndices2'
p6007
(i__main__
ClassDefinition
p6008
(dp6009
g4
I1
sg5
I0
sg6
g6007
sg7
S'TMakeRandomIndices'
p6010
sg9
I00
sg10
(lp6011
sg12
(lp6012
(S'float'
p6013
S'p0'
p6014
g6014
S"a proportion or a number of 0's"
p6015
I0
I0
I01
Ntp6016
ag282
ag286
ag291
asg29
(dp6017
sbsS'TLookupLearner'
p6018
(i__main__
ClassDefinition
p6019
(dp6020
g4
I1
sg5
I0
sg6
g6018
sg7
S'TLearner'
p6021
sg9
I00
sg10
(lp6022
sg12
(lp6023
(S'TLearner'
p6024
S'learnerForUnknown'
p6025
S'learner_for_unknown'
p6026
S'a learner for classifying cases not found in the table'
p6027
I0
I0
I00
Ntp6028
a(S'bool'
p6029
S'allowFastLookups'
p6030
S'allow_fast_lookups'
p6031
S'if true, it constructs LookupClassifiers for <=3 attributes'
p6032
I0
I0
I01
Ntp6033
a(S'int'
p6034
S'unknownsHandling'
p6035
S'unknowns_handling'
p6036
S'0 omit examples with unknowns, 1 distribute them, 2 keep them in table'
p6037
I0
I0
I01
Ntp6038
ag47
asg29
(dp6039
sbsS'TImputeClassifier'
p6040
(i__main__
ClassDefinition
p6041
(dp6042
g4
I1
sg5
I0
sg6
g6040
sg7
S'TClassifier'
p6043
sg9
I00
sg10
(lp6044
sg12
(lp6045
(S'TClassifierFromVar'
p6046
S'classifierFromVar'
p6047
S'classifier_from_var'
p6048
S'ClassifierFromVar that is used to retrieve defined values'
p6049
I0
I0
I00
Ntp6050
a(S'TClassifier'
p6051
S'imputer'
p6052
g6052
S'classifier that is used to determine the missing values '
p6053
I0
I0
I00
Ntp6054
ag791
ag796
asg29
(dp6055
sbsS'TMeasureAttribute_chiSquare'
p6056
(i__main__
ClassDefinition
p6057
(dp6058
g4
I1
sg5
I0
sg6
g6056
sg7
S'TMeasureAttributeFromProbabilities'
p6059
sg9
I00
sg10
(lp6060
sg12
(lp6061
(S'bool'
p6062
S'computeProbabilities'
p6063
S'compute_probabilities'
p6064
g1294
I0
I0
I01
Ntp6065
ag446
ag451
ag457
ag462
ag467
ag472
ag477
asg29
(dp6066
sbsS'TDistribution'
p6067
(i__main__
ClassDefinition
p6068
(dp6069
g4
I1
sg5
I0
sg6
g6067
sg7
S'TSomeValue'
p6070
sg9
I01
sg10
(lp6071
sg12
(lp6072
g2191
ag2195
ag2199
ag2203
ag2207
ag2212
ag2217
ag2222
asg29
(dp6073
sbsS'TTreePruner_m'
p6074
(i__main__
ClassDefinition
p6075
(dp6076
g4
I1
sg5
I0
sg6
g6074
sg7
S'TTreePruner'
p6077
sg9
I00
sg10
(lp6078
sg12
(lp6079
(S'float'
p6080
g991
g991
S'm for m-estimate'
p6081
I0
I0
I01
Ntp6082
asg29
(dp6083
sbsS'TBiModalDiscretization'
p6084
(i__main__
ClassDefinition
p6085
(dp6086
g4
I1
sg5
I0
sg6
g6084
sg7
S'TDiscretization'
p6087
sg9
I00
sg10
(lp6088
sg12
(lp6089
(S'bool'
p6090
S'splitInTwo'
p6091
S'split_in_two'
p6092
S'if true (default), flanks are merged into a single interval'
p6093
I0
I0
I01
Ntp6094
asg29
(dp6095
sbsS'TRuleBeamRefiner_Python'
p6096
(i__main__
ClassDefinition
p6097
(dp6098
g4
I1
sg5
I0
sg6
g6096
sg7
S'TRuleBeamRefiner'
p6099
sg9
I00
sg10
(lp6100
sg12
(lp6101
sg29
(dp6102
sbsS'TClassifierFromVarFD'
p6103
(i__main__
ClassDefinition
p6104
(dp6105
g4
I1
sg5
I0
sg6
g6103
sg7
S'TClassifierFD'
p6106
sg9
I00
sg10
(lp6107
sg12
(lp6108
(S'int'
p6109
S'position'
p6110
g6110
S'position of the attribute in domain'
p6111
I0
I0
I01
Ntp6112
a(S'TTransformValue'
p6113
S'transformer'
p6114
g6114
S'transformer'
p6115
I0
I0
I00
Ntp6116
a(S'TDistribution'
p6117
S'distributionForUnknown'
p6118
S'distribution_for_unknown'
p6119
S'distribution for unknown value'
p6120
I0
I0
I00
Ntp6121
a(S'bool'
p6122
S'transformUnknowns'
p6123
S'transform_unknowns'
p6124
S'if false (default is true), unknowns stay unknown or are changed into distribution if given'
p6125
I0
I0
I01
Ntp6126
ag901
ag791
ag796
asg29
(dp6127
sbsS'TImputer_model'
p6128
(i__main__
ClassDefinition
p6129
(dp6130
g4
I1
sg5
I0
sg6
g6128
sg7
S'TImputer'
p6131
sg9
I00
sg10
(lp6132
sg12
(lp6133
(S'TClassifierList'
p6134
S'models'
p6135
g6135
S'classifiers'
p6136
I0
I0
I00
Ntp6137
asg29
(dp6138
sbsS'TFeatureByDistributions'
p6139
(i__main__
ClassDefinition
p6140
(dp6141
g4
I1
sg5
I0
sg6
g6139
sg7
S'TFeatureInducer'
p6142
sg9
I00
sg10
(lp6143
sg12
(lp6144
(S'TClustersFromDistributions'
p6145
S'clustersFromDistributions'
p6146
S'clusters_from_distributions'
p6147
S'clustering algorithm'
p6148
I0
I0
I00
Ntp6149
a(S'int'
p6150
S'completion'
p6151
g6151
S' decides how to determine the class for points not covered by any cluster'
p6152
I0
I0
I01
S'FeatureByDistributions_Completion'
p6153
tp6154
asg29
(dp6155
S'Completion'
p6156
(lp6157
(S'NoCompletion'
p6158
S'completion_no'
p6159
tp6160
a(S'CompletionByDefault'
p6161
S'completion_default'
p6162
tp6163
a(S'CompletionByBayes'
p6164
S'completion_bayes'
p6165
tp6166
assbsS'TPreprocessor_takeMissing'
p6167
(i__main__
ClassDefinition
p6168
(dp6169
g4
I1
sg5
I0
sg6
g6167
sg7
S'TPreprocessor'
p6170
sg9
I00
sg10
(lp6171
sg12
(lp6172
sg29
(dp6173
sbsS'TTreeDescender_UnknownToBranch'
p6174
(i__main__
ClassDefinition
p6175
(dp6176
g4
I1
sg5
I0
sg6
g6174
sg7
g2227
sg9
I0
sg10
(lp6177
sg12
(lp6178
sg29
(dp6179
sbsS'TTreeSplitConstructor_Attribute'
p6180
(i__main__
ClassDefinition
p6181
(dp6182
g4
I1
sg5
I0
sg6
g6180
sg7
S'TTreeSplitConstructor_Measure'
p6183
sg9
I00
sg10
(lp6184
sg12
(lp6185
g2388
ag2393
ag1707
asg29
(dp6186
sbsS'TCostMatrix'
p6187
(i__main__
ClassDefinition
p6188
(dp6189
g4
I1
sg5
I0
sg6
g6187
sg7
S'TOrange'
p6190
sg9
I00
sg10
(lp6191
sg12
(lp6192
(S'TVariable'
p6193
S'classVar'
p6194
S'class_var'
p6195
S'attribute to which the matrix applies'
p6196
I0
I0
I00
Ntp6197
a(S'int'
p6198
S'dimension'
p6199
g6199
S'dimension (should equal classVar.noOfValues())'
p6200
I01
I0
I01
Ntp6201
asg29
(dp6202
sbsS'TFilter_sameValue'
p6203
(i__main__
ClassDefinition
p6204
(dp6205
g4
I1
sg5
I0
sg6
g6203
sg7
S'TFilter'
p6206
sg9
I00
sg10
(lp6207
sg12
(lp6208
(S'int'
p6209
S'position'
p6210
g6210
S'position of the observed attribute'
p6211
I0
I0
I01
Ntp6212
a(S'TValue'
p6213
S'value'
p6214
g6214
S'value that the selected examples should have'
p6215
I0
I0
I01
Ntp6216
ag259
ag263
asg29
(dp6217
sbsS'TExamplesDistance_Euclidean'
p6218
(i__main__
ClassDefinition
p6219
(dp6220
g4
I1
sg5
I0
sg6
g6218
sg7
S'TExamplesDistance_Normalized'
p6221
sg9
I00
sg10
(lp6222
sg12
(lp6223
(S'TDomainDistributions'
p6224
S'distributions'
p6225
g6225
S'distributions (of discrete attributes only)'
p6226
I0
I0
I00
Ntp6227
a(S'TAttributedFloatList'
p6228
S'bothSpecialDist'
p6229
S'both_special_dist'
p6230
S'distances between discrete attributes if both values are unknown'
p6231
I0
I0
I00
Ntp6232
ag136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp6233
sbsS'TIMConstructor'
p6234
(i__main__
ClassDefinition
p6235
(dp6236
g4
I1
sg5
I0
sg6
g6234
sg7
S'TOrange'
p6237
sg9
I01
sg10
(lp6238
sg12
(lp6239
g2627
asg29
(dp6240
sbsS'TConditionalProbabilityEstimatorConstructor_loess'
p6241
(i__main__
ClassDefinition
p6242
(dp6243
g4
I1
sg5
I0
sg6
g6241
sg7
S'TConditionalProbabilityEstimatorConstructor'
p6244
sg9
I00
sg10
(lp6245
sg12
(lp6246
(S'float'
p6247
S'windowProportion'
p6248
S'window_proportion'
p6249
S'The proportion of points in a window for LR'
p6250
I0
I0
I01
Ntp6251
a(S'int'
p6252
S'nPoints'
p6253
S'n_points'
p6254
S'The number of points on curve'
p6255
I0
I0
I01
Ntp6256
a(S'int'
p6257
S'distributionMethod'
p6258
S'distribution_method'
p6259
S" Meaning of the 'nPoints'"
p6260
I0
I0
I01
S'ConditionalProbabilityEstimatorConstructor_loess_DistributionMethod'
p6261
tp6262
asg29
(dp6263
S'DistributionMethod'
p6264
(lp6265
(S'Minimal'
p6266
S'DISTRIBUTE_MINIMAL'
p6267
tp6268
a(S'Factor'
p6269
S'DISTRIBUTE_FACTOR'
p6270
tp6271
a(S'Fixed'
p6272
S'DISTRIBUTE_FIXED'
p6273
tp6274
a(S'Uniform'
p6275
S'DISTRIBUTE_UNIFORM'
p6276
tp6277
a(S'Maximal'
p6278
S'DISTRIBUTE_MAXIMAL'
p6279
tp6280
assbsS'TTreeSplitConstructor_Threshold'
p6281
(i__main__
ClassDefinition
p6282
(dp6283
g4
I1
sg5
I0
sg6
g6281
sg7
S'TTreeSplitConstructor_Measure'
p6284
sg9
I00
sg10
(lp6285
sg12
(lp6286
g2388
ag2393
ag1707
asg29
(dp6287
sbsS'TDistanceMap'
p6288
(i__main__
ClassDefinition
p6289
(dp6290
g4
I1
sg5
I0
sg6
g6288
sg7
S'TOrange'
p6291
sg9
I00
sg10
(lp6292
sg12
(lp6293
(S'int'
p6294
S'dim'
p6295
g6295
S'bitmap dimension (in cells)'
p6296
I01
I0
I01
Ntp6297
a(S'int'
p6298
S'matrixType'
p6299
S'matrix_type'
p6300
S'0 lower, 1 upper, 2 symmetric'
p6301
I0
I0
I01
Ntp6302
a(S'TIntList'
p6303
S'elementIndices'
p6304
S'element_indices'
p6305
S'indices to elements (one for row + one at the end)'
p6306
I01
I0
I00
Ntp6307
asg29
(dp6308
sbsS'TExampleForMissing'
p6309
(i__main__
ClassDefinition
p6310
(dp6311
g4
I1
sg5
I0
sg6
g6309
sg7
S'TExample'
p6312
sg9
I00
sg10
(lp6313
sg12
(lp6314
(S'TEFMDataDescription'
p6315
S'dataDescription'
p6316
S'data_description'
p6317
S'data description'
p6318
I0
I0
I00
Ntp6319
ag2795
ag2798
asg29
(dp6320
sbsS'TCostLearner'
p6321
(i__main__
ClassDefinition
p6322
(dp6323
g4
I1
sg5
I0
sg6
g6321
sg7
S'TMajorityLearner'
p6324
sg9
I00
sg10
(lp6325
sg12
(lp6326
(S'TCostMatrix'
p6327
S'cost'
p6328
g6328
S'cost matrix'
p6329
I0
I0
I00
Ntp6330
ag3755
ag3760
ag47
asg29
(dp6331
sbsS'TPreprocessor_drop'
p6332
(i__main__
ClassDefinition
p6333
(dp6334
g4
I1
sg5
I0
sg6
g6332
sg7
S'TPreprocessor'
p6335
sg9
I00
sg10
(lp6336
sg12
(lp6337
(S'TVariableFilterMap'
p6338
S'values'
p6339
g6339
S'variable-filter pairs'
p6340
I0
I0
I00
Ntp6341
a(S'bool'
p6342
S'conjunction'
p6343
g6343
S'decides whether to take conjunction or disjunction of values'
p6344
I0
I0
I01
Ntp6345
asg29
(dp6346
sbsS'TPreprocessor_addNoise'
p6347
(i__main__
ClassDefinition
p6348
(dp6349
g4
I1
sg5
I0
sg6
g6347
sg7
S'TPreprocessor'
p6350
sg9
I00
sg10
(lp6351
sg12
(lp6352
(S'TVariableFloatMap'
p6353
S'proportions'
p6354
g6354
S'proportion of changed values for individual attributes'
p6355
I0
I0
I00
Ntp6356
a(S'float'
p6357
S'defaultProportion'
p6358
S'default_proportion'
p6359
S'default proportion of changed values (for attributes not specified above)'
p6360
I0
I0
I01
Ntp6361
a(S'TRandomGenerator'
p6362
S'randomGenerator'
p6363
S'random_generator'
p6364
S'random number generator'
p6365
I0
I0
I00
Ntp6366
asg29
(dp6367
sbsS'TColumnAssessor_mf'
p6368
(i__main__
ClassDefinition
p6369
(dp6370
g4
I1
sg5
I0
sg6
g6368
sg7
S'TColumnAssessor'
p6371
sg9
I00
sg10
(lp6372
sg12
(lp6373
(S'float'
p6374
g991
g991
S'm for m-estimate'
p6375
I0
I0
I01
Ntp6376
asg29
(dp6377
sbsS'TSubsetsGenerator'
p6378
(i__main__
ClassDefinition
p6379
(dp6380
g4
I1
sg5
I0
sg6
g6378
sg7
S'TOrange'
p6381
sg9
I01
sg10
(lp6382
sg12
(lp6383
g2360
asg29
(dp6384
sbsS'TPreprocessor_addCensorWeight'
p6385
(i__main__
ClassDefinition
p6386
(dp6387
g4
I1
sg5
I0
sg6
g6385
sg7
S'TPreprocessor'
p6388
sg9
I00
sg10
(lp6389
sg12
(lp6390
(S'TVariable'
p6391
S'outcomeVar'
p6392
S'outcome_var'
p6393
S'outcome variable'
p6394
I0
I0
I00
Ntp6395
a(S'TVariable'
p6396
S'timeVar'
p6397
S'time_var'
p6398
S'time variable'
p6399
I0
I0
I00
Ntp6400
a(S'TValue'
p6401
S'eventValue'
p6402
S'event_value'
p6403
S'event (fail) value'
p6404
I0
I0
I01
Ntp6405
a(S'int'
p6406
S'method'
p6407
g6407
S' weighting method'
p6408
I0
I0
I01
S'Preprocessor_addCensorWeight_Method'
p6409
tp6410
a(S'float'
p6411
S'maxTime'
p6412
S'max_time'
p6413
S'maximal time'
p6414
I0
I0
I01
Ntp6415
a(S'bool'
p6416
S'addComplementary'
p6417
S'add_complementary'
p6418
S'if true (default is false), complementary examples are added for censored examples'
p6419
I0
I0
I01
Ntp6420
asg29
(dp6421
S'Method'
p6422
(lp6423
(S'Linear'
p6424
S'TPreprocessor_addCensorWeight::linear'
p6425
tp6426
a(S'KM'
p6427
S'TPreprocessor_addCensorWeight::km'
p6428
tp6429
a(S'Bayes'
p6430
S'TPreprocessor_addCensorWeight::bayes'
p6431
tp6432
assbsS'TGaussianDistribution'
p6433
(i__main__
ClassDefinition
p6434
(dp6435
g4
I1
sg5
I0
sg6
g6433
sg7
S'TDistribution'
p6436
sg9
I00
sg10
(lp6437
sg12
(lp6438
(S'float'
p6439
S'mean'
p6440
g6440
S'mu'
p6441
I0
I0
I01
Ntp6442
a(S'float'
p6443
S'sigma'
p6444
g6444
S'sigma'
p6445
I0
I0
I01
Ntp6446
ag2191
ag2195
ag2199
ag2203
ag2207
ag2212
ag2217
ag2222
asg29
(dp6447
sbsS'TProbabilityEstimator'
p6448
(i__main__
ClassDefinition
p6449
(dp6450
g4
I1
sg5
I0
sg6
g6448
sg7
S'TOrange'
p6451
sg9
I01
sg10
(lp6452
sg12
(lp6453
g714
ag719
asg29
(dp6454
sbsS'TPreprocessor'
p6455
(i__main__
ClassDefinition
p6456
(dp6457
g4
I1
sg5
I0
sg6
g6455
sg7
S'TOrange'
p6458
sg9
I01
sg10
(lp6459
sg12
(lp6460
sg29
(dp6461
sbsS'TExampleGenerator'
p6462
(i__main__
ClassDefinition
p6463
(dp6464
g4
I1
sg5
I0
sg6
g6462
sg7
S'TOrange'
p6465
sg9
I01
sg10
(lp6466
sg12
(lp6467
g121
ag125
asg29
(dp6468
sbsS'TGeneralExampleClustering'
p6469
(i__main__
ClassDefinition
p6470
(dp6471
g4
I1
sg5
I0
sg6
g6469
sg7
S'TOrange'
p6472
sg9
I01
sg10
(lp6473
sg12
(lp6474
sg29
(dp6475
sbs.